Imports System.Data.SqlClient
Imports System.Data
Imports System.Web.UI.WebControls
Imports System.Web.UI.HtmlControls
Imports System.Web.UI
Imports System.Threading
Imports System.Timers
Imports System.Configuration
Imports System.Web.Mail
Imports System.Collections
'Imports System.Web.SessionState
Imports System.ComponentModel
Imports System.Drawing
Imports System
Imports System.IO
Imports System.Web
Imports System.Web.Security
Imports System.Net.Mail


'************start****************Monal Shah****************start*******************************
Partial Public Class QuestionPaper

#Region "Constant Declaration"
    Inherits System.Web.UI.Page
    'Public intquestcnt As Integer
    ' Protected rdbut1() As System.Web.UI.HtmlControls.HtmlInputRadioButton
    Protected rdbut() As RadioButton
    Protected chkbx() As CheckBox

    'Dim quesarray(intquestcnt) As Integer
    Private ReadOnly log As log4net.ILog = log4net.LogManager.GetLogger("QuestionPaper")
    'Dim lnk As LinkButton
    Dim result As String
    Dim strCorrectAns As String
    Dim strTotQues As String
    Dim strPathDb As String = ConfigurationManager.AppSettings("PathDb")
    Dim strQuePerPage As String
    ' Dim strPrevButtonFlag As String
    Dim UserID As Integer
    Dim TestType As String = "J"
    Dim strExamDate As String
    Dim strqestionSql As String
    Dim updsqlquery(5) As String
    Const ENCRYPT_DELIMIT = "h"
    Const ENCRYPT_KEY = 124
    Dim CONS As unirecruite.Errconstants
     'Dim aTimer As System.Timers.Timer
    ' Dim objconn As New ConnectDb
    'Dim objHashTable As New Hashtable
    'Dim QCnt As Integer = 0

    ' Indravadan ****************
    'Dim SelQuesTFB As New Hashtable
    'Dim selItem As DictionaryEntry

    'Dim SelQuesTFI As New Hashtable
    'Dim selItemTFI As DictionaryEntry

    'Dim SelQuesMCB As New Hashtable
    'Dim selItemMCB As DictionaryEntry

    'Dim SelQuesMCI As New Hashtable
    'Dim selItemMCI As DictionaryEntry

    'Dim SelQuesBLB As New Hashtable
    'Dim selItemBLB As DictionaryEntry

    'Dim SelQuesBLI As New Hashtable
    'Dim selItemBLI As DictionaryEntry


#End Region

#Region "Page_Load"

    Private Sub Page_DataBinding(sender As Object, e As EventArgs) Handles Me.DataBinding

    End Sub
    '****************************************************************************************************************************************
    'Code added by Monal Shah
    'MethodName:Page_Load
    'Purpose:When User is appeared for first time at that time here Depends on Course the childed subject's Question genreated and insert in t_result
    ' and also here update the user appeared flag and also when powerfailure problem is occured at that time the powerfailure function is called from      'this and also link button is also generated by the function createcontrol 
    '***************************************************************************************************************************************
    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        Dim objconn As New ConnectDb    'object of the ConnectClass class
        Dim flagTestAppeared As Boolean
        Dim testtypevalue As Integer
        Dim objCommand As SqlCommand                   'SqlCommand object
        Dim objDataReader As SqlDataReader
        Dim objHashTable As New Hashtable
        Dim strans As SqlTransaction
        Dim sqlstr, sqlstr1 As String
        Dim myCommand1 As SqlCommand
        Dim myDataReader As SqlDataReader
        Dim vds As DataSet
        Dim vda As SqlDataAdapter
        Dim sl As SortedList
        Dim testtypevaluearr(testtypevalue) As Integer
        Dim testtypevalueal As New ArrayList
        Dim intquestcntal As New ArrayList
        Dim qcmd As SqlCommand
        Dim optcount As Integer = 0 ' holds the number of options for question

        'Start"Commented Variable"**********************
        'Dim totalquestcnt As Integer
        'Dim intquestcnt1(testtypevalue) As Integer
        'Dim intlques1(testtypevalue) As Integer
        'Dim intmques1(testtypevalue) As Integer
        'Dim inthques1(testtypevalue) As Integer
        'Dim userCode As String
        'Dim strSql As String
        'Dim intquestcnt As Integer
        'Dim intlques As Integer
        'Dim intmques As Integer
        'Dim inthques As Integer'SqlDataReader object
        'Dim quesarray(intquestcnt) As Integer
        'Dim quesarray(totalquestcnt) As Integer
        'Dim strJoinQuery As New StringBuilder
        'Dim strInsertQuery As New StringBuilder
        'Dim i As Integer
        'End**************************************

        Try

            'Dim strUserID As String = Session.Item("userid").ToString
            'Dim ExamBodyID As Integer = Session.Item("ExamBodyID")
            'If (ExamBodyID = 2) Then
            '    TDCBVT.Attributes.Add("style", " background-image: url(images/Bh_Head_MBTB.jpg);background-repeat: no-repeat;width: 100%;")
            '    TDBODY.Attributes.Add("style", "background-color: #FFFDE4; border-collapse: collapse; position: static;height: 46%; border-left: black 1px inset; background-repeat: no-repeat; border-right: black 2px inset;background-position: center 50%; border-bottom: black 2px inset; background-image: url(images/bodysimage121_MBTB.JPG);")
            'ElseIf (ExamBodyID = 1) Then
            '    TDCBVT.Attributes.Add("style", " background-image: url(images/Bh_Head.jpg);background-repeat: no-repeat;width: 100%;")
            '    TDBODY.Attributes.Add("style", "background-color: #FFFDE4; border-collapse: collapse; position: static;height: 46%; border-left: black 1px inset; background-repeat: no-repeat; border-right: black 2px inset;background-position: center 50%; border-bottom: black 2px inset; background-image: url(images/bodysimage121.JPG);")
            'End If

            'by Rajesh For the when time over then show the Result Screen 2014-06-04
            If Not (Request.QueryString("Status") Is Nothing) Then
                If Request.QueryString("Status").ToString() <> "" Then
                    FormSubmitFinish()
                    UpdatetimeForStudent()
                    Response.Redirect("ExamResult.aspx", True)
                End If
            End If
            'If (Request.QueryString("Status").Equals("")) Then
            'Else
            '    If Request.QueryString("Status").Equals("TimeOver") Then

            '    End If
            'End If
            '--------------------------2014-06-04

            ScheduleTask()

            ' lblStudentId.Text = Session.Item("userid") RollNo
            lblStudentId.Visible = True
            'lblStudentId.Text = Session.Item("RollNo")
            lblStudentId.Text = "Welcome: " + Session.Item("StdName")

            hiddButton.Attributes.Add("style", "display: none;")
            imgBtnEndExam.Attributes.Add("onClick", "javascript: return confirmFinish();")
            imgBtnUnAnswer.Attributes.Add("onClick", "javascript: getCheckedRadioButton();")
            imgBtnNext.Attributes.Add("onClick", "javascript: getCheckedRadioButton();")
            imgBtnFirst.Attributes.Add("onClick", "javascript: getCheckedRadioButton();")
            imgBtnLast.Attributes.Add("onClick", "javascript: getCheckedRadioButton();")
            imgBtnPrevious.Attributes.Add("onClick", "javascript: getCheckedRadioButton();")
            Response.Cache.SetCacheability(HttpCacheability.NoCache)
            strPathDb = ConfigurationManager.AppSettings("PathDb")

            If IsPostBack Then
                imgBtnPrevious.Visible = True
                'Creates LinkButtons
                Dim che As Integer = Session.Item("TotalQueCnt")
                CreateControl(Session.Item("TotalQueCnt"))

                'Monal shah 2011/7/8 Update Student Time
                'UpdatetimeForStudent()
                'End
            Else
                If objconn.connect() Then
                    imgStudent.ImageUrl = "StudentImageHandler.ashx?id=" & Session.Item("userid")
                    imgBtnPrevious.Visible = True
                    '******************Call getSystemSetting********************
                    getSystemSetting()
                    '******************Call getSystemSetting end********************

                    '******************Call checkTestAppeared********************
                    flagTestAppeared = checkTestAppeared()
                    '******************Call checkTestAppeared********************
                    If (flagTestAppeared = True) Then
                        Dim userapeeredflagvalue As Integer = Integer.Parse(Session.Item("UserApperedFlag"))
                        If (userapeeredflagvalue = 1) Then

                            ''Get the Coures_ID
                            sqlstr = "SELECT M_Course.Course_ID, M_Course.Course_Name As Course_Name,M_Course.Course_code as Course_code FROM t_candidate_status,M_Course  "
                            sqlstr = sqlstr & " WHERE userid = " & Session.Item("userid") & ""
                            sqlstr = sqlstr & " and t_candidate_status.Course_ID='" & Session.Item("testType") & "' and m_course.Course_ID=t_candidate_status.Course_ID" ' and m_course.del_flag='0'"
                            'objconn.connect(strPathDb)
                            myCommand1 = New SqlCommand(sqlstr, objconn.MyConnection)
                            myDataReader = myCommand1.ExecuteReader
                            While myDataReader.Read
                                Session.Add("CourseName", myDataReader.Item("Course_Name"))
                                Session.Add("CourseCode", myDataReader.Item("Course_code"))
                                Session.Add("CourseID", myDataReader.Item("Course_ID"))
                              
                            End While
                            myDataReader.Close()
                            myCommand1.Dispose()

                            ' Initialize questoin substring
                            strqestionSql = ""
                            ViewState.Add("strqestionSql", strqestionSql)


                            'Monal shah 2011/7/8 Update Student Time
                            InserttimeForStudent()
                            'End

                            'Create a soted list of questios which are answere in the previous attempts , so that they are 
                            'unanswerable in this attempt
                            'Dim vds As DataSet
                            'Dim vda As SqlDataAdapter
                            'Dim sl As New SortedList
                            'sl = New SortedList()
                            ''If objconn.connect(strPathDb) Then
                            'vds = New DataSet
                            ''vda = New SqlDataAdapter("select option_Id from t_result_option where result_id in (select result_id from t_result where  userid=" & Session.Item("userid").ToString & " and Course_id = " & Session("CourseID").ToString & ") order by result_id", objconn.MyConnection)
                            'vda = New SqlDataAdapter("select Distinct Result_id  from t_result where  userid=" & Session.Item("userid").ToString & " and Course_id = " & Session("CourseID").ToString & " and  result_id in (select  result_id from t_result_Option where option_id !=0)  order by result_id", objconn.MyConnection)
                            'vda.Fill(vds)
                            'For a As Integer = 0 To vds.Tables(0).Rows.Count - 1
                            '    If Convert.ToInt32(vds.Tables(0).Rows(a).Item(0)) > 0 Then
                            '        sl.Add(a + 1, a + 1)
                            '    End If
                            'Next
                            'ViewState.Add("at", sl)
                            'vda = Nothing
                            'vds = Nothing

                            ''End If

                            '''''' Update the sorted list so that the Question link should appear black if the answer are give all ready

                            'sl = New SortedList()
                            'vds = New DataSet
                            ''vda = New SqlDataAdapter("select option_Id from t_result_option where result_id in (select result_id from t_result where  userid=" & Session.Item("userid").ToString & " and Course_id = " & Session("CourseID").ToString & ") order by result_id", objconn.MyConnection)
                            'vda = New SqlDataAdapter("select Distinct Result_id  from t_result where  userid=" & Session.Item("userid").ToString & " and Course_id = " & Session("CourseID").ToString & " and  result_id in (select  result_id from t_result_Option where option_id !=0)  order by result_id", objconn.MyConnection)
                            'vda.Fill(vds)
                            'For a As Integer = 0 To vds.Tables(0).Rows.Count - 1
                            '    If Convert.ToInt32(vds.Tables(0).Rows(a).Item(0)) > 0 Then
                            '        sl.Add(a + 1, True)
                            '    Else
                            '        sl.Add(a + 1, False)
                            '    End If
                            'Next
                            'ViewState.Add("sl", sl)
                            ''End If
                            'vda = Nothing
                            'vds = Nothing
                            sl = New SortedList()
                            'If objconn.connect(strPathDb) Then
                            Dim vds1 As New DataTable()
                            'vda = New SqlDataAdapter("select Distinct option_Id from t_result_option where result_id in (select result_id from t_result where  userid=" & Session.Item("userid").ToString & " and Course_id = " & Session("CourseID").ToString & ") order by result_id", objconn.MyConnection)
                            vda = New SqlDataAdapter("select distinct result_id,option_id from t_result_option where result_id in (select result_id from t_result where  userid=" & Session.Item("userid").ToString & " and Course_id = " & Session("CourseID").ToString & ") order by result_id", objconn.MyConnection)
                            'vda = New SqlDataAdapter("select Distinct Result_id  from t_result where  userid=" & Session.Item("userid").ToString & " and Course_id = " & Session("CourseID").ToString & " and  result_id in (select  result_id from t_result_Option where option_id !=0)  order by result_id ", objconn.MyConnection)
                            vds = New DataSet()
                            vda.Fill(vds)
                            vds1 = vds.Tables(0)
                            vds1 = RemoveDuplicateRows(vds1, "result_id")
                            For a As Integer = 0 To vds1.Rows.Count - 1
                                If Convert.ToInt32(vds1.Rows(a).Item(1)) > 0 Then
                                    sl.Add(a + 1, a + 1)
                                End If
                            Next
                            ViewState.Add("at", sl)
                            vda = Nothing
                            vds = Nothing
                            vds1 = Nothing

                            'End If

                            ''''' Update the sorted list so that the Question link should appear black if the answer are give all ready

                            sl = New SortedList()
                            Dim slDropDown As New SortedList

                            Dim vds11 As New DataTable()
                            vds = New DataSet()
                            'vda = New SqlDataAdapter("select option_Id from t_result_option where result_id in (select result_id from t_result where  userid=" & Session.Item("userid").ToString & " and Course_id = " & Session("CourseID").ToString & ") order by result_id", objconn.MyConnection)
                            Dim str As String = "select distinct result_id,option_id from t_result_option where result_id in (select result_id from t_result where  userid=" & Session.Item("userid").ToString & " and Course_id = " & Session("CourseID").ToString & ") order by result_id"
                            vda = New SqlDataAdapter("select distinct result_id,option_id from t_result_option where result_id in (select result_id from t_result where  userid=" & Session.Item("userid").ToString & " and Course_id = " & Session("CourseID").ToString & ") order by result_id", objconn.MyConnection)
                            'vda = New SqlDataAdapter("select Distinct Result_id  from t_result where  userid=" & Session.Item("userid").ToString & " and Course_id = " & Session("CourseID").ToString & " and  result_id in (select  result_id from t_result_Option where option_id !=0)  order by result_id ", objconn.MyConnection)
                            vda.Fill(vds)
                            vds11 = vds.Tables(0)
                            vds11 = RemoveDuplicateRows(vds11, "result_id")

                            For a As Integer = 0 To vds11.Rows.Count - 1
                                Dim ff As String = vds11.Rows(a).Item(0).ToString
                                If Convert.ToInt32(vds11.Rows(a).Item(1)) > 0 Then
                                    sl.Add(a + 1, True)
                                    slDropDown.Add(vds11.Rows(a).Item(0), vds11.Rows(a).Item(0))
                                Else
                                    sl.Add(a + 1, False)
                                End If
                            Next

                            ViewState.Add("sl", sl)
                            ViewState.Add("slDropDown", slDropDown)
                            'End If
                            vda = Nothing
                            vds = Nothing
                            vds11 = Nothing

                            '******************Call PowerFailureProblem********************
                            PowerFailureProblem()
                            '******************Call PowerFailureProblem end********************
                        ElseIf (userapeeredflagvalue = 2) Then
                            'Close connection because if flag is 2 then it will be redirect to another page
                            If objconn IsNot Nothing Then
                                objconn.disconnect()
                            End If
                            Response.Redirect("examinfo.aspx?Status=You have already Appeared this exam", False)
                        End If
                    Else

                        Session.Add("CurrentPage", 1)
                        '*********************************************timer*********************************
                        'Get time from M_Course for timer
                        Dim timervalue As String = String.Empty

                        'If objconn.connect(strPathDb) Then
                        ' Dim sqlstr1 As String
                        sqlstr1 = "SELECT total_time from t_candidate_status "
                        sqlstr1 = sqlstr1 & " Where  userid = '" & Session.Item("userid") & "' and Course_ID= '" & TestType & "'"
                        objCommand = New SqlCommand(sqlstr1, objconn.MyConnection)
                        objDataReader = objCommand.ExecuteReader()
                        While objDataReader.Read
                            timervalue = objDataReader.Item("total_time")
                            currTime.Value = timervalue
                        End While
                        Session.Add("TimeValue", timervalue)
                        Session.Add("TestXX", currTime.Value)
                        objDataReader.Close()
                        '*********************************************timer end*********************************
                        Dim courseid As String = Session.Item("testType").ToString
                        'Monal shah 2011/7/8 Update Student Time
                        InserttimeForStudent()
                        'End
                        'Dim sqlstr As String
                        'Dim myCommand1 As SqlCommand
                        'Dim myDataReader As SqlDataReader
                        sqlstr = "SELECT M_Course.Course_ID, M_Course.Course_Name As Course_Name,M_Course.Course_code as Course_code FROM t_candidate_status,M_Course  "
                        sqlstr = sqlstr & " WHERE userid = " & Session.Item("userid") & ""
                        sqlstr = sqlstr & " and t_candidate_status.Course_ID='" & Session.Item("testType") & "' and m_course.Course_ID=t_candidate_status.Course_ID" ' and m_course.del_flag='0'"
                        'objconn.connect(strPathDb)
                        myCommand1 = New SqlCommand(sqlstr, objconn.MyConnection)
                        myDataReader = myCommand1.ExecuteReader
                        While myDataReader.Read
                            Session.Add("CourseName", myDataReader.Item("Course_Name"))
                            Session.Add("CourseCode", myDataReader.Item("Course_code"))
                        End While
                        myDataReader.Close()
                        myCommand1.Dispose()
                        Dim test_typeValue As String = "Select Count(test_type) As testtypes From m_Weightage WHERE course_id= '" & TestType & "' and del_flag='0'"
                        objCommand = New SqlCommand(test_typeValue, objconn.MyConnection)
                        objDataReader = objCommand.ExecuteReader()
                        While objDataReader.Read
                            testtypevalue = objDataReader.Item("testtypes")
                        End While
                        objDataReader.Close()

                        'Dim testtypevaluearr(testtypevalue) As Integer
                        'Dim testtypevalueal As New ArrayList

                        Dim test_types As String = "Select test_type From m_Weightage WHERE course_id= '" & TestType & "' and del_flag='0'"
                        objCommand = New SqlCommand(test_types, objconn.MyConnection)
                        objDataReader = objCommand.ExecuteReader()
                        While objDataReader.Read
                            testtypevalueal.Add(objDataReader.Item("test_type"))
                        End While
                        'If objconn IsNot Nothing Then
                        'objconn.disconnect()
                        'End If
                        testtypevaluearr = testtypevalueal.ToArray(System.Type.GetType("System.Int32"))

                        Dim flg As Boolean = True '

                        If (Not ViewState("arVal") Is Nothing) Then
                            testtypevaluearr = DirectCast(ViewState("arVal"), Integer())
                        End If

                        Session.Add("AllTestTypeValue", testtypevaluearr)
                        objDataReader.Close()
                        'Dim intquestcntal As New ArrayList
                        lblExamNameandCode.Text = " " & Session.Item("CourseName") & " ( " & Session.Item("CourseCode") & " )"
                        ' totalquestcnt = 0

                        '************* ************* ************* ************* ************* ************* ************* ************* ******
                        'Insert question id and optionid and Courseid and user id and testtype into t_result 
                        'if flg =true then data is inserted in t_result 
                        'Here flag is used for check the currently examed course have subject which is in other course or not if the subject is not in                          other course then that Course Subject's question inserted in t_result and flg=true otherwise flg=false
                        '************* ************* ************* ************* ************* ************* ************* ************* ******
                        If (flg = True) Then

                            If (Not ViewState("arVal") Is Nothing) Then
                                testtypevaluearr = DirectCast(ViewState("arVal"), Integer())
                            End If
                            Dim total As Integer = 0

                            'Dim mutex As Mutex
                            'mutex = New Mutex(False, "Name")
                            'mutex.WaitOne()
                            CheckQuestions(Session.Item("testType").ToString)


                            Dim htsubQues As Hashtable = DirectCast(Session("SubDetails"), Hashtable)
                            Session("SubDetails") = Nothing
                            Dim item As DictionaryEntry

                            Dim tid As Integer
                            For Each item In htsubQues
                                tid = item.Key
                            Next

                            Dim HTALL As Hashtable = DirectCast(Session("HtAll"), Hashtable)
                            Dim htcnt As Hashtable = Nothing
                            'SyncLock HTALL
                            strans = objconn.MyConnection.BeginTransaction

                            Try

                                For Each hitem As DictionaryEntry In HTALL
                                    htcnt = DirectCast(hitem.Value, Hashtable)
                                    If htcnt.Count > 0 Then
                                        Dim htforsub As Hashtable = DirectCast(hitem.Value, Hashtable)
                                        'SyncLock htforsub
                                        InsertIntoT_Result(htforsub, tid.ToString, Session.Item("testType").ToString, objconn, strans)
                                        htforsub = Nothing
                                        'End SyncLock
                                    End If
                                    htcnt = Nothing

                                Next
                                'End SyncLock
                                'mutex.ReleaseMutex()
                                'mutex = Nothing

                                Dim qr As String = " update T_Candidate_Status set AppearedFlag=1 where userid=" & Session.Item("userid").ToString & " and course_id='" & Session.Item("testType").ToString & "'"
                                qcmd = New SqlCommand(qr, objconn.MyConnection, strans)
                                qcmd.ExecuteNonQuery()
                                Session.Add("optcount", optcount)
                                strans.Commit()
                                qcmd.Dispose()
                            Catch ex As Exception
                                strans.Rollback()
                                If objconn IsNot Nothing Then
                                    If objconn.MyConnection.State = ConnectionState.Open Then
                                        objconn.disconnect()
                                    End If
                                End If
                                Response.Redirect("Error.aspx?err=" & ex.Message, False)
                            Finally
                            End Try
                        End If
                        If (flg = True) Then
                            'Session.Add("QuestionPaper", objHashTable)
                            objHashTable = Session.Item("QuestionPaper")
                            generateQuePanel(Session.Item("CurrentPage"))

                            Session.Add("TotalQueCnt", objHashTable.Count)
                            If ViewState("click") Is Nothing Then
                                ViewState.Add("click", 1)
                            End If
                            CreateControl(CInt(Session.Item("TotalQueCnt")))
                        End If
                    End If
                End If
            End If
        Catch ex As Exception
            If objconn IsNot Nothing Then
                If objconn.MyConnection.State = ConnectionState.Open Then
                    objconn.disconnect()
                End If
            End If
            If log.IsDebugEnabled Then
                log.Debug("Error :" & ex.ToString())
            End If
            'Response.Write(ex.ToString())
            Response.Redirect("error.aspx?err=" & ex.Message, False)
        Finally
            If Not objconn.MyConnection Is Nothing Then
                If objconn.MyConnection.State = ConnectionState.Open Then
                    objconn.disconnect()
                End If
            End If

            ' objconn.disconnect()
            UpdateLabel()
            objconn = Nothing
            testtypevalueal = Nothing
            testtypevaluearr = Nothing
            myCommand1 = Nothing
            myDataReader = Nothing
            vda = Nothing
            vds = Nothing
            intquestcntal = Nothing
            objDataReader = Nothing
            objCommand = Nothing
        End Try

    End Sub
#End Region
    ''' <summary>
    ''' Monal shah
    ''' 2011/9/16
    ''' For removing duplicate data from the datatable
    ''' </summary>
    ''' <param name="dTable"></param>
    ''' <param name="colName"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function RemoveDuplicateRows(ByVal dTable As DataTable, ByVal colName As String) As DataTable
        Dim hTable As New Hashtable()
        Dim duplicateList As New ArrayList()

        For Each drow__1 As DataRow In dTable.Rows
            If hTable.Contains(drow__1(colName)) Then
                duplicateList.Add(drow__1)
            Else
                hTable.Add(drow__1(colName), String.Empty)
            End If
        Next

        For Each dRow__2 As DataRow In duplicateList
            dTable.Rows.Remove(dRow__2)
        Next

        Return dTable
    End Function
#Region "InserttimeForStudent"
    'Monal shah 2011/7/8 Update Student Time
    Public Sub InserttimeForStudent()
        Dim strquery As String
        Dim myCommand As SqlCommand
        Dim objconn As New ConnectDb
        'Dim strPathDb As String
        '  Dim stransaction As SqlTransaction
        Try
            'strPathDb = ConfigurationManager.AppSettings("PathDb")
            If objconn.connect() Then
                ' stransaction = objconn.MyConnection.BeginTransaction
                strquery = "Insert into Student_Time_info (User_Id,Course_id,Start_time,End_time) values('" & Session.Item("userid") & "','" & Session.Item("testType") & "','" & DateTime.Now.ToString & "','" & DateTime.Now.ToString & "')"
                'ViewState.Add("endTime", DateTime.Now.ToString)
                Session.Add("endTime", DateTime.Now.ToString)
                myCommand = New SqlCommand(strquery, objconn.MyConnection)
                myCommand.ExecuteNonQuery()
            End If
            If Not objconn.MyConnection Is Nothing Then
                If objconn.MyConnection.State = ConnectionState.Open Then
                    objconn.disconnect()
                End If
            End If

        Catch ex As Exception

            If Not objconn.MyConnection Is Nothing Then
                If objconn.MyConnection.State = ConnectionState.Open Then
                    objconn.disconnect()
                End If
            End If
            '  stransaction.Rollback()
            If log.IsDebugEnabled Then
                log.Debug("Error :" & ex.ToString())
            End If
            Response.Redirect("error.aspx?err=" & ex.Message, False)
        Finally
            If Not objconn.MyConnection Is Nothing Then
                If objconn.MyConnection.State = ConnectionState.Open Then
                    objconn.disconnect()
                End If
            End If
            myCommand = Nothing
            objconn = Nothing
        End Try
    End Sub
#End Region
    'End
#Region "UpdateEndExam Or PowerFailure TimeForStudent"
    'Monal shah 2011/7/8 Update Student Time
    Public Sub UpdatetimeForStudent()
        Dim strquery As String
        Dim myCommand As SqlCommand
        Dim objconn As New ConnectDb
        'Dim strPathDb As String
        '  Dim stransaction As SqlTransaction
        Try
            'strPathDb = ConfigurationManager.AppSettings("PathDb")
            If objconn.connect() Then
                ' stransaction = objconn.MyConnection.BeginTransaction
                strquery = "Update Student_Time_info SET End_time='" & DateTime.Now.ToString & "' where User_Id='" & Session.Item("userid") & "' and Course_id='" & Session.Item("testType") & "' and start_time = (Select MAX(start_time) from Student_Time_info where  User_Id='" & Session.Item("userid") & "' and Course_id='" & Session.Item("testType") & "')"
                myCommand = New SqlCommand(strquery, objconn.MyConnection)
                myCommand.ExecuteNonQuery()
            End If
            If Not objconn.MyConnection Is Nothing Then
                If objconn.MyConnection.State = ConnectionState.Open Then
                    objconn.disconnect()
                End If
            End If

        Catch ex As Exception

            If Not objconn.MyConnection Is Nothing Then
                If objconn.MyConnection.State = ConnectionState.Open Then
                    objconn.disconnect()
                End If
            End If
            '  stransaction.Rollback()
            If log.IsDebugEnabled Then
                log.Debug("Error :" & ex.ToString())
            End If
            Response.Redirect("error.aspx?err=" & ex.Message, False)
        Finally
            If Not objconn.MyConnection Is Nothing Then
                If objconn.MyConnection.State = ConnectionState.Open Then
                    objconn.disconnect()
                End If
            End If
            myCommand = Nothing
            objconn = Nothing
        End Try
    End Sub
#End Region
    'End

#Region "UpdateLabel"
    '****************************************************************************************************************************************
    'Code added by Monal Shah
    'MethodName:UpdateLabel
    'Purpose:UpdateLabel when student give answer the question e.g:000/060 if 1 answer is given then the label is 001/060 display
    '***************************************************************************************************************************************
    Public Sub UpdateLabel()
        Dim a As Integer = 0
        Dim intLengthDiff = 0
        If (ViewState("sl") IsNot Nothing) Then
            Dim sl As SortedList = DirectCast(ViewState("sl"), SortedList)
            Dim take As Integer = 1
            Try
                If Not sl Is Nothing Then
                    For i As Integer = 1 To sl.Count
                        If sl(i) = True Then
                            a = a + 1
                        End If
                        If (a = Convert.ToInt32(Session.Item("TotalQueCnt"))) Then
                        End If
                    Next
                    Dim values1 As String = String.Empty

                    If (Session.Item("TotalQueCnt").ToString().Length = "1") Then
                        values1 = "0" & Session.Item("TotalQueCnt")
                        Session.Add("val", values1)
                    ElseIf (Session.Item("TotalQueCnt").ToString().Length = "2") Then
                        values1 = Session.Item("TotalQueCnt")
                        Session.Add("val", values1)
                    ElseIf (Session.Item("TotalQueCnt").ToString().Length = "3") Then
                        values1 = Session.Item("TotalQueCnt")
                        Session.Add("val", values1)
                    End If
                    'Logic modified by Bharat Prajapati
                    'Date: 2013/06/25
                    '************* Start ****************************
                    Dim val2 As String = String.Empty
                    intLengthDiff = values1.Length - a.ToString().Length
                    If (intLengthDiff = 2) Then
                        val2 = "00" & a
                        Session.Add("val1", val2)
                    ElseIf (intLengthDiff = 1) Then
                        val2 = "0" & a
                        Session.Add("val1", val2)
                    ElseIf (intLengthDiff = 0) Then
                        val2 = a
                        Session.Add("val1", val2)
                    End If
                    '************* End   **************************** 
                    'Dim val2 As String = String.Empty
                    'If (a.ToString().Length = "1") Then
                    '    val2 = "0" & a
                    '    Session.Add("val1", val2)

                    'ElseIf (a.ToString().Length = "3") Then
                    '    val2 = a
                    '    Session.Add("val1", val2)
                    'End If

                    lblTotalMarks.Text = Session.Item("val1") & "/" & Session.Item("val")
                End If
            Catch ex As Exception
                If log.IsDebugEnabled Then
                    log.Debug("Error :" & ex.ToString())
                End If
                Response.Redirect("error.aspx?err=" & ex.Message, False)
            End Try
        End If
    End Sub
#End Region

#Region "CheckForPreviousFlag"
    '****************************************************************************************************************************************
    'Code added by Monal Shah
    'MethodName:CheckForPreviousFlag
    'Purpose:CheckForPreviousFlag from m_systemSettings
    '***************************************************************************************************************************************
    Public Function CheckForPreviousFlag() As Boolean
        Dim objconn As New ConnectDb 'object of the ConnectClass class
        Dim strSql As String
        'Dim valueOfDisplayTotalPage As Integer
        Dim objCommand As SqlCommand                  'SqlCommand object
        Dim objDataReader As SqlDataReader
        Dim flagValue As Boolean
        Try
            'strPathDb = ConfigurationManager.AppSettings("PathDb")
            If objconn.connect() Then
                strSql = "SELECT value FROM m_system_settings Where key1='que_paper' and key2='prev_button'"
                objCommand = New SqlCommand(strSql, objconn.MyConnection)
                objDataReader = objCommand.ExecuteReader
                If objDataReader.Read() Then
                    flagValue = objDataReader.Item("value")
                End If
            End If
            Session.Add("CheckPreviousFlag", flagValue)
            Return flagValue
        Catch ex As Exception
            If Not objconn.MyConnection Is Nothing Then
                If objconn.MyConnection.State = ConnectionState.Open Then
                    objconn.disconnect()
                End If
            End If
            If log.IsDebugEnabled Then
                log.Debug("Error :" & ex.ToString())
            End If
            Response.Redirect("error.aspx?err=" & ex.Message, False)
        Finally
            If Not objconn.MyConnection Is Nothing Then
                If objconn.MyConnection.State = ConnectionState.Open Then
                    objconn.disconnect()
                End If
            End If
            objDataReader = Nothing
            objCommand = Nothing
            objconn = Nothing
            'objconn.disconnect()
        End Try

    End Function
#End Region

#Region "CheckForReanswerFlag"
    '****************************************************************************************************************************************
    'Code added by Monal Shah
    'MethodName:CheckForReanswerFlag
    'Purpose:CheckForReanswerFlag from m_systemSettings
    '***************************************************************************************************************************************
    Public Function CheckForReanswerFlag() As Boolean
        Dim objconn As New ConnectDb 'object of the ConnectClass class
        Dim strSql As String
        'Dim valueOfDisplayTotalPage As Integer
        Dim objCommand As SqlCommand                  'SqlCommand object
        Dim objDataReader As SqlDataReader
        Dim flagValue As Boolean
        Try
            'strPathDb = ConfigurationManager.AppSettings("PathDb")
            If objconn.connect() Then
                strSql = "SELECT value FROM m_system_settings Where key1='que_paper_reanswer' and key2='reanswer_flag'"
                objCommand = New SqlCommand(strSql, objconn.MyConnection)
                objDataReader = objCommand.ExecuteReader
                If objDataReader.Read() Then
                    flagValue = objDataReader.Item("value")
                End If
                objDataReader.Close()
                If Not objconn.MyConnection Is Nothing Then
                    If objconn.MyConnection.State = ConnectionState.Open Then
                        objconn.disconnect()
                    End If
                End If
            End If
            Session.Add("CheckReanswerFlag", flagValue)
            Return flagValue
        Catch ex As Exception
            If Not objconn.MyConnection Is Nothing Then
                If objconn.MyConnection.State = ConnectionState.Open Then
                    objconn.disconnect()
                End If
            End If
            If log.IsDebugEnabled Then
                log.Debug("Error :" & ex.ToString())
            End If
            Response.Redirect("error.aspx?err=" & ex.Message, False)
        Finally
            If Not objconn.MyConnection Is Nothing Then
                If objconn.MyConnection.State = ConnectionState.Open Then
                    objconn.disconnect()
                End If
            End If
            objconn = Nothing
            objDataReader = Nothing
            objCommand = Nothing
            ' objconn.disconnect()
        End Try

    End Function
#End Region

#Region "ScheduleTask"
    '****************************************************************************************************************************************
    'Code added by Monal Shah
    'MethodName:ScheduleTask
    'Purpose:Call SetTimer after every 10 seconds
    '***************************************************************************************************************************************
    Sub ScheduleTask()
        HttpRuntime.Cache.Add("data", "3", Nothing, Cache.NoAbsoluteExpiration, TimeSpan.FromSeconds(10), CacheItemPriority.NotRemovable, New CacheItemRemovedCallback(AddressOf SetTimer))

    End Sub
#End Region

#Region "SetTimer"
    '****************************************************************************************************************************************
    'Code added by Monal Shah
    'MethodName:SetTimer
    'Purpose:Call after every 10 seconds
    '***************************************************************************************************************************************
    Sub SetTimer(ByVal key As String, ByVal value As Object, ByVal reason As CacheItemRemovedReason)
        '   DoTask()
        ScheduleTask()
    End Sub
#End Region


    <System.Web.Services.WebMethod(True)> _
       Public Shared Function GetContactName(ByVal custid As String) As String
        Dim er As New QuestionPaper()
        er.DoTask(custid)
    End Function
#Region "CheckForUpdateTimeValue"
    '****************************************************************************************************************************************
    'Code added by Monal Shah
    'MethodName:GetUpdateTime
    'Purpose:CheckForUpdateTimeValue from m_systemSettings
    '***************************************************************************************************************************************
    Public Function GetUpdateTime() As Integer
        Dim objconn As New ConnectDb 'object of the ConnectClass class
        Dim strSql As String
        Dim objCommand As SqlCommand                  'SqlCommand object
        Dim objDataReader As SqlDataReader
        Dim flagValue As Integer
        Try
            'strPathDb = ConfigurationManager.AppSettings("PathDb")
            If objconn.connect() Then
                strSql = "SELECT value FROM m_system_settings Where key1='QuestionPaper' and key2='UpdateTime'"
                objCommand = New SqlCommand(strSql, objconn.MyConnection)
                objDataReader = objCommand.ExecuteReader
                If objDataReader.Read() Then
                    flagValue = objDataReader.Item("value")
                End If
            End If
            Session.Add("GetUpdateTimes", flagValue)
            Return flagValue
        Catch ex As Exception
            If Not objconn.MyConnection Is Nothing Then
                If objconn.MyConnection.State = ConnectionState.Open Then
                    objconn.disconnect()
                End If
            End If
            If log.IsDebugEnabled Then
                log.Debug("Error :" & ex.ToString())
            End If
            Response.Redirect("error.aspx?err=" & ex.Message, False)
        Finally
            If Not objconn.MyConnection Is Nothing Then
                If objconn.MyConnection.State = ConnectionState.Open Then
                    objconn.disconnect()
                End If
            End If
            objDataReader = Nothing
            objCommand = Nothing
            objconn = Nothing
        End Try

    End Function
#End Region
#Region "DoTask"
    '****************************************************************************************************************************************
    'Code added by Monal Shah
    'MethodName:DoTask
    'Purpose:update timer value after every 20 seconds in t_candidate status
    '***************************************************************************************************************************************
    Public Sub DoTask(ByVal s As String)

        Dim strquery As String
        Dim myCommand As SqlCommand
        Dim objconn As New ConnectDb
        Dim strPathDb As String
        'Monal shah 2011/7/8 Update Student Time
        'Dim SqlTransData As SqlTransaction
        Dim chktime As Integer

        'End

        ''Logic added by Bharat Prajapati
        ''Date: 2013/06/25
        ''Desc: to add "0" as prefix in second part.
        'Dim strTimesplit() As String
        'Dim intLengthDiff = 0
        'strTimesplit = s.Split(":")
        'intLengthDiff = strTimesplit(0).Length  - strTimesplit(1).Length 
        'If (intLengthDiff = 2) Then
        '    strTimesplit(1) = "00" & strTimesplit(1)
        '    s=strTimesplit(0)+":"+strTimesplit(1)
        'ElseIf (intLengthDiff = 1) Then
        '    strTimesplit(1) = "0" & strTimesplit(1)
        '    s=strTimesplit(0)+":"+strTimesplit(1)
        'End If

        Dim Endtime As DateTime = Session.Item("endTime").ToString
        Dim curTimes As DateTime = DateTime.Now.ToString
        Dim diff As Integer = DateDiff(DateInterval.Second, Endtime, curTimes)
        If Session.Item("GetUpdateTimes") IsNot Nothing Then
            chktime = Session.Item("GetUpdateTimes")
        Else
            chktime = GetUpdateTime()
        End If
        Dim sessionTimeVal As Integer = Convert.ToInt32(Session.Item("TimeValue"))
        Dim valueCalc As Integer = ((sessionTimeVal * 60 * chktime) / 100)

        strPathDb = ConfigurationManager.AppSettings("PathDb")

        Dim times As String = s
        If (times = "0:0") Then
            Session.Add("finalTime", "0:0")
            redirectfunction()
            Exit Sub
        End If
        If (diff > valueCalc) Then
            Session.Add("endTime", DateTime.Now.ToString)
        End If
        If (diff = valueCalc) Then
            If objconn.connect() Then
                'SqlTransData = objconn.MyConnection.BeginTransaction
                Try
                    'Monal shah 2011/7/8 Update Student Time
                    'Dim Endtime As DateTime = DirectCast(ViewState("endTime"), DateTime)

                    'End
                    If (times <> "0:0") And times <> Nothing And times <> "" Then
                        Dim timerValue As String = times
                        If Not (timerValue.Contains("<")) Then

                            strquery = "Update t_candidate_status Set consume_time='" & timerValue & "' where userid='" & Session.Item("userid") & "' and Course_ID='" & Session.Item("testType") & "'"
                            'myCommand = New SqlCommand(strquery, objconn.MyConnection, SqlTransData)
                            myCommand = New SqlCommand(strquery, objconn.MyConnection)
                            myCommand.ExecuteNonQuery()
                        End If
                        'Monal shah 2011/7/8 Update Student Time
                        strquery = ""
                        ' strquery = "Update Student_Time_info SET End_time='" & DateTime.Now.ToString & "' where User_Id='" & Session.Item("userid") & "' and Course_id='" & Session.Item("testType") & "'"
                        strquery = "Update Student_Time_info SET End_time='" & DateTime.Now.ToString & "' where User_Id='" & Session.Item("userid") & "' and Course_id='" & Session.Item("testType") & "' and start_time = (Select MAX(start_time) from Student_Time_info where  User_Id='" & Session.Item("userid") & "' and Course_id='" & Session.Item("testType") & "')"
                        Session.Add("endTime", DateTime.Now.ToString)
                        'myCommand = New SqlCommand(strquery, objconn.MyConnection, SqlTransData)
                        myCommand = New SqlCommand(strquery, objconn.MyConnection)
                        myCommand.ExecuteNonQuery()
                        'SqlTransData.Commit()
                        'End
                        Exit Sub
                    End If
                    If Not objconn.MyConnection Is Nothing Then
                        If objconn.MyConnection.State = ConnectionState.Open Then
                            objconn.disconnect()
                        End If
                    End If
                Catch ex As Exception
                    'Monal shah 2011/7/8 Update Student Time
                    'SqlTransData.Rollback()
                    'End
                    If Not objconn.MyConnection Is Nothing Then
                        If objconn.MyConnection.State = ConnectionState.Open Then
                            objconn.disconnect()
                        End If
                    End If
                    If log.IsDebugEnabled Then
                        log.Debug("Error :" & ex.ToString())
                    End If
                    Response.Redirect("error.aspx?err=" & ex.Message, False)
                Finally

                    If Not objconn.MyConnection Is Nothing Then
                        If objconn.MyConnection.State = ConnectionState.Open Then
                            objconn.disconnect()
                        End If
                    End If
                    objconn = Nothing
                    myCommand = Nothing
                End Try
            End If
        End If
    End Sub
#End Region

#Region "redirectfunction"
    '****************************************************************************************************************************************
    'Code added by Monal Shah
    'MethodName:redirectfunctionAllTestTypeValue
    'Purpose:When Time is Over at that time User appeared flag in t_candidate_status is 2 and consume_time="00:00"
    '***************************************************************************************************************************************
    Public Sub redirectfunction()

        Dim myCommand As SqlCommand
        Dim objconn As New ConnectDb
        'Dim strPathDb As String = String.Empty
        Session.Add("user", Session.Item("userid"))
        Session.Add("test", Session.Item("testType"))
        Dim objTransaction1 As SqlTransaction
        If objconn.connect() Then
            objTransaction1 = objconn.MyConnection.BeginTransaction()
            Try
                If Session.Item("finalTime") = "0:0" Then

                    Dim strUpdateTimer As String

                    strUpdateTimer = "update t_candidate_status set consume_time='00:00',AppearedFlag='2',written_test_appear_date = '" & Now & "' where userid='" & Convert.ToInt32(Session.Item("user")) & "' and Course_ID = '" & Convert.ToInt32(Session.Item("test")) & "'"

                    myCommand = New SqlCommand(strUpdateTimer, objconn.MyConnection)

                    myCommand.Transaction = objTransaction1
                    myCommand.ExecuteNonQuery()
                    objTransaction1.Commit()
                    myCommand.Dispose()
                    If Not objconn.MyConnection Is Nothing Then
                        If objconn.MyConnection.State = ConnectionState.Open Then
                            objconn.disconnect()
                        End If
                    End If
                End If

            Catch ex As Exception

                If Not objconn.MyConnection Is Nothing Then
                    If objconn.MyConnection.State = ConnectionState.Open Then
                        objconn.disconnect()
                    End If
                End If
                If log.IsDebugEnabled Then
                    log.Debug("Error :" & ex.ToString())
                End If
                objTransaction1.Rollback()
                Response.Redirect("error.aspx?err=" & ex.Message, False)
            Finally
                If Not objconn.MyConnection Is Nothing Then
                    If objconn.MyConnection.State = ConnectionState.Open Then
                        objconn.disconnect()
                    End If
                End If
                objTransaction1 = Nothing
                myCommand = Nothing
                objconn = Nothing
            End Try
        End If
    End Sub
#End Region

#Region "CreateControl"
    '****************************************************************************************************************************************
    'Code added by Monal Shah
    'MethodName:CreateControl
    'Purpose:Here Create Link Button Of all the Question For exam
    '***************************************************************************************************************************************

    Public Sub CreateControl(ByVal Range As Integer)

        TblAllquestions.Controls.Clear()
        Dim lbtn As New LinkButton
        Dim tbrow As HtmlTableRow       'HtmlTableRow object
        Dim tbdat As HtmlTableCell      'HtmlTableCell object
        Dim Limit As Integer = 5
        Dim cnt As Integer = Range
        Dim cnt1 As Integer = 1
        Dim RowLimit As Integer = Range / Limit
        Dim click As Integer = 1
        Dim i As Integer = 0
        Dim j As Integer = 0
        Dim Ulimit As Integer = 5
        Dim Llimit As Integer = 1
        Dim Setlnklimit As Integer = Convert.ToInt32(cnt Mod Limit)
        Dim setRowLimit As Integer = Convert.ToInt32(Limit * RowLimit)
        Dim sl As New SortedList(cnt)
        tbrow = New HtmlTableRow
        Dim strsqlA As String
        Dim myDataReader2 As SqlDataReader
        Dim myCommand2 As SqlCommand
        Dim objconn1 As New ConnectDb
       
        Dim checkpreviousflag As Boolean
        If Session.Item("CheckPreviousFlag") IsNot Nothing Then
            checkpreviousflag = Session.Item("CheckPreviousFlag")
        Else
            checkpreviousflag = CheckForPreviousFlag()
        End If
        Dim checkreanswerflag As Boolean
        If Session.Item("CheckReanswerFlag") IsNot Nothing Then
            checkreanswerflag = Session.Item("CheckReanswerFlag")
        Else
            checkreanswerflag = CheckForReanswerFlag()
        End If

        tbrow.Height = "10px"

        If ViewState("sl") Is Nothing Then

            Dim ik As Integer
            For ik = 1 To cnt
                sl.Add(ik + 1, False)
            Next
            ViewState.Add("click", 1)
            ViewState.Add("sl", sl)
        Else
            sl = DirectCast(ViewState("sl"), SortedList)
            click = Convert.ToInt32((ViewState("click")))
        End If
        If cnt = setRowLimit Then
            RowLimit = RowLimit
            Limit = Limit
        End If
        If cnt > setRowLimit Then
            RowLimit = RowLimit + 1
        End If
        While cnt1 <= RowLimit
            For i = 1 To RowLimit
                If (RowLimit = i) Then
                    If (cnt < setRowLimit) Then
                        Limit = Setlnklimit
                    ElseIf cnt > setRowLimit Then
                        Limit = Setlnklimit
                    ElseIf cnt = setRowLimit Then
                        Limit = Limit
                    End If
                End If
                If (cnt = (cnt1 + 1)) Then
                    Limit = Setlnklimit
                End If
                tbrow = New HtmlTableRow
                tbrow.Height = "10px"
                'createing linkbutton
                For j = 1 To Limit
                    tbdat = New HtmlTableCell
                    tbdat.NoWrap = True
                    tbdat.Align = "left"
                    tbdat.Width = "30px"
                    tbdat.Height = "10px"
                    lbtn = New LinkButton()
                    lbtn.ID = "lbtn" & j.ToString() & i.ToString()
                    lbtn.Font.Underline = False
                    lbtn.EnableViewState = "False"
                    lbtn.Font.Size = FontUnit.Medium

                    lbtn.Text = cnt1
                    lbtn.Attributes.Add("onClick", "javascript: getCheckedRadioButton();")

                    AddHandler lbtn.Command, New CommandEventHandler(AddressOf LnkQuestionClick)
                    lbtn.CommandName = cnt1
                    If ((sl(cnt1)) = False) Then
                        lbtn.ForeColor = Drawing.Color.Gray
                    End If
                    If ((sl(cnt1)) = True) Then
                        lbtn.ForeColor = Drawing.Color.Black
                        lbtn.Font.Bold = True
                        'If checkpreviousflag = True And checkreanswerflag = True  then selected linkbutton is black and bold mode
                        If checkpreviousflag = True And checkreanswerflag = True Then
                            If rdbCheckedId.Value <> Nothing Or rdbCheckedId.Value <> "" Then
                                lbtn.ForeColor = Drawing.Color.Black
                                lbtn.Font.Bold = True
                            End If
                            'checkpreviousflag = True And checkreanswerflag = False  then selected linkbutton is black and bold mode
                        ElseIf checkpreviousflag = True And checkreanswerflag = False Then
                            If rdbCheckedId.Value <> Nothing Or rdbCheckedId.Value <> "" Then
                                lbtn.ForeColor = Drawing.Color.Black
                                lbtn.Font.Bold = True
                            End If
                        End If
                        'If checkpreviousflag = False And checkreanswerflag = False  then selected linkbutton is in disable mode

                        If checkpreviousflag = False And checkreanswerflag = False Then
                            If rdbCheckedId.Value <> Nothing Or rdbCheckedId.Value <> "" Then
                                lbtn.Font.Bold = True
                                lbtn.Attributes.Remove("href")
                                lbtn.Attributes.Remove("className")
                                lbtn.Attributes.Add("onclick", "return false")

                            ElseIf rdbCheckedId.Value = Nothing Or rdbCheckedId.Value = "" Then
                                If (sl(cnt1)) = True Then
                                    If (lbtn.Enabled = True) Then
                                        lbtn.Attributes.Remove("href")
                                        lbtn.Attributes.Remove("className")
                                        lbtn.Attributes.Add("onclick", "return false")
                                    Else
                                        lbtn.Attributes.Remove("href")
                                        lbtn.Attributes.Remove("className")
                                        lbtn.Attributes.Add("onclick", "return false")
                                    End If
                                End If
                                If (sl(cnt1)) = False Then
                                    lbtn.ForeColor = Drawing.Color.Black
                                    lbtn.Enabled = True
                                End If

                            End If
                        End If


                    End If
                    tbdat.Controls.Add(lbtn)
                    tbrow.Cells.Add(tbdat)
                    cnt1 = cnt1 + 1
                Next
                TblAllquestions.Rows.Add(tbrow)
            Next
        End While

        'Session.Add("CheckPreviousFlag", checkpreviousflag)
        'Session.Add("CheckReanswerFlag", checkreanswerflag)
        If checkpreviousflag = False And checkreanswerflag = False Then
            imgBtnFirst.Enabled = False
            imgBtnPrevious.Enabled = False
            imgBtnLast.Enabled = False
        ElseIf checkpreviousflag = True And checkreanswerflag = False Then
            imgBtnFirst.Enabled = True
            imgBtnPrevious.Enabled = True
            imgBtnLast.Enabled = True
            imgBtnNext.Enabled = True
        ElseIf checkpreviousflag = True And checkreanswerflag = True Then
            imgBtnFirst.Enabled = True
            imgBtnPrevious.Enabled = True
            imgBtnLast.Enabled = True
            imgBtnNext.Enabled = True
        End If
    End Sub
#End Region

    
#Region "Generate New Question Paper"
    '****************************************************************************************************************************************
    'Code added by Monal Shah
    'MethodName:generateQuePanel
    'Purpose:generate Question According to questionid and on that page which is currently in Session("Currentpage")
    '***************************************************************************************************************************************

    Private Sub generateQuePanel(ByVal intCurrPage As Integer)

        Dim tbrow As HtmlTableRow       'HtmlTableRow object
        Dim tbdat As HtmlTableCell      'HtmlTableCell object

        Dim i As Integer              'Integer type variable
        Dim intEndNo As Integer
        Dim iLoop As Integer
        Dim jLoop As Integer
        Dim objHashTable As New Hashtable
        Dim objStructureQuePaper As New StructureQuePaper
        Dim strRadioBtnIds As String = ""
        Dim strDragDrop As String = ""
        Dim intStart As Integer

        Dim objconn As New ConnectDb 'object of the ConnectClass class
        Dim strSql As String
        'Dim valueOfDisplayTotalPage As Integer
        Dim objCommand As SqlCommand                  'SqlCommand object
        Dim objDataReader As SqlDataReader
        Dim vds As DataSet
        Dim vda As SqlDataAdapter
        Dim dss As DataSet
        Dim sda As SqlDataAdapter
        Dim courseid As String = ""
        Dim dst As DataSet
        Dim sdat As SqlDataAdapter
        Dim flgDragDrop As Boolean = False
        Dim httbox As New Hashtable

        Try
            If objconn.connect() Then
                If ViewState("sl") Is Nothing Then
                    'Dim vds As DataSet
                    'Dim vda As SqlDataAdapter
                    Dim sl As New SortedList
                    Dim slDropDown As New SortedList
                    'Dim courseid As String = ""
                    If Not Session("testType") Is Nothing Then
                        courseid = Session("testType").ToString
                    Else
                        If Not Session("CourseID") Is Nothing Then
                            courseid = Session("CourseID").ToString
                        End If
                    End If
                    'If objconn.connect(strPathDb) Then
                    vds = New DataSet
                    Dim str As String = "select userid,qno,test_type,optionId,result_id from t_result where userid=" & Session.Item("userid").ToString & " and course_id=" & courseid
                    vda = New SqlDataAdapter("select userid,qno,test_type,optionId,result_id from t_result where userid=" & Session.Item("userid").ToString & " and course_id=" & courseid, objconn.MyConnection)
                    vda.Fill(vds)
                    For a As Integer = 0 To vds.Tables(0).Rows.Count - 1
                        If Convert.ToInt32(vds.Tables(0).Rows(a).Item(3)) > 0 Then
                            sl.Add(a + 1, True)
                            slDropDown.Add(vds.Tables(0).Rows(a).Item(4), vds.Tables(0).Rows(a).Item(4))
                        Else
                            sl.Add(a + 1, False)
                        End If

                    Next
                    ViewState.Add("sl", sl)
                    ViewState.Add("slDropDown", slDropDown)
                    'End If
                Else
                End If
                intEndNo = Convert.ToInt32(Session.Item("QuePerPage")) * intCurrPage
                intStart = intEndNo - Convert.ToInt32(Session.Item("QuePerPage")) + 1

                objHashTable = (Session.Item("QuestionPaper"))

                ReDim Preserve rdbut(0)
                ReDim Preserve chkbx(0)
                'strPathDb = ConfigurationManager.AppSettings("PathDb")
                'If objconn.connect(strPathDb) Then
                For iLoop = intStart To intEndNo
                    objStructureQuePaper = objHashTable.Item(iLoop)
                    Session.Add("structureQuestionpaper", objStructureQuePaper.QueId)
                    Session.Add("testtypeval", objStructureQuePaper.Test_type)

                    
                    ' If objconn.connect(strPathDb) Then
                    Dim qid As String = Session.Item("structureQuestionpaper")
                    '*********Testtype***********
                    ' strSql = "SELECT optionid FROM t_result Where userid='" & Session.Item("userid") & "' and qno='" & qid & "' and test_type = '" & Session("testtypeval").ToString & "' and course_id=" & Session.Item("testType").ToString
                    strSql = "SELECT option_id As optionid From t_result_option where result_id in(Select result_id FROM t_result Where userid='" & Session.Item("userid") & "' and qno='" & qid & "' and test_type = '" & Session("testtypeval").ToString & "' and course_id=" & Session.Item("testType").ToString & ")"
                    'Query to be changed
                    'select option_id from t_result_option where result_id in (Select result_id from T_result where userid=188 and test_type=1 and qno=1)
                    objCommand = New SqlCommand(strSql, objconn.MyConnection)
                    objDataReader = objCommand.ExecuteReader()
                    If objDataReader.Read() Then
                        Dim optionValue As String = objDataReader.Item("optionid")
                        If optionValue <> "0" Then
                            Dim SelectedOption As Integer = optionValue
                            Session.Add("SelectedOtionStatus", SelectedOption)
                        Else
                        End If

                    End If
                    objDataReader.Close()

                    'Create Question Section
                    tbrow = New HtmlTableRow
                    tbrow.Height = "100px"
                    tblQuestion.Rows.Add(tbrow)
                    tbdat = New HtmlTableCell
                    tbdat.VAlign = "top"
                    tbdat.NoWrap = True
                    tbdat.InnerText = "Question " & iLoop
                    tbdat.Align = "left"
                    tbdat.Width = "100px"
                    tbrow.Cells.Add(tbdat)

                    'Create Blank Cell
                    tbdat = New HtmlTableCell
                    tbdat.VAlign = "top"
                    tbdat.NoWrap = True
                    tbdat.Align = "left"
                    tbdat.Width = "1px"
                    tbdat.InnerHtml = "&nbsp;"
                    tbrow.Cells.Add(tbdat)

                    tbdat = New HtmlTableCell
                    tbdat.ColSpan = 2
                    tbdat.Align = "left"

                    HiddenField1.Value = objStructureQuePaper.QuesTypeID 'Added by Pragnesha 26-10-2017
                    ' Purpose: show audio control only when questio is multiple choice

                    '****************Render textboxes in question *****************
                    Dim strqtext As String = objStructureQuePaper.QueDesc

                    Dim strfinal As String = ""

                    If strqtext.Contains("---") Then

                        Dim strary() As String = strqtext.Split("---")
                        Dim tbxcounter As Integer = 1
                        For o As Integer = 0 To strary.Length - 1

                            ' code to make it enable or disalble
                            If Session.Item("SelectedOtionStatus") Is Nothing Then

                            Else
                                Dim mds As New DataSet
                                Dim mda As New SqlDataAdapter("select sub_id,option_id from t_result_option where result_id in(" & "SELECT result_id FROM t_result Where userid='" & Session.Item("userid") & "' and qno='" & Session.Item("structureQuestionpaper").ToString & "' and test_type = '" & Session("testtypeval").ToString & "' and Course_ID='" & Session.Item("testtype") & "'  )", objconn.MyConnection)

                                mda.Fill(mds)

                                For l As Integer = 0 To mds.Tables(0).Rows.Count - 1
                                    httbox.Add(mds.Tables(0).Rows(l).Item(0), mds.Tables(0).Rows(l).Item(1))
                                Next


                            End If

                            If strary(o) <> "" Then
                                If o < strary.Length - 1 Then
                                    Dim strval As String = "  "

                                    If Session.Item("CheckPreviousFlag") = False And Session.Item("CheckReanswerFlag") = True Then
                                        strval = strval + "     value=" + (objStructureQuePaper.Options(httbox(tbxcounter))).ToString + "   "
                                        'strval = strval + "     value=" + (httbox(tbxcounter)).ToString + "   "
                                    End If
                                    If Session.Item("CheckPreviousFlag") = True And Session.Item("CheckReanswerFlag") = False Then
                                        If (httbox.ContainsKey(tbxcounter)) Then
                                            'objStructureQuePaper.Options(keys(i + 1)).ToString()
                                            strval = strval + "   readonly=readonly value=" + (objStructureQuePaper.Options(httbox(tbxcounter))).ToString() + "   "
                                            'strval = strval + "   readonly=readonly value=" + (httbox(tbxcounter)).ToString + "   "
                                            ' flgDragDrop = True
                                        End If
                                    End If
                                    If Session.Item("CheckPreviousFlag") = True And Session.Item("CheckReanswerFlag") = True Then

                                        If (httbox.ContainsKey(tbxcounter)) And FirstAttempt(intCurrPage) = False Then
                                            strval = strval + "   readonly=readonly value=" + (objStructureQuePaper.Options(httbox(tbxcounter))).ToString() + "   "
                                            'strval = strval + "   readonly=readonly value=" + (httbox(tbxcounter)).ToString + "   "
                                            ' flgDragDrop = True
                                        Else
                                            If (httbox.ContainsKey(tbxcounter)) Then
                                                strval = strval + "    value=" + (objStructureQuePaper.Options(httbox(tbxcounter))).ToString + "   "
                                                'strval = strval + "    value=" + (httbox(tbxcounter)).ToString + "   "
                                            End If
                                        End If

                                    End If
                                    If Session.Item("rf") Is Nothing Then
                                        Session.Add("rf", TestType & "_" & objStructureQuePaper.QueId & "_" & tbxcounter.ToString)
                                    Else
                                        Dim draggablep As String = Session.Item("rf") & "," & TestType & "_" & objStructureQuePaper.QueId & "_" & tbxcounter.ToString
                                        Session.Add("rf", draggablep)
                                    End If
                                    'strfinal = strfinal & strary(o) & "<input type=text   onblur='formatInt(this);'  size=50 " & "   id='droppable" & 1 & "_" & objStructureQuePaper.QueId & "_" & tbxcounter.ToString & "'/>"
                                    strfinal = strfinal & strary(o) & "<input type=text   onblur='formatInt(this);'  size=50 " & strval & "   id='droppable" & TestType & "_" & objStructureQuePaper.QueId & "_" & tbxcounter.ToString & "'/>"
                                    'strfinal = strfinal & strary(o) & "<input type=text maxlength=2  onblur='formatInt(this);'  size=2 " & strval & "   id='" & TestType & "_" & objStructureQuePaper.QueId & "_" & tbxcounter.ToString & "'/>"
                                    strDragDrop += "droppable" + TestType & "_" & objStructureQuePaper.QueId & "_" & tbxcounter.ToString & ","
                                    tbxcounter = tbxcounter + 1
                                Else
                                    strfinal = strfinal & strary(o)
                                End If
                            Else
                                strfinal = strfinal & ""
                            End If
                            httbox.Clear()
                        Next
                    Else
                        strfinal = objStructureQuePaper.QueDesc
                    End If

                    Dim tdspdat As New HtmlTableCell
                    tdspdat.Width = "1px"
                    tdspdat.InnerHtml = "&nbsp;"
                    tbrow.Cells.Add(tdspdat)

                    tbdat.InnerHtml = strfinal

                    'Dim value As String = strfinal
                    'Dim delimiter As Char = "/"
                    'Dim substrings() As String = value.Split(delimiter)
                    'Dim strinner As String
                    'For index As Integer = 0 To substrings.Length() - 1
                    '    If substrings(index) <> "/" Then
                    '        tbdat.InnerHtml += substrings(index)
                    '        tbdat.InnerHtml += "</br>"
                    '    End If
                    'Next
                    'tbdat.VAlign = "top"
                    'tbdat.Width = "900px"
                    tbdat.Width = "100%"
                    tbdat.Style.Add("word-wrap", " break-word")
                    tbrow.Cells.Add(tbdat)

                    Dim optcount As Integer = 0
                    'If objconn.connect(strPathDb) Then
                    qid = Session.Item("structureQuestionpaper")
                    Dim squery As String = "SELECT  COUNT(Optionid) FROM M_Options  WHERE (Qnid = " & qid & ") AND Test_Type = '" & Session("testtypeval").ToString() & "'" ' In (Select test_type From m_testinfo WHERE course_id='" & Session.Item("testType") & "' and del_flag='0')"
                    'Dim dss As New DataSet
                    'Dim sda As New SqlDataAdapter(squery, objconn.MyConnection)
                    dss = New DataSet
                    sda = New SqlDataAdapter(squery, objconn.MyConnection)

                    sda.Fill(dss)
                    optcount = Convert.ToInt32(dss.Tables(0).Rows(0).Item(0))


                    'End If

                    Dim QType As Boolean = False
                    If objStructureQuePaper.QuesTypeID = "1" Then
                        QType = False
                    Else
                        QType = True
                    End If


                    If objStructureQuePaper.QuesTypeID = "1" Then

                        'by dipendra
                        ' If objStructureQuePaper.QueAudio <> " " Then
                        '    Dim pbtn As Button
                        '    pbtn = New Button
                        '    pbtn.Height = 25
                        '    pbtn.Width = 50
                        '    pbtn.Text = "Play"
                        '    pbtn.CommandName = "play"
                        '    tbrow = New HtmlTableRow
                        '    tbrow.Height = "15px"
                        '    tblQuestion.Rows.Add(tbrow)
                        '    tbdat = New HtmlTableCell
                        '    tbdat.Width = "10px"
                        '    tbdat.Controls.Add(pbtn)
                        '    tbdat.Align = "left"
                        '    tbrow.Cells.Add(tbdat)

                        'End If
                        '--------------------


                        'Code for radio button
                        For jLoop = 0 To optcount - 1
                            'Create Option Section
                            tbrow = New HtmlTableRow
                            tbrow.Height = "15px"
                            tblQuestion.Rows.Add(tbrow)
                            tbdat = New HtmlTableCell
                            tbdat.Align = "left"
                            ' tbdat.Align = "right"
                            tbdat.InnerText = jLoop + 1
                            tbrow.Cells.Add(tbdat)
                            rdbut(i) = New RadioButton()

                            '******* To get the keys in array to traverse later **************
                            Dim keys(objStructureQuePaper.Options.Count) As Integer
                            objStructureQuePaper.Options.Keys.CopyTo(keys, 0)
                            Array.Reverse(keys)
                            '*****************************************************************

                            'If Session.Item("CheckPreviousFlag") = true And Session.Item("CheckReanswerFlag") = False then user can go previous and can reanswer the question because radio Buttons are in enable mode
                            If Session.Item("CheckPreviousFlag") = True And Session.Item("CheckReanswerFlag") = True Then
                                If FirstAttempt(intCurrPage) = True Then
                                    rdbut(i).Enabled = True
                                Else
                                    rdbut(i).Enabled = False
                                End If

                            Else
                                rdbut(i).Enabled = False
                            End If
                            'If Session.Item("CheckPreviousFlag") = False And Session.Item("CheckReanswerFlag") = False then user can't go previous and can't reanswer the question
                            If Session.Item("CheckPreviousFlag") = False And Session.Item("CheckReanswerFlag") = False Then
                                Dim sl As SortedList = DirectCast(ViewState("sl"), SortedList)
                                Dim take As Integer = 1
                                If sl(intCurrPage) = True Then
                                    rdbut(i).Enabled = False
                                Else
                                    rdbut(i).Enabled = True
                                End If
                            End If
                            'If Session.Item("CheckPreviousFlag") = true And Session.Item("CheckReanswerFlag") = False then user can go previous But can't reanswer the question because radio Buttons are in disable mode
                            If Session.Item("CheckPreviousFlag") = True And Session.Item("CheckReanswerFlag") = False Then
                                Dim sl As SortedList = DirectCast(ViewState("sl"), SortedList)
                                Dim take As Integer = 1
                                If sl(intCurrPage) = True Then
                                    rdbut(i).Enabled = False
                                Else
                                    rdbut(i).Enabled = True
                                End If

                            End If

                            '********** Code to set radio values and render ************************
                            rdbut(i).ID = TestType & "_" & objStructureQuePaper.QueId & "_" & keys(i + 1)

                            Dim stext As String = objStructureQuePaper.Options(keys(i + 1)).ToString
                            If stext.Contains("<br/>") Then
                                stext = stext.Replace("<br/>", " ")
                            End If
                            rdbut(i).Text = " " & stext
                            If Session.Item("SelectedOtionStatus") Is Nothing Then
                            Else
                                If keys(i + 1) = Integer.Parse(Session.Item("SelectedOtionStatus")) Then
                                    rdbut(i).Checked = True
                                End If
                            End If

                            rdbut(i).GroupName = "Ques" & objStructureQuePaper.QueId & "option"
                            strRadioBtnIds += rdbut(i).ID & ","
                            '***********************************************************************

                            tbdat = New HtmlTableCell
                            tbdat.Width = "1px"
                            tbdat.InnerHtml = "&nbsp;"
                            tbdat.Align = "left"
                            tbrow.Cells.Add(tbdat)

                            tbdat = New HtmlTableCell
                            ' tbdat.Width = "20px"
                            tbdat.Align = "left"
                            tbdat.Controls.Add(rdbut(i))
                            tbdat.ColSpan = 3
                            tbrow.Cells.Add(tbdat)
                            'tbdat = New HtmlTableCell
                            'tbdat.Align = "left"
                            'tbdat.Width = "500px"
                            'tbrow.Cells.Add(tbdat)

                            i = i + 1
                            ReDim Preserve rdbut(UBound(rdbut) + 1)

                        Next
                    ElseIf objStructureQuePaper.QuesTypeID = "2" Then

                      
                        'Code for CheckBoxes
                        '*****Get The selected values*****
                        Dim qry As String = "select option_id from t_result_option where result_id=" & "(SELECT result_id FROM t_result Where userid='" & Session.Item("userid") & "' and qno='" & Session.Item("structureQuestionpaper") & "' and test_type = '" & Session("testtypeval").ToString & "' and course_id='" & Session.Item("testType").ToString & "') "  '& "' " & 
                        'Dim dst As New DataSet
                        'Dim sdat As New SqlDataAdapter(qry, objconn.MyConnection)
                        dst = New DataSet()
                        sdat = New SqlDataAdapter(qry, objconn.MyConnection)
                        sdat.Fill(dst)
                        Dim seloptions As New ArrayList
                        For k As Integer = 0 To dst.Tables(0).Rows.Count - 1
                            seloptions.Add(dst.Tables(0).Rows(k).Item(0).ToString)
                        Next
                        Session.Add("seloptions", seloptions)
                        '*********************************

                        '******* To get the keys in array to traverse later **************
                        Dim keys(objStructureQuePaper.Options.Count) As Integer
                        objStructureQuePaper.Options.Keys.CopyTo(keys, 0)
                        Array.Reverse(keys)
                        '*****************************************************************
                        For jLoop = 0 To optcount - 1
                            'Create CheckBoxes Section
                            tbrow = New HtmlTableRow
                            tbrow.Height = "15px"
                            tblQuestion.Rows.Add(tbrow)
                            tbdat = New HtmlTableCell
                            tbdat.Align = "left"
                            'tbdat.Align = "right"
                            tbdat.InnerText = jLoop + 1
                            tbrow.Cells.Add(tbdat)

                            rdbut(i) = New RadioButton()
                            chkbx(i) = New CheckBox()

                            'If Session.Item("CheckPreviousFlag") = true And Session.Item("CheckReanswerFlag") = False then user can go previous and can reanswer the question because radio Buttons are in enable mode
                            If Session.Item("CheckPreviousFlag") = True And Session.Item("CheckReanswerFlag") = True Then
                                If FirstAttempt(intCurrPage) = True Then
                                    chkbx(i).Enabled = True

                                Else
                                    chkbx(i).Enabled = False
                                End If

                            Else
                                chkbx(i).Enabled = False
                            End If
                            'If Session.Item("CheckPreviousFlag") = False And Session.Item("CheckReanswerFlag") = False then user can't go previous and can't reanswer the question
                            If Session.Item("CheckPreviousFlag") = False And Session.Item("CheckReanswerFlag") = False Then
                                Dim sl As SortedList = DirectCast(ViewState("sl"), SortedList)
                                Dim take As Integer = 1
                                If sl(intCurrPage) = True Then
                                    chkbx(i).Enabled = False
                                Else
                                    chkbx(i).Enabled = True
                                End If
                            End If
                            'If Session.Item("CheckPreviousFlag") = true And Session.Item("CheckReanswerFlag") = False then user can go previous But can't reanswer the question because radio Buttons are in disable mode
                            If Session.Item("CheckPreviousFlag") = True And Session.Item("CheckReanswerFlag") = False Then
                                Dim sl As SortedList = DirectCast(ViewState("sl"), SortedList)
                                Dim take As Integer = 1
                                If sl(intCurrPage) = True Then
                                    chkbx(i).Enabled = False
                                Else
                                    chkbx(i).Enabled = True
                                End If

                            End If
                            chkbx(i).Enabled = True
                            chkbx(i).ID = TestType & "_" & objStructureQuePaper.QueId & "_" & keys(i + 1)
                            Dim stext As String = objStructureQuePaper.Options(keys(i + 1)).ToString
                            If stext.Contains("<br/>") Then
                                stext = stext.Replace("<br/>", " ")
                            End If
                            chkbx(i).Text = " " & stext
                            If Session.Item("SelectedOtionStatus") Is Nothing Then
                            Else
                                If IsSelected(keys(i + 1), seloptions) Then
                                    chkbx(i).Checked = True
                                End If
                            End If
                            strRadioBtnIds += chkbx(i).ID & ","

                            tbdat = New HtmlTableCell
                            tbdat.Width = "1px"
                            tbdat.InnerHtml = "&nbsp;"
                            tbdat.Align = "left"
                            tbrow.Cells.Add(tbdat)

                            tbdat = New HtmlTableCell
                            'tbdat.Width = "20px"
                            tbdat.Align = "left"

                            tbdat.Controls.Add(chkbx(i))
                            tbdat.ColSpan = 3
                            tbrow.Cells.Add(tbdat)

                            i = i + 1
                            ReDim Preserve rdbut(UBound(rdbut) + 1)
                            ReDim Preserve chkbx(UBound(rdbut) + 1)

                        Next
                        ' --------------------------------------------
                        'Code added by Pragnesha 
                        'Purpose: play Audio Question  using Audio control 
                        '---------------------------------------------
                        Dim myCommand1 As SqlCommand
                        Dim myDataReader1 As SqlDataReader
                        Dim sqlstr1 As String
                        Dim strauarray1() As String
                        Dim strA As String

                        sqlstr1 = "SELECT Audios From m_question where qnid=" & qid & " and test_type = '" & Session("testtypeval").ToString & "'"
                        myCommand1 = New SqlCommand(sqlstr1, objconn.MyConnection)
                        myDataReader1 = myCommand1.ExecuteReader
                        While myDataReader1.Read
                            strA = myDataReader1.Item("Audios")
                            strauarray1 = CheckAudio(strA)
                            Dim mytone As New System.Media.SoundPlayer
                            Dim rootPath As String = Server.MapPath("~")
                            Dim filepath As String = "QuestionAudio" & "/" & strA
                            HiddenField2.Value = Request.Url.Scheme.ToString + "://" + Request.Url.Host.ToString() + ":" + Request.Url.Port.ToString() + "/" + filepath

                        End While
                        '---------------------Ended By Pragnesha---------------


                    ElseIf objStructureQuePaper.QuesTypeID = "3" Then
                        'Code for Fill in the blanks
                        '*****Get The selected values*****
                        'now take option_id and sub_id to fill text boxes
                        Dim qry As String = "select option_id,result_id from t_result_option where result_id=" & "(SELECT result_id FROM t_result Where userid='" & Session.Item("userid") & "' and qno='" & Session.Item("structureQuestionpaper") & "' and test_type = '" & Session("testtypeval").ToString & "' and course_id=" & Session.Item("testType").ToString & ") "
                        'Dim dst As New DataSet
                        'Dim sdat As New SqlDataAdapter(qry, objconn.MyConnection)
                        dst = New DataSet
                        Dim dtDropDown As New DataTable()
                        sdat = New SqlDataAdapter(qry, objconn.MyConnection)
                        sdat.Fill(dst)
                        Dim seloptions As New ArrayList
                        For k As Integer = 0 To dst.Tables(0).Rows.Count - 1
                            seloptions.Add(dst.Tables(0).Rows(k).Item(0).ToString)
                        Next
                        Session.Add("seloptions", seloptions)
                        '*********************************
                        Dim slDropDown As SortedList = DirectCast(ViewState("slDropDown"), SortedList)

                        dtDropDown = dst.Tables(0)
                        dtDropDown = RemoveDuplicateRows(dtDropDown, "result_id")
                        Dim co As Integer = slDropDown.Count
                        If dtDropDown.Rows.Count <> 0 And slDropDown.Count <> 0 Then
                            If (slDropDown(dtDropDown.Rows(0).Item(1)) = dtDropDown.Rows(0).Item(1)) Then
                                flgDragDrop = True
                            Else
                                flgDragDrop = False
                            End If
                        End If

                        '******* To get the keys in array to traverse later **************
                        Dim keys(objStructureQuePaper.Options.Count) As Integer
                        objStructureQuePaper.Options.Keys.CopyTo(keys, 0)
                        Array.Reverse(keys)
                        'strRadioBtnIds = ""
                        '*****************************************************************
                        For jLoop = 0 To optcount - 1
                            'Create Options Section
                            tbrow = New HtmlTableRow
                            tbrow.Height = "15px"
                            tblQuestion.Rows.Add(tbrow)
                            tbdat = New HtmlTableCell
                            tbdat.Align = "left"
                            'tbdat.Align = "right"
                            tbdat.InnerText = jLoop + 1
                            tbrow.Cells.Add(tbdat)

                            rdbut(i) = New RadioButton()
                            chkbx(i) = New CheckBox()
                            'If Session.Item("CheckPreviousFlag") = False And Session.Item("CheckReanswerFlag") = False then user can't go previous and can't reanswer the question
                            If Session.Item("CheckPreviousFlag") = False And Session.Item("CheckReanswerFlag") = False Then
                                Dim sl As SortedList = DirectCast(ViewState("sl"), SortedList)
                                Dim take As Integer = 1
                                If sl(intCurrPage) = True Then

                                    ' chkbx(i).Enabled = False
                                Else

                                    ' chkbx(i).Enabled = True
                                End If
                            End If

                            If Session.Item("CheckPreviousFlag") = True And Session.Item("CheckReanswerFlag") = False Then
                                Dim sl As SortedList = DirectCast(ViewState("sl"), SortedList)
                                Dim take As Integer = 1
                                If sl(intCurrPage) = True Then
                                    ' chkbx(i).Enabled = False
                                Else
                                    ' chkbx(i).Enabled = True
                                End If

                            End If

                            If Session.Item("CheckPreviousFlag") = True And Session.Item("CheckReanswerFlag") = True Then
                                'chkbx(i).Enabled = True
                            Else

                            End If
                            'chkbx(i).Visible = True
                            'chkbx(i).Enabled = True
                            ' chkbx(i).ID = TestType & "_" & objStructureQuePaper.QueId & "_" & keys(i + 1)
                            strfinal = "<div  class=draggable    id='" & TestType & "_" & objStructureQuePaper.QueId & "_" & keys(i + 1) & "'>" & " " & objStructureQuePaper.Options(keys(i + 1)).ToString & "</div>"
                            'chkbx(i).Text = " " & objStructureQuePaper.Options(keys(i + 1)).ToString

                            ' strRadioBtnIds += chkbx(i).ID + ","
                            If Session.Item("SelectedOtionStatus") Is Nothing Then
                            Else

                                If IsSelected(keys(i + 1), seloptions) Then
                                    ' chkbx(i).Checked = True
                                End If
                            End If

                            tbdat = New HtmlTableCell
                            tbdat.Width = "20px"
                            tbdat.Align = "left"
                            'Dim flagTestAppeared As Boolean = checkTestAppeared()
                            'If (flagTestAppeared) Then


                            Dim userapeeredflagvalue As Integer = Integer.Parse(Session.Item("UserApperedFlag"))
                            '    If (userapeeredflagvalue = 1) Then

                            '    End If
                            'End If

                            Dim str As String = objStructureQuePaper.QueId.ToString
                            If (flgDragDrop) And userapeeredflagvalue = 1 And objStructureQuePaper.QueId.ToString <> "0" Then
                                ' tbdat.InnerHtml = strfinal
                                tbdat.InnerHtml = objStructureQuePaper.Options(keys(i + 1)).ToString
                                strRadioBtnIds = strDragDrop
                                Dim strDD As String = ""
                                strDD += strDragDrop
                                rdbCheckedId.Value = strDD
                            Else

                                tbdat.InnerHtml = strfinal
                                strRadioBtnIds += (TestType & "_" & objStructureQuePaper.QueId & "_" & keys(i + 1)).ToString + ","
                            End If
                            'tbdat.InnerHtml = objStructureQuePaper.Options(keys(i + 1)).ToString

                            'tbdat.InnerHtml = strfinal
                            ' tbdat.InnerHtml = objStructureQuePaper.Options(keys(i + 1)).ToString
                            ' tbdat.Controls.Add(chkbx(i))
                            tbdat.ColSpan = 3
                            tbrow.Cells.Add(tbdat)

                            tbdat = New HtmlTableCell

                            tbdat.Align = "left"
                            tbdat.Width = "500px"
                            tbrow.Cells.Add(tbdat)

                            i = i + 1
                            ReDim Preserve rdbut(UBound(rdbut) + 1)
                            ReDim Preserve chkbx(UBound(rdbut) + 1)

                        Next
                        flgDragDrop = False
                    End If

                    tbrow = New HtmlTableRow
                    tblQuestion.Rows.Add(tbrow)

                Next
                'End If

                rdbAllId.Value = strRadioBtnIds
                Session.Add("CurrentPage", intCurrPage + 1)
                Session.Add("EndQues", intEndNo)
            End If
        Catch ex As Exception
            If Not objconn.MyConnection Is Nothing Then
                If objconn.MyConnection.State = ConnectionState.Open Then
                    objconn.disconnect()
                End If
            End If

            If log.IsDebugEnabled Then
                log.Debug("Error :" & ex.ToString())
            End If
            Response.Redirect("error.aspx?err=" & ex.Message, False)
           
        Finally
            If Not objconn.MyConnection Is Nothing Then
                If objconn.MyConnection.State = ConnectionState.Open Then
                    objconn.disconnect()
                End If
            End If
            objCommand = Nothing
            objDataReader = Nothing
            objconn = Nothing
            objHashTable = Nothing
            objStructureQuePaper = Nothing
            vda = Nothing
            vds = Nothing
            sda = Nothing
            sdat = Nothing
            dst = Nothing
            dss = Nothing
            Session.Item("SelectedOtionStatus") = Nothing
            '  objconn.disconnect()
        End Try

    End Sub
#End Region

#Region "LnkQuestionClick"
    '****************************************************************************************************************************************
    'Code added by Monal Shah
    'MethodName:LnkQuestionClick
    'Purpose:When QuestionNumber means LinkButton is Clicked at that time that clicked QuestionNumber is displayed on page and student answer
    'that question than that linkbutton display with  bold and black color,this Link is disabled when checkpreviousflag and checkReanswerflag
    'is false in m_systemSetings.
    '**************************************************************************************************************************************
    Private Sub LnkQuestionClick(ByVal sender As Object, ByVal e As CommandEventArgs)
        Try
            'Dim s As String = HidTime.Value
            'If Not String.IsNullOrEmpty(s) Then
            '      Session("TestXX") = s
            'End If
            Dim lnk As LinkButton = TryCast(sender, LinkButton)
            Dim currentPage As Integer = Integer.Parse(lnk.CommandName)
            Dim lastIndex As Integer = 1
            If Session.Item("rf") IsNot Nothing Then
                Session.Remove("rf")
            End If
            If Not ViewState("click") Is Nothing Then
                lastIndex = Convert.ToInt32(ViewState("click"))
            End If

            ViewState("click") = lnk.CommandName

            Dim sel As Integer = Convert.ToInt32((Session.Item("TotalQueCnt")))


            Dim take As Integer = currentPage * 1
            Dim sl As SortedList = DirectCast(ViewState("sl"), SortedList)
            '   ViewState("pageno") = currentPage 'added by namrata date24/10/2017
            'Dim checkpreviousflag As Boolean = CheckForPreviousFlag()
            Dim checkpreviousflag As Boolean
            If Session.Item("CheckPreviousFlag") IsNot Nothing Then
                checkpreviousflag = Session.Item("CheckPreviousFlag")
            Else
                checkpreviousflag = CheckForPreviousFlag()
            End If
            Dim checkreanswerflag As Boolean
            If Session.Item("CheckReanswerFlag") IsNot Nothing Then
                checkreanswerflag = Session.Item("CheckReanswerFlag")
            Else
                checkreanswerflag = CheckForReanswerFlag()
            End If

            If checkpreviousflag = False And checkreanswerflag = False Then
                If rdbCheckedId.Value <> Nothing Or rdbCheckedId.Value <> "" Then
                    sl(lastIndex) = True
                    ViewState.Add("sl", sl)
                    Dim sol As SortedList = DirectCast(ViewState("sl"), SortedList)
                    Dim takelnkvalue As Integer = 1
                    For i As Integer = 1 To sol.Count
                        If sol(i) = True Then
                            lnk.Attributes.Remove("href")
                            lnk.Attributes.Remove("className")
                            lnk.Attributes.Add("onclick", "return false")
                        End If
                    Next
                ElseIf rdbCheckedId.Value = Nothing Or rdbCheckedId.Value = "" Then
                    sl(lastIndex) = False
                    ViewState.Add("sl", sl)
                End If
            ElseIf checkpreviousflag = True And checkreanswerflag = True Then
                lnk.Enabled = True
                If rdbCheckedId.Value <> Nothing Or rdbCheckedId.Value <> "" Then
                    sl(lastIndex) = True
                    ViewState.Add("sl", sl)
                ElseIf rdbCheckedId.Value = Nothing Or rdbCheckedId.Value = "" Then
                    sl(lastIndex) = CheckDropDownValue()
                    ViewState.Add("sl", sl)
                End If
            ElseIf checkpreviousflag = True And checkreanswerflag = False Then
                lnk.Enabled = True
                If rdbCheckedId.Value <> Nothing Or rdbCheckedId.Value <> "" Then
                    sl(lastIndex) = True
                    ViewState.Add("sl", sl)
                ElseIf rdbCheckedId.Value = Nothing Or rdbCheckedId.Value = "" Then
                    sl(lastIndex) = CheckDropDownValue()
                    ViewState.Add("sl", sl)
                End If
            End If
            Session.Add("TestXX", currTime.Value)
            InsertData()
            CreateControl(Session.Item("TotalQueCnt"))
            UpdateLabel()
            generateQuePanel(take)

            If (sel = ViewState("next")) Then
                imgBtnNext.Enabled = False
                imgBtnLast.Enabled = False
            Else
                imgBtnNext.Enabled = True
                imgBtnLast.Enabled = True
            End If
            ''''''''''''''''''''''''''
            If (sel = ViewState("click")) Then
                imgBtnNext.Enabled = False
                imgBtnLast.Enabled = False
            Else
                imgBtnNext.Enabled = True
                imgBtnLast.Enabled = True
            End If
            '''''''''''''''''''''''''''

            If (ViewState("next") = "1") Then
                imgBtnPrevious.Enabled = False
                imgBtnFirst.Enabled = False
            Else
                imgBtnFirst.Enabled = True
                imgBtnPrevious.Enabled = True
            End If
            '''''''''''''''''''''''''
            If (ViewState("click") = "1") Then
                imgBtnPrevious.Enabled = False
                imgBtnFirst.Enabled = False
            Else
                imgBtnFirst.Enabled = True
                imgBtnPrevious.Enabled = True
            End If
            '''''''''''''''''''''''''''''''
            If checkpreviousflag = False And checkreanswerflag = False Then
                imgBtnFirst.Enabled = False
                imgBtnPrevious.Enabled = False
                imgBtnLast.Enabled = False
                imgBtnNext.Enabled = True
            ElseIf checkpreviousflag = True And checkreanswerflag = False Then
                imgBtnFirst.Enabled = True
                imgBtnPrevious.Enabled = True
                imgBtnLast.Enabled = True
                imgBtnNext.Enabled = True
            ElseIf checkpreviousflag = True And checkreanswerflag = True Then
                imgBtnFirst.Enabled = True
                imgBtnPrevious.Enabled = True
                imgBtnLast.Enabled = True
                imgBtnNext.Enabled = True
            End If



        Catch ex As Exception
            If log.IsDebugEnabled Then
                log.Debug("Error :" & ex.ToString())
            End If
            Response.Redirect("error.aspx?err=" & ex.Message, False)

        End Try

    End Sub
#End Region

#Region "Update test appeared flag in database"
    '****************************************************************************************************************************************
    'Code added by Monal Shah
    'MethodName:updateTestAppeared
    'Purpose:Update the appered Flag as 1 after the exam start and question assigned
    '***************************************************************************************************************************************

    Private Function updateTestAppeared(ByVal strPathDb As String)
        Dim strSql As String
        Dim objConn As New ConnectDb
        Dim objCommand As SqlCommand
        Dim onjTransaction As SqlTransaction
        If objConn.connect() Then
            onjTransaction = objConn.MyConnection.BeginTransaction()
            Try

                strSql = "update t_candidate_status set AppearedFlag=1,written_test_appear_date = '" & Now & "' where userid=" & UserID & " and " & "Course_ID = '" & TestType & "'"

                objCommand = New SqlCommand(strSql, objConn.MyConnection)

                objCommand.Transaction = onjTransaction
                objCommand.ExecuteNonQuery()
                onjTransaction.Commit()
                objCommand.Dispose()
            Catch ex As Exception
                onjTransaction.Rollback()
                If log.IsDebugEnabled Then
                    log.Debug("Error :" & ex.ToString())
                End If
                If objConn IsNot Nothing Then
                    objConn.disconnect()
                End If
                Response.Redirect("error.aspx?err=" & ex.Message, False)
            Finally
                If objConn IsNot Nothing Then
                    objConn.disconnect()
                End If
                objCommand = Nothing
                objConn = Nothing
                onjTransaction = Nothing
                strSql = Nothing
            End Try
        End If
    End Function
#End Region

#Region "Decode String"
    '****************************************************************************************************************************************
    'Code added by Monal Shah
    'MethodName:sDecodeString
    'Purpose:Decode the string
    '***************************************************************************************************************************************
    Function sDecodeString(ByVal sText As String) As String
        Dim iCnt
        Dim sChar
        Dim sDecode
        Try
            sDecode = ""
            sChar = Split(sText, ENCRYPT_DELIMIT)
            For iCnt = 1 To UBound(sChar)
                sDecode = sDecode & Chr(CLng("&H" & sChar(iCnt)) - ENCRYPT_KEY)
            Next
            sDecodeString = sDecode
        Catch ex As Exception
            If log.IsDebugEnabled Then
                log.Debug("Error :" & ex.ToString())
            End If
            Response.Redirect("error.aspx?err=" & ex.Message, False)

        End Try
    End Function
#End Region

#Region "Check for user appeared for test"
    '****************************************************************************************************************************************
    'Code added by Monal Shah
    'MethodName:checkTestAppeared
    'Purpose:Check Student is Appeared for first time or secondtime.
    'if AppearedFlag=0 ---------For First Time
    'if AppearedFlag=1 ---------For First Time But Some other Problem Like PowerFailure Problem then it is for 2nd time
    'if AppearedFlag=2 ---------Alredy Applered in exam
    '****************************************************************************************************************************************
    Private Function checkTestAppeared() As Boolean

        Dim objConn As New ConnectDb    'object of the ConnectClass class
        Dim strCheck As String
        Dim sUsr As String
        Dim aUsr() As String
        Dim objCommand As SqlCommand
        Dim objDataReader As SqlDataReader
        Dim flagCheck As Boolean
        Dim intCheck As Integer
        Dim strAppearedDate As String

        Try
            sUsr = Request.QueryString("usr")
            sUsr = sDecodeString(sUsr)
            If sUsr(0) = "|" Then
                sUsr = sUsr.Substring(1, sUsr.Length - 1)
            End If
            strCheck = ""
            For intCheck = 0 To sUsr.Length - 1
                If sUsr(intCheck) = "|" Then
                    strCheck += sUsr(intCheck)
                    While sUsr(intCheck + 1) = "|"
                        intCheck = intCheck + 1
                    End While
                Else
                    strCheck += sUsr(intCheck)
                End If
            Next

            aUsr = Split(strCheck, "|")
            UserID = Convert.ToInt32(aUsr(0))
            TestType = aUsr(1)
            Session.Add("TestType", TestType)

            Dim strSql As String = "Select AppearedFlag from t_candidate_status where userid=" & UserID & " and " & "Course_ID = '" & TestType & "'"
            If True = objConn.connect() Then
                objCommand = New SqlCommand(strSql, objConn.MyConnection)
                objDataReader = objCommand.ExecuteReader
                If objDataReader.Read() And objDataReader("AppearedFlag") > 0 Then
                    Session.Add("UserApperedFlag", objDataReader("AppearedFlag"))
                    If (1 = objDataReader("AppearedFlag")) Then
                        flagCheck = True
                    End If
                    If (2 = objDataReader("AppearedFlag")) Then
                        flagCheck = True
                    End If
                Else
                    Session.Add("UserApperedFlag", objDataReader("AppearedFlag"))
                    If (0 = objDataReader("AppearedFlag")) Then
                        flagCheck = False
                    End If
                End If


                If Not objConn.MyConnection Is Nothing Then
                    If objConn.MyConnection.State = ConnectionState.Open Then
                        objConn.disconnect()
                    End If
                End If
                'objConn = Nothing
                objDataReader = Nothing
                objCommand = Nothing
            End If

            If True = objConn.connect() Then
                Dim strSqlSelect As String = "Select written_test_date, written_test_appear_date from t_candidate_status where userid=" & UserID & " and " & "Course_ID = '" & TestType & "'"
                objCommand = New SqlCommand(strSqlSelect, objConn.MyConnection)
                objDataReader = objCommand.ExecuteReader

                If flagCheck = False And objDataReader.Read() Then
                    strExamDate = Convert.ToString(Format(objDataReader.Item(0), "yyyy/MM/dd"))
                    strAppearedDate = Convert.ToString(objDataReader.Item(1))
                    If strAppearedDate <> "" Then
                        flagCheck = True
                    End If
                End If
            End If

            If Not objConn.MyConnection Is Nothing Then
                If objConn.MyConnection.State = ConnectionState.Open Then
                    objConn.disconnect()
                End If
            End If
            'objConn.disconnect()
            'objConn = Nothing
            objDataReader = Nothing
            objCommand = Nothing
            checkTestAppeared = flagCheck
        Catch ex As Exception
            If Not objConn.MyConnection Is Nothing Then
                If objConn.MyConnection.State = ConnectionState.Open Then
                    objConn.disconnect()
                End If
            End If
            If log.IsDebugEnabled Then
                log.Debug("Error :" & ex.ToString())
            End If
            Response.Redirect("error.aspx?err=" & ex.Message, False)

        Finally
            If Not objConn.MyConnection Is Nothing Then
                If objConn.MyConnection.State = ConnectionState.Open Then
                    objConn.disconnect()
                End If
            End If
            objCommand = Nothing
            objDataReader = Nothing
            objConn = Nothing
            strCheck = Nothing
            sUsr = Nothing
            aUsr = Nothing
        End Try
    End Function
#End Region

#Region "Get system setting value"
    '****************************************************************************************************************************************
    'Code added by Monal Shah
    'MethodName:getSystemSetting
    'Purpose:Get system setting value from m_systemSetting table
    '****************************************************************************************************************************************
    Private Function getSystemSetting()
        Dim sqlstr As String
        Dim myCommand As SqlCommand
        Dim myDataReader As SqlDataReader
        Dim objconn As New ConnectDb

        Try
            If objconn.connect() Then
                ' Get No of question per page value
                'sqlstr = "select value from m_system_settings where key1 = 'que_paper' and key2 = 'que_per_page'"
                sqlstr = "select value from m_system_settings where key1 = 'que_paper_page' and key2 = 'que_per_page'"
                myCommand = New SqlCommand(sqlstr, objconn.MyConnection)
                myDataReader = myCommand.ExecuteReader()

                While myDataReader.Read
                    If Not IsDBNull(myDataReader.Item("value")) Then
                        strQuePerPage = myDataReader.Item("value")
                        Session("QuePerPage") = strQuePerPage
                    End If
                End While

                myCommand.Dispose()
                myDataReader.Close()
                If objconn IsNot Nothing Then
                    objconn.disconnect()
                End If
            End If
        Catch ex As Exception
            If log.IsDebugEnabled Then
                log.Debug("Error :" & ex.ToString())
            End If
            If objconn IsNot Nothing Then
                objconn.disconnect()
            End If
            Response.Redirect("error.aspx?err=" & ex.Message, False)

        Finally
            If objconn IsNot Nothing Then
                objconn.disconnect()
            End If
            sqlstr = Nothing
            objconn = Nothing
            myCommand = Nothing
            myDataReader = Nothing
        End Try
    End Function
#End Region

#Region "ExamineeValidate"
    '****************************************************************************************************************************************
    'Code added by Monal Shah
    'MethodName:ExamineeValidation
    'Purpose:Validate the date and user
    '****************************************************************************************************************************************
    'sUsr willl be passed from URL
    Private Function ExamineeValidation(ByVal sUsr As String) As Boolean

        Dim aUsr As Array
        Dim userid As String
        Dim testType As String
        Dim noOfDays As Long
        Dim objconn As New ConnectDb
        Dim sqlstr, strCheck As String
        Dim myCommand As SqlCommand
        Dim myDataReader As SqlDataReader
        Dim intCheck As Integer
        Try
            sUsr = Request.QueryString("usr")
            sUsr = sDecodeString(sUsr)
            If sUsr(0) = "|" Then
                sUsr = sUsr.Substring(1, sUsr.Length - 1)
            End If
            strCheck = ""
            For intCheck = 0 To sUsr.Length - 1
                If sUsr(intCheck) = "|" Then
                    strCheck += sUsr(intCheck)
                    While sUsr(intCheck + 1) = "|"
                        intCheck = intCheck + 1
                    End While
                Else
                    strCheck += sUsr(intCheck)
                End If
            Next
            aUsr = Split(strCheck, "|")
            userid = Convert.ToInt32(aUsr(0))
            testType = aUsr(1)
            Session.Add("userid", CInt(aUsr(0)))
            Session.Add("testtype", aUsr(1))

            If objconn.connect() Then
                sqlstr = "SELECT written_test_date,written_test_remark FROM t_candidate_status"
                sqlstr = sqlstr & " WHERE userid=" & Session.Item("userid")
                sqlstr = sqlstr & " AND test_type= '" & Session.Item("testtype") & "'"
                myCommand = New SqlCommand(sqlstr, objconn.MyConnection)
                myDataReader = myCommand.ExecuteReader()
                While myDataReader.Read
                    If Not IsDBNull(myDataReader.Item("written_test_date")) And IsDBNull(myDataReader.Item("written_test_remark")) Then
                        noOfDays = DateDiff(DateInterval.Day, myDataReader.Item("written_test_date"), Now())
                        If noOfDays > 3 Or noOfDays < 0 Then
                            ExamineeValidation = False
                        Else
                            ExamineeValidation = True
                        End If
                    Else
                        ExamineeValidation = False
                    End If
                End While
                myCommand.Dispose()
                myDataReader.Close()
                If objconn IsNot Nothing Then
                    objconn.disconnect()
                End If
            End If
        Catch ex As Exception
            If log.IsDebugEnabled Then
                log.Debug("Error :" & ex.ToString())
            End If
            If objconn IsNot Nothing Then
                objconn.disconnect()
            End If
            Response.Redirect("error.aspx?err=" & ex.Message, False)

        Finally
            userid = Nothing
            testType = Nothing
            sqlstr = Nothing
            If objconn IsNot Nothing Then
                objconn.disconnect()
            End If
            aUsr = Nothing
            objconn = Nothing
            myCommand = Nothing
            strCheck = Nothing
            myDataReader = Nothing
        End Try
    End Function
#End Region

#Region "Insert Data"
    '****************************************************************************************************************************************
    'Code added by Monal Shah
    'MethodName:InsertData
    'Purpose:update the student's Selected option into t_result and this function is called in all navigation controls 
    '****************************************************************************************************************************************
    Public Sub InsertData()

        Dim arr(10) As String
        Dim sqlstr As String
        Dim myCommand As SqlCommand
        Dim objconn As New ConnectDb
        Dim optionNo As Integer
        Dim strSqlBuilder As New StringBuilder("")
        Dim strUserID As String = Session.Item("userid")
        Dim strTestType As String = Session.Item("TestType")


        Dim arrLoop As Integer = 0
        Dim strChecked As String = rdbCheckedId.Value
        Dim strNotAttempt As String = queNotAttempt.Value
        Dim strCheckedArray As String() = strChecked.Split(",")
        Dim strNotAttemptArray As String() = strNotAttempt.Split(",")
        Dim intQuestype As Integer = 0

        Dim qr, q As String
        Dim mds As DataSet
        Dim mda As SqlDataAdapter
        Dim mcommand As SqlCommand
        Dim dss As DataSet
        Dim sda As SqlDataAdapter
        Try

            'Code written by Vasava Indravadan 
            'Date : 2011/04/13
            'Reason : New table T_result_option added for correct answer checking
            '         Update to be done in T_result_option 
            '*********************** start **********************************
            If strCheckedArray.Length > 1 Then
                Try
                    If objconn.connect() = True Then
                        For arrLoop = 0 To strCheckedArray.Length - 2
                            arr = Split(strCheckedArray(arrLoop), "_", -1, CompareMethod.Text)
                            optionNo = arr(2)
                            '***************** Code to get the answer id***************************
                            qr = " select qn_category_id from M_question where qnid=" & arr(1) & " and test_type=" & Session("testtypeval").ToString()
                            mds = New DataSet()
                            mda = New SqlDataAdapter(qr, objconn.MyConnection)
                            mda.Fill(mds)
                            If mds.Tables(0).Rows.Count > 0 Then
                                intQuestype = mds.Tables(0).Rows(0).Item(0)
                            Else
                                intQuestype = 0

                            End If
                            mda = Nothing
                            mds = Nothing
                            '**********************************************************************
                            If intQuestype = 1 Then
                                ' code for radio buton
                                q = " select result_id from T_result where userid=" & strUserID & " and Course_ID='" & Session.Item("testtype") & "' and test_type=" & Session("testtypeval").ToString() & " and qno = " & arr(1)
                                dss = New DataSet()
                                sda = New SqlDataAdapter(q, objconn.MyConnection)
                                sda.Fill(dss)
                                Try
                                    If dss.Tables(0).Rows.Count > 0 Then
                                        Dim update As String = "Update T_result_option with(rowlock) set option_id=" & optionNo & "where result_id = " & dss.Tables(0).Rows(0).Item(0).ToString & ";"
                                        'mcommand = New SqlCommand("Update T_result_option with(rowlock) set option_id=" & optionNo & "where result_id = " & dss.Tables(0).Rows(0).Item(0).ToString, objconn.MyConnection)
                                        'mcommand.ExecuteNonQuery()
                                        ViewState.Add("strqestionSql", ViewState("strqestionSql") + update)
                                    End If

                                Catch ex As Exception
                                    If log.IsDebugEnabled Then
                                        log.Debug("Error :" & ex.ToString())
                                    End If
                                    Response.Redirect("error.aspx?err=" & ex.Message, False)
                                Finally
                                    mcommand = Nothing
                                    dss = Nothing
                                    sda = Nothing
                                End Try
                            ElseIf intQuestype = 2 Then
                                ' ode for check box
                                q = ""
                                q = " select result_id from T_result where userid=" & strUserID & " and Course_ID='" & Session.Item("testtype") & "' and test_type=" & Session("testtypeval").ToString() & " and qno = " & arr(1)
                                'Dim mcommand As SqlCommand
                                dss = New DataSet()
                                sda = New SqlDataAdapter(q, objconn.MyConnection)
                                sda.Fill(dss)

                                If (arrLoop = 0) Then
                                    Dim dqry As String = "delete from T_Result_option where result_id=" & dss.Tables(0).Rows(0).Item(0).ToString & ";"
                                    'mcommand = New SqlCommand(dqry, objconn.MyConnection)
                                    'mcommand.ExecuteNonQuery()
                                    'mcommand = Nothing
                                    ViewState.Add("strqestionSql", ViewState("strqestionSql") + dqry)
                                End If

                                Try
                                    Dim qry As String = "Insert into T_result_option(result_id,option_id) Values(" & dss.Tables(0).Rows(0).Item(0).ToString & "," & optionNo & ")" & ";"
                                    'mcommand = New SqlCommand(qry, objconn.MyConnection)
                                    'mcommand.ExecuteNonQuery()
                                    ViewState.Add("strqestionSql", ViewState("strqestionSql") + qry)
                                Catch ex As Exception
                                    If log.IsDebugEnabled Then
                                        log.Debug("Error :" & ex.ToString())
                                    End If
                                    Response.Redirect("error.aspx?err=" & ex.Message, False)
                                Finally
                                    mcommand = Nothing
                                    dss = Nothing
                                    sda = Nothing
                                End Try
                            ElseIf intQuestype = 3 Then
                                ' code for blanks
                                q = ""
                                q = " select result_id from T_result where userid=" & strUserID & " and Course_ID='" & Session.Item("testtype") & "' and test_type=" & Session("testtypeval").ToString() & " and qno = " & arr(1)
                                dss = New DataSet()
                                sda = New SqlDataAdapter(q, objconn.MyConnection)
                                sda.Fill(dss)

                                If arr(0).Contains("droppable") = False Then
                                    If (arrLoop = 0) Then
                                        Dim dqry As String = "delete from T_Result_option where result_id=" & dss.Tables(0).Rows(0).Item(0).ToString & ";"
                                        'mcommand = New SqlCommand(dqry, objconn.MyConnection)
                                        'mcommand.ExecuteNonQuery()
                                        'mcommand = Nothing
                                        ViewState.Add("strqestionSql", ViewState("strqestionSql") + dqry)
                                    End If

                                    Try
                                        Dim qry As String = "Insert into T_result_option(result_id,sub_id,option_id) Values(" & dss.Tables(0).Rows(0).Item(0).ToString & "," & optionNo & "," & arr(3) & ")" & ";"
                                        'mcommand = New SqlCommand(qry, objconn.MyConnection)
                                        'mcommand.ExecuteNonQuery()
                                        ViewState.Add("strqestionSql", ViewState("strqestionSql") + qry)
                                        ViewState.Add("DragDrop", strChecked)
                                    Catch ex As Exception
                                        If log.IsDebugEnabled Then
                                            log.Debug("Error :" & ex.ToString())
                                        End If
                                        Response.Redirect("error.aspx?err=" & ex.Message, False)
                                    Finally
                                        mcommand = Nothing
                                        dss = Nothing
                                        sda = Nothing
                                    End Try
                                End If
                            End If

                            '*********************** end **********************************

                        Next
                    End If
                Catch ex As Exception
                    If Not objconn.MyConnection Is Nothing Then
                        If objconn.MyConnection.State = ConnectionState.Open Then
                            objconn.disconnect()
                        End If
                    End If
                    If log.IsDebugEnabled Then
                        log.Debug("Error :" & ex.ToString())
                    End If
                    Response.Redirect("error.aspx?err=" & ex.Message, False)
                Finally
                    If Not objconn.MyConnection Is Nothing Then
                        If objconn.MyConnection.State = ConnectionState.Open Then
                            objconn.disconnect()
                        End If
                    End If
                End Try
            End If
            'Else

            'End If
            'fnc_calc_result(myCommand, objconn)
            '   objconn.disconnect()

        Catch ex As Exception
            If Not objconn.MyConnection Is Nothing Then
                If objconn.MyConnection.State = ConnectionState.Open Then
                    objconn.disconnect()
                End If
            End If
            If log.IsDebugEnabled Then
                log.Debug("Error :" & ex.ToString())
            End If
            Response.Redirect("error.aspx?err=" & ex.Message, False)

        Finally
            If Not objconn.MyConnection Is Nothing Then
                If objconn.MyConnection.State = ConnectionState.Open Then
                    objconn.disconnect()
                End If
            End If
            '  objconn.disconnect()
            arr = Nothing
            strCheckedArray = Nothing
            strNotAttemptArray = Nothing
            sqlstr = Nothing
            myCommand = Nothing
            objconn = Nothing
        End Try
    End Sub
#End Region

#Region "Calculate Result"
    '****************************************************************************************************************************************
    'Code added by Monal Shah
    'MethodName:fnc_calc_result
    'Purpose:Calculate the result of student
    '****************************************************************************************************************************************
    Private Sub fnc_calc_result(ByVal myCommand As SqlCommand, ByVal objconn As ConnectDb)

        Dim sqlstr As String
        Dim myDataReader As SqlDataReader
        'Dim correctans As Integer
        Dim CONS As New unirecruite.Errconstants
        'Dim myCommand1 As SqlTransaction
        Dim Courseid As String = Session.Item("TestType")
        Dim OConn As New ConnectDb

        Try
            sqlstr = ""
            sqlstr = sqlstr & "SELECT COUNT(t_result.qno) FROM t_result, m_question WHERE "
            sqlstr = sqlstr & "t_result.userid = " & Session.Item("userid") & " AND "
            sqlstr = sqlstr & "t_result.qno = [m_question].[qnid] AND "

            sqlstr = sqlstr & "t_result.test_type = [m_question].[test_type] AND "
            sqlstr = sqlstr & "t_result.test_type In (Select test_type From m_testinfo where Course_ID='" & Courseid & "' and del_flag='0')"
            myCommand = New SqlCommand(sqlstr, objconn.MyConnection)
            myDataReader = myCommand.ExecuteReader

            'If myDataReader.Read() Then
            '    correctans = myDataReader.Item(0)
            '    strCorrectAns = correctans.ToString
            'End If

            myDataReader.Close()
            sqlstr = ""
            sqlstr = sqlstr & "UPDATE t_candidate_status SET "
            sqlstr = sqlstr & "written_test_appear_date = '" & Now & "' WHERE "
            sqlstr = sqlstr & "userid = " & Session.Item("userid") & " AND "
            sqlstr = sqlstr & "Course_ID = '" & Courseid & "'"
            myCommand = New SqlCommand(sqlstr, objconn.MyConnection)
            'myCommand1 = objconn.MyConnection.BeginTransaction()
            'myCommand.Transaction = myCommand1
            myCommand.ExecuteNonQuery()
            'myCommand1.Commit()

        Catch ex As Exception
            If log.IsDebugEnabled Then
                log.Debug("Error :" & ex.ToString())
            End If
            If objconn IsNot Nothing Then
                objconn.disconnect()
            End If
            Response.Redirect("error.aspx?err=" & ex.Message, False)

        Finally
            sqlstr = Nothing
            myDataReader = Nothing
            Courseid = Nothing
            OConn = Nothing
            If objconn IsNot Nothing Then
                objconn.disconnect()
            End If

        End Try
    End Sub
#End Region

#Region "GetTime"
    '****************************************************************************************************************************************
    'Code added by Monal Shah
    'MethodName:GetTime
    'Purpose:Here Time value get from M_Course and assign to the timer
    '****************************************************************************************************************************************

    Public Function GetTime() As Integer
        Dim aUsr As Array
        'Dim ArrTemp() As String
        Dim userid As String
        Dim testType As String
        'Dim noOfDays As Long
        Dim objconn As New ConnectDb
        Dim sqlstr, strCheck As String
        Dim myCommand As SqlCommand
        Dim myDataReader As SqlDataReader
        Dim sUsr As String
        'Dim strPathDb As String
        Dim intCheck As Integer
        Try
            If Request.QueryString("Status") = Nothing Then


                sUsr = Request.QueryString("lnks")
                aUsr = Split(sUsr, "=")
                sUsr = sDecodeString(aUsr(1))

                If sUsr(0) = "|" Then
                    sUsr = sUsr.Substring(1, sUsr.Length - 1)
                End If
                strCheck = ""
                For intCheck = 0 To sUsr.Length - 1
                    If sUsr(intCheck) = "|" Then
                        strCheck += sUsr(intCheck)
                        While sUsr(intCheck + 1) = "|"
                            intCheck = intCheck + 1
                        End While
                    Else
                        strCheck += sUsr(intCheck)
                    End If
                Next
                aUsr = Split(strCheck, "|")
                userid = Convert.ToInt32(aUsr(0))
                testType = aUsr(1)


                'strPathDb = ConfigurationManager.AppSettings("PathDb")
                If objconn.connect() Then
                    sqlstr = "SELECT total_time FROM M_Course"
                    sqlstr = sqlstr & " Where Course_ID= '" & testType & "' and del_flag='0' "
                    myCommand = New SqlCommand(sqlstr, objconn.MyConnection)
                    myDataReader = myCommand.ExecuteReader()
                    While myDataReader.Read
                        Session.Add("TestXX", myDataReader.Item("total_time"))
                        GetTime = myDataReader.Item("total_time")
                    End While
                    myCommand.Dispose()
                    myDataReader.Close()
                    If objconn IsNot Nothing Then
                        objconn.disconnect()
                    End If
                End If
            End If
        Catch ex As Exception
            If log.IsDebugEnabled Then
                log.Debug("Error :" & ex.ToString())
            End If
            If objconn IsNot Nothing Then
                objconn.disconnect()
            End If
            Response.Redirect("error.aspx?err=" & ex.Message, False)
        Finally
            If objconn IsNot Nothing Then
                objconn.disconnect()
            End If
            aUsr = Nothing
            myCommand = Nothing
            objconn = Nothing
            myDataReader = Nothing
        End Try

    End Function
#End Region

#Region "Get Question"
    '****************************************************************************************************************************************
    'Code added by Monal Shah
    'MethodName:GetQuestion
    'Purpose:In this function random Question id's generated
    '****************************************************************************************************************************************
    Function GetQuestion(ByVal str As String) As String

        Dim currpos As Integer
        Dim enterpos As Integer
        Dim endstr As String
        Try
            endstr = ""
            currpos = 1
            While InStr(currpos, Trim(str), vbCrLf) >= 0
                enterpos = InStr(currpos, Trim(str), vbCrLf) - 1
                If enterpos - currpos + 1 > 0 Then
                    endstr = endstr & Mid$(str, currpos, enterpos - 1) & "<br>"
                Else
                    endstr = endstr & Mid$(str, currpos, str.Length())
                    Exit While
                End If
                currpos = InStr(currpos, Trim(str), vbCrLf) + 1
            End While
            GetQuestion = endstr
        Catch ex As Exception
            If log.IsDebugEnabled Then
                log.Debug("Error :" & ex.ToString())
            End If
            Response.Redirect("error.aspx?err=" & ex.Message, False)

        Finally
            endstr = Nothing
        End Try
    End Function
#End Region
#Region "Commented code"
    '#Region "Question Array"
    '    '****************************************************************************************************************************************
    '    'Code added by Monal Shah
    '    'MethodName:fnc_quesarray
    '    'Purpose:In this function no. Of Question is assigned to the array which have low medium and high question and also test typ
    '    '****************************************************************************************************************************************
    '    Private Function fnc_quesarray(ByVal noOfQues As Integer, ByVal noOfLques As Integer, ByVal noOfMques As Integer, ByVal noOfHques As Integer, ByVal testtypevalue As Integer) As Array
    '        Dim myCommand As SqlCommand                   'SqlCommand object
    '        Dim myDataReader As SqlDataReader             'SqlDataReader object
    '        Dim sqlstr As String                            'String type variable
    '        Dim objconn As New ConnectDb    'object of the ConnectClass class
    '        Dim quesarray(noOfQues) As Integer
    '        Dim quesarraylist As New ArrayList
    '        Dim intloopcnt As Integer = 0
    '        Dim strPathDb As String
    '        Try

    '            If objconn.connect(strPathDb) Then
    '                sqlstr = "Select Top " & noOfLques & " qnId from m_question"
    '                sqlstr = sqlstr & " where test_type ='" & testtypevalue & "'"
    '                sqlstr = sqlstr & " and qlevel = '0'"
    '                sqlstr = sqlstr & " ORDER BY NEWID() "
    '                myCommand = New SqlCommand(sqlstr, objconn.MyConnection)
    '                myDataReader = myCommand.ExecuteReader
    '                While myDataReader.Read()
    '                    quesarraylist.Add(myDataReader.Item(0))
    '                End While
    '                myCommand.Dispose()
    '                myDataReader.Close()
    '                If objconn IsNot Nothing Then
    '                    objconn.disconnect()
    '                End If

    '            End If
    '            If objconn.connect(strPathDb) Then
    '                sqlstr = "Select Top " & noOfMques & " qnId from m_question"
    '                sqlstr = sqlstr & " where test_type ='" & testtypevalue & "'"
    '                sqlstr = sqlstr & " and qlevel = '1'"
    '                sqlstr = sqlstr & " ORDER BY NEWID() "

    '                myCommand = New SqlCommand(sqlstr, objconn.MyConnection)
    '                myDataReader = myCommand.ExecuteReader
    '                While myDataReader.Read()
    '                    quesarraylist.Add(myDataReader.Item(0))
    '                End While
    '                myCommand.Dispose()
    '                myDataReader.Close()
    '                If objconn IsNot Nothing Then
    '                    objconn.disconnect()
    '                End If

    '            End If
    '            If objconn.connect(strPathDb) Then
    '                sqlstr = "Select Top " & noOfHques & " qnId from m_question"
    '                sqlstr = sqlstr & " where test_type ='" & testtypevalue & "'"
    '                sqlstr = sqlstr & " and qlevel = '2'"
    '                sqlstr = sqlstr & " ORDER BY NEWID() "
    '                myCommand = New SqlCommand(sqlstr, objconn.MyConnection)
    '                myDataReader = myCommand.ExecuteReader
    '                While myDataReader.Read()
    '                    quesarraylist.Add(myDataReader.Item(0))
    '                End While
    '                myCommand.Dispose()
    '                myDataReader.Close()

    '                If objconn IsNot Nothing Then
    '                    objconn.disconnect()
    '                End If
    '            End If
    '            quesarray = quesarraylist.ToArray(System.Type.GetType("System.Int32"))
    '            fnc_quesarray = quesarray

    '        Catch ex As Exception
    '            If log.IsDebugEnabled Then
    '                log.Debug("Error :" & ex.ToString())
    '            End If
    '            If objconn IsNot Nothing Then
    '                objconn.disconnect()
    '            End If
    '            Response.Redirect("error.aspx?err=" & ex.Message, False)

    '        Finally
    '            myCommand = Nothing
    '            myDataReader = Nothing
    '            sqlstr = Nothing
    '            If objconn IsNot Nothing Then
    '                objconn.disconnect()
    '            End If
    '            objconn = Nothing
    '            quesarraylist = Nothing
    '        End Try
    '    End Function
    '#End Region
#End Region
#Region "Page_Unload"
    '****************************************************************************************************************************************
    'Code added by Monal Shah
    'MethodName:Page_Unload
    'Purpose:Page is Unload at that time connection is disconnected
    '****************************************************************************************************************************************
    Private Sub Page_Unload(ByVal Sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load
        Dim objconn As New ConnectDb
        Try
            If objconn.connect() = True Then
                objconn.disconnect()
            End If
        Catch ex As Exception
            If log.IsDebugEnabled Then
                log.Debug("Error :" & ex.ToString())
            End If
            Response.Redirect("error.aspx?err=" & ex.Message, False)
            If objconn IsNot Nothing Then
                objconn.disconnect()
            End If
        End Try
        'objconn.disconnect()

    End Sub
#End Region

#Region "Send Mail"
    '****************************************************************************************************************************************
    'Code added by Monal Shah
    'MethodName:SendMail
    'Purpose:Send Mail to student wheather  student is succeed or not.
    '****************************************************************************************************************************************
    Function SendMail()
        Dim sqlstr As String
        Dim myDataReader As SqlDataReader
        Dim mailobj As New unirecruite.mailcom()
        Dim CONS As New unirecruite.Errconstants

        Dim myCommand As SqlCommand
        Dim mail As New System.Web.Mail.MailMessage
        Dim strSubOnlineResult As String
        Dim strSuccessMail As String
        Dim strFailureMail As String
        Dim testid As String
        Dim BodyMsg As String
        Dim objConn As New ConnectDb

        Try
            strSubOnlineResult = ConfigurationManager.AppSettings("SubOnlineResult")
            strSuccessMail = ConfigurationManager.AppSettings("successmail")
            strFailureMail = ConfigurationManager.AppSettings("failuremail")
            testid = Session.Item("TestType")

            If "Pass".Equals(result) Then
                mailobj.MailForExam(Session.Item("userid"), strSubOnlineResult, strSuccessMail, testid)
            ElseIf "Reject".Equals(result) Then
                mailobj.MailForExam(Session.Item("userid"), strSubOnlineResult, strFailureMail, testid)
            End If

            If (objConn.connect()) Then
                sqlstr = "select name from m_user_info where userid=" & Session.Item("userid")
                myCommand = New SqlCommand(sqlstr, objConn.MyConnection)
                myDataReader = myCommand.ExecuteReader
            End If

            myDataReader.Read()

            If myDataReader.HasRows Then
                BodyMsg = "Result of " & myDataReader.Item(0) & " who appeared for the test of type """ & testid & """ is "
                If result = "Pass" Then
                    BodyMsg &= "Passed. The score is " + strCorrectAns + "/" + strTotQues
                Else
                    BodyMsg &= "Rejected."
                End If

                SmtpMail.SmtpServer = ConfigurationManager.AppSettings("SmtpServer")
                '********** Added this code for Server Authentication ***************/
                mail.Fields("http://schemas.microsoft.com/cdo/configuration/smtsperver") = "uks.mail"
                mail.Fields("http://schemas.microsoft.com/cdo/configuration/smtpserverport") = 25
                mail.Fields("http://schemas.microsoft.com/cdo/configuration/sendusing") = 2
                SmtpMail.Send(ConfigurationManager.AppSettings("MailFrom"), ConfigurationManager.AppSettings("MailFrom"), "Result of " & myDataReader.Item(0) & "( " & IIf(result = "Pass", " Passed ", " Failed ") & testid & " )", BodyMsg)
            End If
        Catch ex As Exception
            If log.IsDebugEnabled Then
                log.Debug("Error :" & ex.ToString())
            End If
            Response.Redirect("error.aspx?err=" & ex.Message, False)

        Finally
            If objConn IsNot Nothing Then
                objConn.disconnect()
            End If
            myCommand = Nothing
            objConn = Nothing
            myDataReader = Nothing
        End Try
        'objconn.disconnect()

    End Function
#End Region

#Region "UpdateUserstatusAfterExam"
    '****************************************************************************************************************************************
    'Code added by Monal Shah
    'MethodName:UpdateUserstatusAfterExam
    'Purpose: When End Exam Click this function is called and user appered flag becomes '2' and after that user can't give exam again
    '****************************************************************************************************************************************
    Function UpdateUserstatusAfterExam()
        Dim myCommand As SqlCommand
        Dim objconn As New ConnectDb
        Dim strSqlBuilder As New StringBuilder("")
        Dim strUserID As String = Session.Item("userid")
        Dim strTestType As String = Session.Item("TestType")
        Dim da As SqlDataAdapter
        Dim ds As DataSet
        Dim ht As Hashtable
        Try
            If objconn.connect() = True Then

                strSqlBuilder.Append("Update t_candidate_status set appearedflag = '2',written_test_appear_date = '" & Now & "'")
                strSqlBuilder.Append(" where userid = '" & strUserID & "'")
                strSqlBuilder.Append(" and Course_ID = '" & strTestType & "';")
                ViewState.Add("strqestionSql", ViewState("strqestionSql") + strSqlBuilder.ToString())
                'close by dipendra on 8/8/17
                'myCommand = New SqlCommand(strSqlBuilder.ToString(), objconn.MyConnection)
                'myCommand.ExecuteNonQuery()
                ''Dim ht As Hashtable = GetCandidateResult(strUserID, strTestType)
                'ht = GetCandidateResult(strUserID, strTestType)
                ''*********** End ************
                'If Not objconn.MyConnection Is Nothing Then
                '    If objconn.MyConnection.State = ConnectionState.Open Then
                '        objconn.disconnect()
                '    End If
                'End If
                'myCommand.Dispose()
                '------------
            End If
        Catch ex As Exception
            If Not objconn.MyConnection Is Nothing Then
                If objconn.MyConnection.State = ConnectionState.Open Then
                    objconn.disconnect()
                End If
            End If
            If log.IsDebugEnabled Then
                log.Debug("Error :" & ex.ToString())
            End If
            Response.Redirect("error.aspx?err=" & ex.Message, False)

        Finally
            If Not objconn.MyConnection Is Nothing Then
                If objconn.MyConnection.State = ConnectionState.Open Then
                    objconn.disconnect()
                End If
            End If
            strSqlBuilder = Nothing
            myCommand = Nothing
            da = Nothing
            ds = Nothing
            objconn = Nothing
            '  objconn.disconnect()
        End Try
    End Function
#End Region
    '****************************************************************************************************************************************
    'Code added by Monal Shah
    'MethodName:imgBtnFirst_Click
    'Purpose: student can go First Page
    '****************************************************************************************************************************************
    Protected Sub imgBtnFirst_Click(ByVal sender As System.Object, ByVal e As System.Web.UI.ImageClickEventArgs) Handles imgBtnFirst.Click
        FormSubmitFirst()
    End Sub
    '****************************************************************************************************************************************
    'Code added by Monal Shah
    'MethodName:imgBtnPrevious_Click
    'Purpose: student can go Previous Page till First Page come
    '****************************************************************************************************************************************
    Protected Sub imgBtnPrevious_Click(ByVal sender As System.Object, ByVal e As System.Web.UI.ImageClickEventArgs) Handles imgBtnPrevious.Click
        FormSubmitPrevious()
    End Sub
    '****************************************************************************************************************************************
    'Code added by Monal Shah
    'MethodName:imgBtnNext_Clickv
    'Purpose: student can go Next Page till Last Page Come
    '****************************************************************************************************************************************
    Protected Sub imgBtnNext_Click(ByVal sender As System.Object, ByVal e As System.Web.UI.ImageClickEventArgs) Handles imgBtnNext.Click
        FormSubmitNext()
        'imgBtnEndExam.ImageUrl = "images\imgBtnStartExam.JPG"
    End Sub
    '****************************************************************************************************************************************
    'Code added by Monal Shah
    'MethodName:imgBtnLast_Click
    'Purpose: student can go Last Page
    '****************************************************************************************************************************************
    Protected Sub imgBtnLast_Click(ByVal sender As System.Object, ByVal e As System.Web.UI.ImageClickEventArgs) Handles imgBtnLast.Click
        FormSubmitLast()
    End Sub
    '****************************************************************************************************************************************
    'Code added by Monal Shah
    'MethodName:imgBtnUnAnswer_Click
    'Purpose:In UnAnswer Check sub when user click on unanswer button at that time those question display on page which have been not answered by                  student.and this is happend till all answer is not given by student
    '****************************************************************************************************************************************
    Protected Sub imgBtnUnAnswer_Click(ByVal sender As System.Object, ByVal e As System.Web.UI.ImageClickEventArgs) Handles imgBtnUnAnswer.Click
        Try
            Dim sel As Integer = Convert.ToInt32(ViewState("click"))
            Dim SList As SortedList
            If rdbCheckedId.Value <> Nothing Or rdbCheckedId.Value <> "" Then
                'Dim SList As SortedList = DirectCast(ViewState("sl"), SortedList)
                SList = DirectCast(ViewState("sl"), SortedList)
                SList(Convert.ToInt32(sel)) = True
                ViewState("sl") = SList
                UpdateLabel()
            ElseIf rdbCheckedId.Value = Nothing Or rdbCheckedId.Value = "" Then
                'Dim SList As SortedList = DirectCast(ViewState("sl"), SortedList)
                SList = DirectCast(ViewState("sl"), SortedList)
                SList(Convert.ToInt32(sel)) = CheckDropDownValue()
                ViewState("sl") = SList
                UpdateLabel()
            End If
            ViewState("click") = sel
            Session.Add("TestXX", currTime.Value)
            InsertData()
            UnAnswerCheck()
        Catch ex As Exception
            If log.IsDebugEnabled Then
                log.Debug("Error :" & ex.ToString())
            End If
            Response.Redirect("error.aspx?err=" & ex.Message, False)


        End Try

    End Sub
    '****************************************************************************************************************************************
    'Code added by Monal Shah
    'MethodName:UnAnswerCheck
    'Purpose:In UnAnswer Check sub when user click on unanswer button at that time those question display on page which have been not answered by                  student.and this is happend till all answer is not given by student
    '****************************************************************************************************************************************
    Public Sub UnAnswerCheck()
        Try
            Dim sel As Integer = Convert.ToInt32((Session.Item("TotalQueCnt")))
            If (sel = ViewState("next")) Then
                imgBtnNext.Enabled = False
                'imgBtnLast.Enabled = True
                imgBtnLast.Enabled = False
            Else
                imgBtnNext.Enabled = True
                imgBtnLast.Enabled = True
            End If

            If (ViewState("next") = "1") Then
                imgBtnPrevious.Enabled = False
                imgBtnFirst.Enabled = False
                'imgBtnFirst.Enabled = True
            Else
                imgBtnFirst.Enabled = True
                imgBtnPrevious.Enabled = True
            End If
            'copy sl
            Dim sl As SortedList
            Dim SList As SortedList
            sl = DirectCast(ViewState("sl"), SortedList)
            Dim newsl As New SortedList()
            Dim cnt As Integer = 1
            For s As Integer = 1 To sl.Count - 1
                If sl(s) = False Then
                    newsl.Add(cnt, s)
                    cnt = cnt + 1
                End If
            Next
            'chexk length
            Dim val As Integer

            val = ViewState("next")

            For i As Integer = 1 To newsl.Count
                If newsl(i) = val Then
                    Exit For
                End If
                If i = newsl.Count Then
                    ViewState("next") = 0
                End If
            Next

            If (newsl.Count > 0) Then
                'loop
                For ns As Integer = 1 To newsl.Count
                    If ViewState("next") = 0 Then
                        If newsl.Count > 1 Then
                            ViewState("next") = newsl(ns + 1)
                            If rdbCheckedId.Value <> Nothing Or rdbCheckedId.Value <> "" Then
                                'Dim SList As SortedList = DirectCast(ViewState("sl"), SortedList)
                                SList = DirectCast(ViewState("sl"), SortedList)
                                SList(Convert.ToInt32(ViewState("click"))) = True
                                ViewState("sl") = SList
                            End If
                        Else
                            ViewState("next") = 0
                            If rdbCheckedId.Value <> Nothing Or rdbCheckedId.Value <> "" Then
                                'Dim SList As SortedList = DirectCast(ViewState("sl"), SortedList)
                                SList = DirectCast(ViewState("sl"), SortedList)
                                SList(Convert.ToInt32(ViewState("click"))) = True
                                ViewState("sl") = SList
                            End If
                        End If
                        CreateControl(Session.Item("TotalQueCnt"))
                        generateQuePanel(newsl(ns))
                        ViewState("click") = newsl(ns)
                        Exit For

                        'newsorted list's value is same as ViewState("next")
                    ElseIf ViewState("next") = newsl(ns) Then
                        CreateControl(Session.Item("TotalQueCnt"))
                        generateQuePanel(ViewState("next"))
                        ViewState("click") = ViewState("next")
                        If newsl.Count > 1 Then
                            ViewState("next") = newsl(ns + 1)
                            If rdbCheckedId.Value <> Nothing Or rdbCheckedId.Value <> "" Then
                                'Dim SList As SortedList = DirectCast(ViewState("sl"), SortedList)
                                SList = DirectCast(ViewState("sl"), SortedList)
                                SList(Convert.ToInt32(ViewState("click"))) = True
                                ViewState("sl") = SList
                            End If
                        Else
                            ViewState("next") = 0
                            If rdbCheckedId.Value <> Nothing Or rdbCheckedId.Value <> "" Then
                                'Dim SList As SortedList = DirectCast(ViewState("sl"), SortedList)
                                SList = DirectCast(ViewState("sl"), SortedList)
                                SList(Convert.ToInt32(ViewState("click"))) = True
                                ViewState("sl") = SList
                            End If
                        End If
                        Exit For

                    ElseIf ns = newsl.Count Then
                        CreateControl(Session.Item("TotalQueCnt"))
                        generateQuePanel(newsl(1))
                        If (newsl.Count > 1) Then
                            ViewState("next") = newsl(2)
                            If rdbCheckedId.Value <> Nothing Or rdbCheckedId.Value <> "" Then
                                'Dim SList As SortedList = DirectCast(ViewState("sl"), SortedList)
                                SList = DirectCast(ViewState("sl"), SortedList)
                                SList(Convert.ToInt32(ViewState("click"))) = True
                                ViewState("sl") = SList
                            End If
                        End If

                        ViewState("click") = newsl(1)
                        If rdbCheckedId.Value <> Nothing Or rdbCheckedId.Value <> "" Then
                            'Dim SList As SortedList = DirectCast(ViewState("sl"), SortedList)
                            SList = DirectCast(ViewState("sl"), SortedList)
                            SList(Convert.ToInt32(ViewState("click"))) = True
                            ViewState("sl") = SList
                        End If
                    End If
                Next
            ElseIf (newsl.Count = 0) Then
                'When all answer is given then this message is display
                'CreateControl(Session.Item("TotalQueCnt")) 
                Dim realMsg = "You Have Appeared All Questions."
                Dim message As String = "<script language=""javascript""  type=""text/javascript"">alert('" & realMsg & "');</script>"
                If Not ClientScript.IsStartupScriptRegistered("realMsg") Then
                    ClientScript.RegisterStartupScript(Me.[GetType](), "realMsg", message)
                End If

                If ViewState("next") = 0 Then
                    If rdbCheckedId.Value <> Nothing Or rdbCheckedId.Value <> "" Then
                        'Dim SList As SortedList = DirectCast(ViewState("sl"), SortedList)
                        SList = DirectCast(ViewState("sl"), SortedList)
                        SList(Convert.ToInt32(ViewState("click"))) = True
                        ViewState("sl") = SList
                    End If
                End If
                'ViewState("click") = ViewState("click")
                ViewState("click") = sel
                generateQuePanel(ViewState("click"))
            End If
        Catch ex As Exception
            If log.IsDebugEnabled Then
                log.Debug("Error :" & ex.ToString())
            End If
            Response.Redirect("error.aspx?err=" & ex.Message, False)
        End Try

    End Sub
    '****************************************************************************************************************************************
    'Code added by Monal Shah
    'MethodName:imgBtnEndExam_Click
    'Purpose:Student Click On this Button end exam will be finished
    '****************************************************************************************************************************************
    Protected Sub imgBtnEndExam_Click(ByVal sender As System.Object, ByVal e As System.Web.UI.ImageClickEventArgs) Handles imgBtnEndExam.Click

        Dim sel As Integer = Convert.ToInt32((Session.Item("TotalQueCnt")))
        If (sel = ViewState("next")) Then
            imgBtnNext.Enabled = False
            imgBtnLast.Enabled = False

        Else
            imgBtnNext.Enabled = True
            imgBtnLast.Enabled = True
        End If

        If (ViewState("next") = "1") Then
            imgBtnPrevious.Enabled = False
            imgBtnFirst.Enabled = False
        Else
            imgBtnFirst.Enabled = True
            imgBtnPrevious.Enabled = True
        End If
        FormSubmitFinish()
        'Monal shah 2011/7/8 Update Student Time
        UpdatetimeForStudent()
        'End
    End Sub
#Region "Submit form with First button"
    '****************************************************************************************************************************************
    'Code added by Monal Shah
    'MethodName:FormSubmitFirst
    'Purpose: student can go First Page
    '****************************************************************************************************************************************
    Function FormSubmitFirst()
        Try
            Dim realMsg = "You Are On First Question."
            Dim message As String = "<script language=""javascript""  type=""text/javascript"">alert('" & realMsg & "');</script>"
            If Not ClientScript.IsStartupScriptRegistered("realMsg") Then
                ClientScript.RegisterStartupScript(Me.[GetType](), "realMsg", message)
            End If
            Dim SList As SortedList
            Dim sel As Integer = Convert.ToInt32(ViewState("click"))
            If rdbCheckedId.Value <> Nothing Or rdbCheckedId.Value <> "" Then
                SList = DirectCast(ViewState("sl"), SortedList)
                SList(Convert.ToInt32((Session.Item("CurrentPage") - 1))) = True
                ViewState("sl") = SList
                UpdateLabel()
            ElseIf rdbCheckedId.Value = Nothing Or rdbCheckedId.Value = "" Then
                SList = DirectCast(ViewState("sl"), SortedList)
                SList(Convert.ToInt32(sel)) = CheckDropDownValue()
                ViewState("sl") = SList
                UpdateLabel()
            End If
            If (((Session.Item("CurrentPage") - 1) <> 1)) Then
                ViewState("click") = 1
                Session.Add("TestXX", currTime.Value)
            End If
            InsertData()
            CreateControl(Session.Item("TotalQueCnt"))
            generateQuePanel(1)
            '********************************************************************************************************************
            'Dim realMsg = "You Are On First Question."
            'Dim message As String = "<script language=""javascript""  type=""text/javascript"">alert('" & realMsg & "');</script>"
            'If Not ClientScript.IsStartupScriptRegistered("realMsg") Then
            '    ClientScript.RegisterStartupScript(Me.[GetType](), "realMsg", message)
            'End If
            'Dim SList As SortedList
            'Dim sel As Integer = Convert.ToInt32(ViewState("click"))
            'If (((Session.Item("CurrentPage") - 1) <> 1)) Then
            '    imgBtnNext.Enabled = True
            '    imgBtnLast.Enabled = True
            '    'imgBtnPrevious.Enabled = False
            '    imgBtnPrevious.Enabled = True
            '    'imgBtnFirst.Enabled = False
            '    imgBtnFirst.Enabled = True
            '    If rdbCheckedId.Value <> Nothing Or rdbCheckedId.Value <> "" Then
            '        'Dim SList As SortedList = DirectCast(ViewState("sl"), SortedList)
            '        SList = DirectCast(ViewState("sl"), SortedList)
            '        SList(Convert.ToInt32((Session.Item("CurrentPage") - 1))) = True
            '        ViewState("sl") = SList
            '        UpdateLabel()
            '    ElseIf rdbCheckedId.Value = Nothing Or rdbCheckedId.Value = "" Then
            '        'Dim SList As SortedList = DirectCast(ViewState("sl"), SortedList)
            '        SList = DirectCast(ViewState("sl"), SortedList)
            '        SList(Convert.ToInt32(sel)) = False
            '        ViewState("sl") = SList
            '        UpdateLabel()
            '    End If
            '    'ViewState("click") = Convert.ToInt32(Session.Item("CurrentPage") - 1)
            '    InsertData()
            '    ViewState("click") = 1
            '    CreateControl(Session.Item("TotalQueCnt"))
            '    generateQuePanel(1)
            '    Session.Add("TestXX", currTime.Value)
            '    ' InsertData()
            'Else
            '    If rdbCheckedId.Value <> Nothing Or rdbCheckedId.Value <> "" Then
            '        'Dim SList As SortedList = DirectCast(ViewState("sl"), SortedList)
            '        SList = DirectCast(ViewState("sl"), SortedList)
            '        SList(Convert.ToInt32((Session.Item("CurrentPage") - 1))) = True
            '        ViewState("sl") = SList
            '        UpdateLabel()
            '    ElseIf rdbCheckedId.Value = Nothing Or rdbCheckedId.Value = "" Then
            '        'Dim SList As SortedList = DirectCast(ViewState("sl"), SortedList)
            '        SList = DirectCast(ViewState("sl"), SortedList)
            '        SList(Convert.ToInt32(sel)) = False
            '        ViewState("sl") = SList
            '        UpdateLabel()
            '    End If
            '    'ViewState("click") = Convert.ToInt32(Session.Item("CurrentPage") - 1)
            '    InsertData()
            '    'ViewState("click") = 1
            '    CreateControl(Session.Item("TotalQueCnt"))
            '    'Dim realMsg = "You Are On First Question."
            '    'Dim message As String = "<script language=""javascript""  type=""text/javascript"">alert('" & realMsg & "');</script>"
            '    'If Not ClientScript.IsStartupScriptRegistered("realMsg") Then
            '    '    ClientScript.RegisterStartupScript(Me.[GetType](), "realMsg", message)
            '    'End If
            '    generateQuePanel(1)
            '    'imgBtnFirst.Enabled = False
            '    imgBtnFirst.Enabled = True
            '    'imgBtnPrevious.Enabled = False
            '    imgBtnPrevious.Enabled = True
            '    imgBtnNext.Enabled = True
            '    imgBtnLast.Enabled = True
            'End If
            '********************************************************************************************************************
        Catch ex As Exception
            If log.IsDebugEnabled Then
                log.Debug("Error :" & ex.ToString())
            End If
            Response.Redirect("error.aspx?err=" & ex.Message, False)

        End Try
    End Function
#End Region
#Region "Submit form with last button"
    '****************************************************************************************************************************************
    'Code added by Monal Shah
    'MethodName:FormSubmitLast
    'Purpose: student can go Last Page
    '****************************************************************************************************************************************
    Function FormSubmitLast()
        Try
            Dim realMsg = "You Are On Last Question."
            Dim message As String = "<script language=""javascript""  type=""text/javascript"">alert('" & realMsg & "');</script>"
            If Not ClientScript.IsStartupScriptRegistered("realMsg") Then
                ClientScript.RegisterStartupScript(Me.[GetType](), "realMsg", message)
            End If
            Dim SList As SortedList
            Dim sel As Integer = Convert.ToInt32(ViewState("click"))
            If rdbCheckedId.Value <> Nothing Or rdbCheckedId.Value <> "" Then
                SList = DirectCast(ViewState("sl"), SortedList)
                SList(Convert.ToInt32(sel)) = True
                ViewState("sl") = SList
                UpdateLabel()
            ElseIf rdbCheckedId.Value = Nothing Or rdbCheckedId.Value = "" Then
                SList = DirectCast(ViewState("sl"), SortedList)
                SList(Convert.ToInt32(sel)) = CheckDropDownValue()
                ViewState("sl") = SList
                UpdateLabel()
            End If
            'If (Session.Item("TotalQueCnt") <> (Session.Item("CurrentPage") - 1)) Then
            InsertData()
            ViewState("click") = Convert.ToInt32(Session.Item("TotalQueCnt"))
            CreateControl(Session.Item("TotalQueCnt"))
            generateQuePanel(Session.Item("TotalQueCnt"))
            Session.Add("TestXX", currTime.Value)
            'Else
            'InsertData()
            'ViewState("click") = Convert.ToInt32(Session.Item("TotalQueCnt"))
            'CreateControl(Session.Item("TotalQueCnt"))
            'generateQuePanel(Session.Item("TotalQueCnt"))
            'End If
            '****************************************************************************************************************************************
            'Dim realMsg = "You Are On Last Question."
            'Dim message As String = "<script language=""javascript""  type=""text/javascript"">alert('" & realMsg & "');</script>"
            'If Not ClientScript.IsStartupScriptRegistered("realMsg") Then
            '    ClientScript.RegisterStartupScript(Me.[GetType](), "realMsg", message)
            'End If
            'Dim SList As SortedList
            'Dim sel As Integer = Convert.ToInt32(ViewState("click"))
            ''Dim sel As Integer = Convert.ToInt32((Session.Item("CurrentPage") - 1))
            'If (Session.Item("TotalQueCnt") <> (Session.Item("CurrentPage") - 1)) Then
            '    imgBtnFirst.Enabled = True
            '    imgBtnPrevious.Enabled = True
            '    'imgBtnNext.Enabled = False
            '    imgBtnNext.Enabled = True
            '    imgBtnLast.Enabled = True
            '    'imgBtnLast.Enabled = False
            '    If rdbCheckedId.Value <> Nothing Or rdbCheckedId.Value <> "" Then
            '        'Dim SList As SortedList = DirectCast(ViewState("sl"), SortedList)
            '        SList = DirectCast(ViewState("sl"), SortedList)
            '        SList(Convert.ToInt32(sel)) = True
            '        ViewState("sl") = SList
            '        UpdateLabel()
            '    ElseIf rdbCheckedId.Value = Nothing Or rdbCheckedId.Value = "" Then
            '        'Dim SList As SortedList = DirectCast(ViewState("sl"), SortedList)
            '        SList = DirectCast(ViewState("sl"), SortedList)
            '        SList(Convert.ToInt32(sel)) = False
            '        ViewState("sl") = SList
            '        UpdateLabel()
            '    End If
            '    InsertData()
            '    ViewState("click") = Convert.ToInt32(Session.Item("TotalQueCnt"))
            '    CreateControl(Session.Item("TotalQueCnt"))
            '    generateQuePanel(Session.Item("TotalQueCnt"))
            '    Session.Add("TestXX", currTime.Value)
            '    'imgBtnLast.Enabled = False
            '    imgBtnLast.Enabled = True
            'Else
            '    If rdbCheckedId.Value <> Nothing Or rdbCheckedId.Value <> "" Then
            '        'Dim SList As SortedList = DirectCast(ViewState("sl"), SortedList)
            '        SList = DirectCast(ViewState("sl"), SortedList)
            '        SList(Convert.ToInt32(sel)) = True
            '        ViewState("sl") = SList
            '        UpdateLabel()
            '    ElseIf rdbCheckedId.Value = Nothing Or rdbCheckedId.Value = "" Then
            '        'Dim SList As SortedList = DirectCast(ViewState("sl"), SortedList)
            '        SList = DirectCast(ViewState("sl"), SortedList)
            '        SList(Convert.ToInt32(sel)) = False
            '        ViewState("sl") = SList
            '        UpdateLabel()
            '    End If
            '    InsertData()
            '    ViewState("click") = Convert.ToInt32(Session.Item("TotalQueCnt"))
            '    CreateControl(Session.Item("TotalQueCnt"))

            '    generateQuePanel(Session.Item("TotalQueCnt"))
            '    imgBtnLast.Enabled = True
            '    'Dim realMsg = "You Are On Last Question."
            '    'Dim message As String = "<script language=""javascript""  type=""text/javascript"">alert('" & realMsg & "');</script>"
            '    'If Not ClientScript.IsStartupScriptRegistered("realMsg") Then
            '    '    ClientScript.RegisterStartupScript(Me.[GetType](), "realMsg", message)
            '    'End If
            '    imgBtnFirst.Enabled = True
            '    imgBtnPrevious.Enabled = True
            '    'imgBtnNext.Enabled = False
            '    imgBtnNext.Enabled = True
            '    'imgBtnLast.Enabled = False

            'End If
            '****************************************************************************************************************************************
        Catch ex As Exception
            If log.IsDebugEnabled Then
                log.Debug("Error :" & ex.ToString())
            End If
            Response.Redirect("error.aspx?err=" & ex.Message, False)

        End Try
    End Function
#End Region
#Region "Submit form with next button"
    '****************************************************************************************************************************************
    'Code added by Monal Shah
    'MethodName:FormSubmitNext
    'Purpose: student can go Next until student reaches Last Page
    '****************************************************************************************************************************************
    Function FormSubmitNext()
        Try
            Dim checkpreviousflag As Boolean
            If Session.Item("CheckPreviousFlag") IsNot Nothing Then
                checkpreviousflag = Session.Item("CheckPreviousFlag")
            Else
                checkpreviousflag = CheckForPreviousFlag()
            End If
            Dim checkreanswerflag As Boolean
            If Session.Item("CheckReanswerFlag") IsNot Nothing Then
                checkreanswerflag = Session.Item("CheckReanswerFlag")
            Else
                checkreanswerflag = CheckForReanswerFlag()
            End If
            If checkpreviousflag = False And checkreanswerflag = False Then
                imgBtnLast.Enabled = False
            Else
                imgBtnLast.Enabled = True
            End If
            Dim SList As SortedList
            Dim sel As Integer = Convert.ToInt32(ViewState("click"))

            If rdbCheckedId.Value <> Nothing Or rdbCheckedId.Value <> "" Then
                SList = DirectCast(ViewState("sl"), SortedList)
                SList(Convert.ToInt32(sel)) = True
                ViewState("sl") = SList
                UpdateLabel()
                ddCheckQuestionId.Value = Nothing
            ElseIf rdbCheckedId.Value = Nothing Or rdbCheckedId.Value = "" Then
                SList = DirectCast(ViewState("sl"), SortedList)
                'CheckDropDownValue()
                'SList(Convert.ToInt32(sel)) = False
                SList(Convert.ToInt32(sel)) = CheckDropDownValue()
                ViewState("sl") = SList
                UpdateLabel()

            End If
            If (Session.Item("TotalQueCnt") <> (Session.Item("CurrentPage") - 1)) Then
                ViewState("click") = Convert.ToInt32(Session.Item("CurrentPage"))
                InsertData()
                CreateControl(Session.Item("TotalQueCnt"))
                generateQuePanel(Session.Item("CurrentPage"))
                Session.Add("TestXX", currTime.Value)

                If (Session.Item("TotalQueCnt") = (Session.Item("CurrentPage")) - 1) Then
                    Dim realMsg = "You Are On Last Question."
                    Dim message As String = "<script language=""javascript""  type=""text/javascript"">alert('" & realMsg & "');</script>"
                    If Not ClientScript.IsStartupScriptRegistered("realMsg") Then
                        ClientScript.RegisterStartupScript(Me.[GetType](), "realMsg", message)
                    End If
                    'imgBtnNext.Enabled = True
                Else
                    'imgBtnNext.Enabled = True
                    'imgBtnLast.Enabled = True
                End If

            Else
                Dim realMsg = "You Are On Last Question."
                Dim message As String = "<script language=""javascript""  type=""text/javascript"">alert('" & realMsg & "');</script>"
                If Not ClientScript.IsStartupScriptRegistered("realMsg") Then
                    ClientScript.RegisterStartupScript(Me.[GetType](), "realMsg", message)
                End If
                InsertData()
                generateQuePanel(Session.Item("CurrentPage") - 1)
                'If Session.Item("CheckPreviousFlag") = False Then
                '    imgBtnFirst.Enabled = False
                '    ' imgBtnFirst.Enabled = True
                '    imgBtnPrevious.Enabled = False
                '    imgBtnLast.Enabled = False
                '    'imgBtnLast.Enabled = True
                'Else
                '    imgBtnFirst.Enabled = True
                '    imgBtnPrevious.Enabled = True
                '    'imgBtnNext.Enabled = False
                '    imgBtnNext.Enabled = True
                '    'imgBtnLast.Enabled = False
                '    'imgBtnLast.Enabled = True
                'End If

            End If

            If (Session.Item("TotalQueCnt") = (Session.Item("next"))) Then
                imgBtnNext.Enabled = True
                imgBtnLast.Enabled = True
            End If
            '****************************************************************************************************************************************
            'Dim checkpreviousflag As Boolean
            'If Session.Item("CheckPreviousFlag") IsNot Nothing Then
            '    checkpreviousflag = Session.Item("CheckPreviousFlag")
            'Else
            '    checkpreviousflag = CheckForPreviousFlag()
            'End If
            'Dim checkreanswerflag As Boolean
            'If Session.Item("CheckReanswerFlag") IsNot Nothing Then
            '    checkreanswerflag = Session.Item("CheckReanswerFlag")
            'Else
            '    checkreanswerflag = CheckForReanswerFlag()
            'End If

            'If checkpreviousflag = False And checkreanswerflag = False Then
            '    imgBtnLast.Enabled = False
            'Else
            '    imgBtnLast.Enabled = True
            'End If
            'Dim SList As SortedList
            'Dim sel As Integer = Convert.ToInt32(ViewState("click"))
            'If (Session.Item("TotalQueCnt") <> (Session.Item("CurrentPage") - 1)) Then
            '    imgBtnFirst.Enabled = True
            '    imgBtnPrevious.Enabled = True
            '    If rdbCheckedId.Value <> Nothing Or rdbCheckedId.Value <> "" Then
            '        'Dim SList As SortedList = DirectCast(ViewState("sl"), SortedList)
            '        SList = DirectCast(ViewState("sl"), SortedList)
            '        SList(Convert.ToInt32(sel)) = True
            '        ViewState("sl") = SList
            '        UpdateLabel()
            '    ElseIf rdbCheckedId.Value = Nothing Or rdbCheckedId.Value = "" Then
            '        ' Dim SList As SortedList = DirectCast(ViewState("sl"), SortedList)
            '        SList = DirectCast(ViewState("sl"), SortedList)
            '        SList(Convert.ToInt32(sel)) = False
            '        ViewState("sl") = SList
            '        UpdateLabel()
            '    End If
            '    ViewState("click") = Convert.ToInt32(Session.Item("CurrentPage"))
            '    InsertData()
            '    CreateControl(Session.Item("TotalQueCnt"))
            '    generateQuePanel(Session.Item("CurrentPage"))
            '    Session.Add("TestXX", currTime.Value)

            '    If (Session.Item("TotalQueCnt") = (Session.Item("CurrentPage")) - 1) Then
            '        Dim realMsg = "You Are On Last Question."
            '        Dim message As String = "<script language=""javascript""  type=""text/javascript"">alert('" & realMsg & "');</script>"
            '        If Not ClientScript.IsStartupScriptRegistered("realMsg") Then
            '            ClientScript.RegisterStartupScript(Me.[GetType](), "realMsg", message)
            '        End If
            '        'imgBtnNext.Enabled = False
            '        imgBtnNext.Enabled = True
            '        'imgBtnLast.Enabled = False
            '        'imgBtnLast.Enabled = True
            '    Else
            '        imgBtnNext.Enabled = True
            '        'imgBtnLast.Enabled = True
            '    End If

            'Else

            '    If rdbCheckedId.Value <> Nothing Or rdbCheckedId.Value <> "" Then
            '        'Dim SList As SortedList = DirectCast(ViewState("sl"), SortedList)
            '        SList = DirectCast(ViewState("sl"), SortedList)
            '        SList(Convert.ToInt32(sel)) = True
            '        ViewState("sl") = SList
            '        UpdateLabel()
            '    ElseIf rdbCheckedId.Value = Nothing Or rdbCheckedId.Value = "" Then
            '        'Dim SList As SortedList = DirectCast(ViewState("sl"), SortedList)
            '        SList = DirectCast(ViewState("sl"), SortedList)
            '        SList(Convert.ToInt32(sel)) = False
            '        ViewState("sl") = SList
            '        UpdateLabel()
            '    End If
            '    Dim realMsg = "You Are On Last Question."
            '    Dim message As String = "<script language=""javascript""  type=""text/javascript"">alert('" & realMsg & "');</script>"
            '    If Not ClientScript.IsStartupScriptRegistered("realMsg") Then
            '        ClientScript.RegisterStartupScript(Me.[GetType](), "realMsg", message)
            '    End If
            '    InsertData()
            '    generateQuePanel(Session.Item("CurrentPage") - 1)
            '    If Session.Item("CheckPreviousFlag") = False Then
            '        imgBtnFirst.Enabled = False
            '        ' imgBtnFirst.Enabled = True
            '        imgBtnPrevious.Enabled = False
            '        imgBtnLast.Enabled = False
            '        'imgBtnLast.Enabled = True
            '    Else
            '        imgBtnFirst.Enabled = True
            '        imgBtnPrevious.Enabled = True
            '        'imgBtnNext.Enabled = False
            '        imgBtnNext.Enabled = True
            '        'imgBtnLast.Enabled = False
            '        'imgBtnLast.Enabled = True
            '    End If

            'End If

            'If (Session.Item("TotalQueCnt") = (Session.Item("next"))) Then
            '    'Dim realMsg = "You Are On Last Question."
            '    'Dim message As String = "<script language=""javascript""  type=""text/javascript"">alert('" & realMsg & "');</script>"
            '    'If Not ClientScript.IsStartupScriptRegistered("realMsg") Then
            '    '    ClientScript.RegisterStartupScript(Me.[GetType](), "realMsg", message)
            '    'End If
            '    'imgBtnNext.Enabled = False
            '    imgBtnNext.Enabled = True
            '    'imgBtnLast.Enabled = False
            '    imgBtnLast.Enabled = True
            'End If
            '****************************************************************************************************************************************
        Catch ex As Exception
            If log.IsDebugEnabled Then
                log.Debug("Error :" & ex.ToString())
            End If
            Response.Redirect("error.aspx?err=" & ex.Message, False)

        End Try
    End Function
#End Region
#Region "Submit form with Previous button"
    '****************************************************************************************************************************************
    'Code added by Monal Shah
    'MethodName:FormSubmitPrevious
    'Purpose: student can go previous until student reaches First Page
    '****************************************************************************************************************************************
    Function FormSubmitPrevious()
        Try
            Dim SList As SortedList
            Dim sel As Integer = Convert.ToInt32(ViewState("click"))

            If rdbCheckedId.Value <> Nothing Or rdbCheckedId.Value <> "" Then

                SList = DirectCast(ViewState("sl"), SortedList)
                SList(Convert.ToInt32(sel)) = True
                ViewState("sl") = SList
                UpdateLabel()
            ElseIf rdbCheckedId.Value = Nothing Or rdbCheckedId.Value = "" Then
                SList = DirectCast(ViewState("sl"), SortedList)

                SList(Convert.ToInt32(sel)) = CheckDropDownValue()
                'SList(Convert.ToInt32(sel)) = False
                ViewState("sl") = SList
                UpdateLabel()
            End If
            If ((Session.Item("CurrentPage") - 1) <> "1") Then
                ViewState("click") = sel - 1
                InsertData()
                'CreateControl(Session.Item("TotalQueCnt"))
                generateQuePanel(Session.Item("CurrentPage") - 2)
                Session.Add("TestXX", currTime.Value)
            Else
                InsertData()
                generateQuePanel(Session.Item("CurrentPage") - 1)
            End If

            If (ViewState("click") = "1") Then
                Dim realMsg = "You Are On First Question."
                Dim message As String = "<script language=""javascript""  type=""text/javascript"">alert('" & realMsg & "');</script>"
                If Not ClientScript.IsStartupScriptRegistered("realMsg") Then
                    ClientScript.RegisterStartupScript(Me.[GetType](), "realMsg", message)
                End If
            End If
            '****************************************************************************************************************************************
            'Dim SList As SortedList
            'Dim sel As Integer = Convert.ToInt32(ViewState("click"))
            'If ((Session.Item("CurrentPage") - 1) <> "1") Then
            '    imgBtnNext.Enabled = True
            '    imgBtnLast.Enabled = True
            '    imgBtnFirst.Enabled = True
            '    If rdbCheckedId.Value <> Nothing Or rdbCheckedId.Value <> "" Then
            '        'Dim SList As SortedList = DirectCast(ViewState("sl"), SortedList)
            '        SList = DirectCast(ViewState("sl"), SortedList)
            '        SList(Convert.ToInt32(sel)) = True
            '        ViewState("sl") = SList
            '        UpdateLabel()
            '    ElseIf rdbCheckedId.Value = Nothing Or rdbCheckedId.Value = "" Then
            '        'Dim SList As SortedList = DirectCast(ViewState("sl"), SortedList)
            '        SList = DirectCast(ViewState("sl"), SortedList)
            '        SList(Convert.ToInt32(sel)) = False
            '        ViewState("sl") = SList
            '        UpdateLabel()
            '    End If
            '    ViewState("click") = sel - 1
            '    InsertData()
            '    CreateControl(Session.Item("TotalQueCnt"))
            '    generateQuePanel(Session.Item("CurrentPage") - 2)
            '    Session.Add("TestXX", currTime.Value)

            'Else
            '    generateQuePanel(Session.Item("CurrentPage") - 1)

            '    imgBtnPrevious.Enabled = True
            '    'imgBtnPrevious.Enabled = False
            '    'imgBtnFirst.Enabled = False
            '    imgBtnFirst.Enabled = True
            '    imgBtnNext.Enabled = True
            '    imgBtnLast.Enabled = True
            'End If

            'If (ViewState("click") = "1") Then
            '    If rdbCheckedId.Value <> Nothing Or rdbCheckedId.Value <> "" Then
            '        'Dim SList As SortedList = DirectCast(ViewState("sl"), SortedList)
            '        SList = DirectCast(ViewState("sl"), SortedList)
            '        SList(Convert.ToInt32(sel)) = True
            '        ViewState("sl") = SList
            '        UpdateLabel()
            '    ElseIf rdbCheckedId.Value = Nothing Or rdbCheckedId.Value = "" Then
            '        'Dim SList As SortedList = DirectCast(ViewState("sl"), SortedList)
            '        SList = DirectCast(ViewState("sl"), SortedList)
            '        SList(Convert.ToInt32(sel)) = False
            '        ViewState("sl") = SList
            '        UpdateLabel()
            '    End If
            '    Dim realMsg = "You Are On First Question."
            '    Dim message As String = "<script language=""javascript""  type=""text/javascript"">alert('" & realMsg & "');</script>"
            '    If Not ClientScript.IsStartupScriptRegistered("realMsg") Then
            '        ClientScript.RegisterStartupScript(Me.[GetType](), "realMsg", message)
            '    End If
            '    'imgBtnPrevious.Enabled = False
            '    imgBtnPrevious.Enabled = True
            '    'imgBtnFirst.Enabled = False
            '    imgBtnFirst.Enabled = True
            '    imgBtnNext.Enabled = True
            '    imgBtnLast.Enabled = True
            'End If
            '****************************************************************************************************************************************
        Catch ex As Exception
            If log.IsDebugEnabled Then
                log.Debug("Error :" & ex.ToString())
            End If
            Response.Redirect("error.aspx?err=" & ex.Message, False)

        End Try
    End Function
#End Region
#Region "Submit form with finish button"
    '****************************************************************************************************************************************
    'Code added by Monal Shah
    'MethodName:FormSubmitFinish
    'Purpose: When Exam is finished on that time user appearflag become '2' and Exam finish 
    '****************************************************************************************************************************************
    Function FormSubmitFinish()
        Try
            ' Insert data into t_candidate_status
            UpdateLabel()
            InsertData()
            UpdateUserstatusAfterExam()
            '=================
            'dipendra
            Dim trn As SqlTransaction
            Dim arlen As Integer = updsqlquery.Length
            Dim mcommand As SqlCommand
            Dim i As Integer
            Dim objconn As New ConnectDb
            If objconn.connect() = True Then
                trn = objconn.MyConnection.BeginTransaction()
                Try
                    mcommand = New SqlCommand(ViewState("strqestionSql"), objconn.MyConnection, trn)
                    'mcommand = New SqlCommand("Update T_result_option set option_id=1 where result_id = 195", objconn.MyConnection, trn)
                    'Dim result As IAsyncResult
                    mcommand.ExecuteNonQuery()
                    trn.Commit()
                Catch ex As Exception
                    trn.Rollback()
                End Try
            End If
            '================
            Dim ht As Hashtable
            ht = GetCandidateResult(Session.Item("userid"), Session.Item("TestType"))
            'UpdateUserstatusAfterExam()

            Session.Add("TestXX", currTime.Value)
            FormsAuthentication.SignOut()

            '--------------------STARt---------------------
            'Added by: Bharat
            'Date: 2014/04/29
            'Description: Redirect page to Result screen insted of Student login screen
            Response.Redirect("ExamResult.aspx", False)
            '--------------------END---------------------
        Catch ex As Exception
            If log.IsDebugEnabled Then
                log.Debug("Error :" & ex.ToString())
            End If
            Response.Redirect("error.aspx?err=" & ex.Message, False)

        End Try
    End Function
#End Region


#Region "Check radiobutton value in database"
    '*******************************************
    'Code added by Saraswati Patel
    'MethodName:CheckDropDownValue
    'Purpose: when rdbCheckedId value is blank then check in database whether value or not  for question type 3 
    '*******************************************

    Public Function CheckDropDownValue() As Boolean
        Dim objconn As New ConnectDb
        Dim dsResultId, dsOption, dsType As DataSet
        Dim objDa As SqlDataAdapter
        Dim courseid As String
        'Dim strCheckQuestionID As String = ddCheckQuestionId.Value
        Dim arrQuestionId As String()
        Dim arrQuestId As String()
        Dim bool As Boolean
        'Dim strQuesType As String
        Try
            arrQuestionId = ddCheckQuestionId.Value.Split(",")

            If arrQuestionId(0) <> Nothing Then
                arrQuestId = arrQuestionId(0).Split("_")

                If objconn.connect() = True Then
                    'Dim courseid As String = ""
                    If Not Session("testType") Is Nothing Then
                        courseid = Session("testType").ToString
                    Else
                        If Not Session("CourseID") Is Nothing Then
                            courseid = Session("CourseID").ToString
                        End If
                    End If

                    objDa = Nothing
                    Dim str As String = "select result_id from T_result where userid=" + Session.Item("userid").ToString + " and Course_ID='" + courseid.ToString + "' and test_type=" + Session("testtypeval").ToString() + " and qno =" + arrQuestId(1).ToString
                    dsResultId = New DataSet()
                    objDa = New SqlDataAdapter(str, objconn.MyConnection)
                    objDa.Fill(dsResultId)
                    objDa = Nothing
                    Dim strOptionId As String
                    dsOption = New DataSet
                    strOptionId = "select result_id,sub_id,option_id from T_result_option where result_id=" + dsResultId.Tables(0).Rows(0).Item(0).ToString
                    objDa = New SqlDataAdapter(strOptionId, objconn.MyConnection)
                    objDa.Fill(dsOption)
                    If dsOption.Tables(0).Rows(0).Item(1).ToString <> Nothing And dsOption.Tables(0).Rows(0).Item(2) > 0 Then
                        bool = True
                    Else
                        bool = False
                    End If


                End If
            Else
                bool = False

            End If

            Return bool
        Catch ex As Exception
            If Not objconn.MyConnection Is Nothing Then
                If objconn.MyConnection.State = ConnectionState.Open Then
                    objconn.disconnect()
                End If
            End If

            If log.IsDebugEnabled Then
                log.Debug("Error :" & ex.ToString())
            End If
            Response.Redirect("error.aspx?err=" & ex.Message, False)
        Finally
            If Not objconn.MyConnection Is Nothing Then
                If objconn.MyConnection.State = ConnectionState.Open Then
                    objconn.disconnect()
                End If
            End If

            dsResultId = Nothing
            dsOption = Nothing
            objDa = Nothing
            courseid = Nothing
            arrQuestionId = Nothing
            arrQuestId = Nothing
            bool = Nothing

        End Try



    End Function
#End Region


    '****************************************************************************************************************************************
    'Code added by Monal Shah
    'MethodName:PowerFailureProblem
    'Purpose: In case of powerfailure problem student can give exam of that question which are not answered by student
    '****************************************************************************************************************************************
    Private Sub PowerFailureProblem()
        Dim objconn As New ConnectDb 'object of the ConnectClass class
        Dim strSql As String
        Dim valueOfQtn As Integer
        Dim objCommand As SqlCommand                   'SqlCommand object
        Dim objDataReader As SqlDataReader
        Dim strJoinQuery As StringBuilder
        Dim i As Integer
        Dim objHashTable As New Hashtable
        Dim timervalue As String = String.Empty
        Dim sqlstr1 As String
        Dim myCommand1 As SqlCommand
        Dim myDataReader As SqlDataReader
        ' Dim testname As String
        Dim sqlst As String = String.Empty
        'Dim qval As Integer
        Dim qtnarr(valueOfQtn) As Integer
        Dim questionid As New ArrayList
        Dim testtypearr As New ArrayList
        Dim inRemainTotalQtn As Integer
        Dim optionNo As Integer = 0
        Dim myds As DataSet
        Dim myda As SqlDataAdapter
        Dim objStructureQuePaper As StructureQuePaper
      
        Try
            Session.Remove("TestXX")
            'strPathDb = ConfigurationManager.AppSettings("PathDb")

            If objconn.connect() Then
             
                sqlstr1 = "SELECT M_Course.Course_ID, M_Course.Course_Name As Course_Name,M_Course.Course_code As Course_Code FROM t_candidate_status,M_Course  "
                sqlstr1 = sqlstr1 & " WHERE userid = " & Session.Item("userid") & " "
                sqlstr1 = sqlstr1 & " and t_candidate_status.Course_ID='" & Session.Item("testType") & "' and m_course.Course_ID=t_candidate_status.Course_ID and m_course.del_flag='0'"
                'objconn.connect(strPathDb)
                myCommand1 = New SqlCommand(sqlstr1, objconn.MyConnection)
                myDataReader = myCommand1.ExecuteReader
                While myDataReader.Read
                    Session.Add("CourseName", myDataReader.Item("Course_Name"))
                    Session.Add("CourseCode", myDataReader.Item("Course_Code"))
                  
                End While
                myDataReader.Close()
                '  InserttimeForStudent()
                strSql = "select count(qno) As TotalQuestionNo from t_result where userid='" & Session.Item("userid") & "' and Course_id='" & Session.Item("testType") & "'" '  and optionid='0'"
                objCommand = New SqlCommand(strSql, objconn.MyConnection)
                objDataReader = objCommand.ExecuteReader
                If objDataReader.Read() Then
                    valueOfQtn = objDataReader.Item("TotalQuestionNo")
                    
                End If
                objDataReader.Close()
                If (valueOfQtn <> 0) Then
                    Session.Add("TotalQueCnt", valueOfQtn)
                    CreateControl(Session.Item("TotalQueCnt"))
                    strSql = "select consume_time  from t_candidate_status where userid='" & Session.Item("userid") & "' and Course_ID='" & Session.Item("testType") & "' and appearedflag='1'"
                    objCommand = New SqlCommand(strSql, objconn.MyConnection)
                    objDataReader = objCommand.ExecuteReader
                    If objDataReader.Read() Then
                        timervalue = objDataReader.Item("consume_time")
                        If timervalue <> "0" And timervalue <> Nothing And timervalue <> "" Then
                            timervalue = objDataReader.Item("consume_time")
                            currTime.Value = timervalue
                         
                        Else
                            objDataReader.Close()
                            Dim sqlstr As String
                            sqlstr = "SELECT total_time FROM T_Candidate_Status"
                            sqlstr = sqlstr & " Where Course_ID= '" & TestType & "'"
                            objCommand = New SqlCommand(sqlstr, objconn.MyConnection)
                            objDataReader = objCommand.ExecuteReader()
                            While objDataReader.Read
                                timervalue = objDataReader.Item("total_time")
                                currTime.Value = timervalue
                            End While
                            objDataReader.Close()
                        End If
                    End If
                    objDataReader.Close()
                    sqlst = "SELECT total_time FROM T_Candidate_Status"
                    sqlst = sqlst & " Where Course_ID= '" & TestType & "'"
                    objCommand = New SqlCommand(sqlst, objconn.MyConnection)
                    objDataReader = objCommand.ExecuteReader()
                    While objDataReader.Read
                        timervalue = objDataReader.Item("total_time")
                    End While
                    Session.Add("TimeValue", timervalue)
                    objDataReader.Close()
                    ScheduleTask()
                    Session.Add("TestXX", currTime.Value)
                    '*********Test Name***************                   
                    lblExamNameandCode.Text = " " & Session.Item("CourseName") & " ( " & Session.Item("CourseCode") & " )"
                    'objCommand.Dispose()
                    objDataReader.Close()
                    ' objconn.disconnect()
                    'If Not objconn.MyConnection IsNot Nothing Then
                    '    If objconn.MyConnection.State = ConnectionState.Open Then                    '        
                    '        objconn.disconnect()
                    '    End If
                    'End If

                    'Dim qval As Integer
                    'Dim qtnarr(valueOfQtn) As Integer
                    'Dim questionid As New ArrayList
                    'Dim testtypearr As New ArrayList
                    'If objconn.connect(strPathDb) Then
                    strSql = "select qno,test_type from t_result where userid='" & Session.Item("userid") & "' and test_type In (select test_type From m_testinfo where course_id= '" & Session.Item("testType") & "' and del_flag='0') order by result_id " 'and optionid='0'"
                    objCommand = New SqlCommand(strSql, objconn.MyConnection)
                    objDataReader = objCommand.ExecuteReader
                    While objDataReader.Read()
                        questionid.Add(objDataReader.Item(0))
                        testtypearr.Add(objDataReader.Item(1))
                        Session.Add("testtypeval", objDataReader.Item(1))
                    End While

                    qtnarr = questionid.ToArray(System.Type.GetType("System.Int32"))

                    objDataReader.Close()
                    'Dim inRemainTotalQtn As Integer = qtnarr.Length - 1

                    'Dim optionNo As Integer = 0
                    inRemainTotalQtn = qtnarr.Length - 1

                    'Dim optionNo As Integer = 0
                    'Dim myCommand As SqlCommand

                    For i = 0 To (UBound(qtnarr))
                        strJoinQuery = New StringBuilder
                        strJoinQuery.Append("select distinct t.qno as qid,m_question.question as question,m_question.Audios,m_options.*,m_question.Qn_Category_ID as QuesTypeID from m_question inner  JOIN m_options on m_question.qnid = m_options.qnid and m_question.test_type = m_options.test_type inner  join t_result as t on t.qno=m_question.qnid and t.qno= m_options.qnid and t.test_type=m_options.test_type and  t.test_type=m_question.test_type where m_question.qnid = '" & qtnarr(i) & "' and m_options.test_type = " & testtypearr(i) & " and t.userid='" & Session.Item("userid") & "'")
                        strSql = strJoinQuery.ToString()
                        'Dim myds As New DataSet
                        'Dim myda As New SqlDataAdapter(strSql, objconn.MyConnection)
                        myds = New DataSet
                        myda = New SqlDataAdapter(strSql, objconn.MyConnection)
                        'If objconn.connect(strPathDb) Then
                        myda.Fill(myds)
                        'objconn.disconnect()
                        'If Not objconn.MyConnection Is Nothing Then
                        'If objconn.MyConnection.State = ConnectionState.Open Then
                        ' objconn.disconnect()
                        ' End If
                        'End If
                        'End If


                        Dim intLoop As Integer = 1
                        'Dim strNo As Integer
                        'Dim objStructureQuePaper As New StructureQuePaper()
                        objStructureQuePaper = New StructureQuePaper()

                        objStructureQuePaper.QueId = myds.Tables(0).Rows(0).Item("qnid")
                        objStructureQuePaper.QueDesc = myds.Tables(0).Rows(0).Item("question")
                        objStructureQuePaper.QuesTypeID = myds.Tables(0).Rows(0).Item("QuesTypeID")
                        objStructureQuePaper.Test_type = myds.Tables(0).Rows(0).Item("test_type").ToString()
                        objStructureQuePaper.QueAudio = myds.Tables(0).Rows(0).Item("Audios").ToString()
                        Dim htoptions As New Hashtable()
                        For k As Integer = 0 To myds.Tables(0).Rows.Count - 1
                            htoptions.Add(myds.Tables(0).Rows(k).Item("optionid"), myds.Tables(0).Rows(k).Item("option"))
                        Next
                        objStructureQuePaper.Options = htoptions

                        myda = Nothing
                        myds = Nothing

                        objHashTable.Add(i + 1, objStructureQuePaper)
                        strJoinQuery.Remove(0, strJoinQuery.Length)
                    Next
                    Session.Add("QuestionPaper", objHashTable)

                    Session.Add("CurrentPage", 1)
                    If ViewState("click") Is Nothing Then
                        ViewState.Add("click", 1)
                    End If
                    generateQuePanel(Session.Item("CurrentPage"))

                    UpdateLabel()

                    'objconn.disconnect()
                    If Not objconn.MyConnection Is Nothing Then
                        If objconn.MyConnection.State = ConnectionState.Open Then
                            objconn.disconnect()
                        End If
                    End If
                    'End If
                    'Else
                    '    FormSubmitFinish()
                End If
            End If
        Catch ex As Exception
            If log.IsDebugEnabled Then
                log.Debug("Error :" & ex.ToString())
            End If
            If objconn IsNot Nothing Then
                objconn.disconnect()
            End If
            Response.Redirect("error.aspx?err=" & ex.Message, False)

        Finally
            If objconn IsNot Nothing Then
                objconn.disconnect()
            End If
            myCommand1 = Nothing
            myda = Nothing
            myDataReader = Nothing
            myds = Nothing
            strJoinQuery = Nothing
            questionid = Nothing
            testtypearr = Nothing
            qtnarr = Nothing
            objStructureQuePaper = Nothing
            objconn = Nothing
            objDataReader = Nothing
            objCommand = Nothing

        End Try
    End Sub
    '****************************************************************************************************************************************
    'Code added by Monal Shah
    'MethodName:CheckForsubject
    'Purpose: Check For subject in Course whether it is exists or not.if exists than subject removed and other subject's questions are inserted in                   t_result and existed subject's Question not inserted in  t_result
    '****************************************************************************************************************************************
    Public Function CheckForsubject(ByVal sr() As Integer) As Boolean
        Dim objconn As New ConnectDb 'object of the ConnectClass class
        Dim strSql As String
        Dim objCommand As SqlCommand                  'SqlCommand object
        Dim objDataReader As SqlDataReader
        Dim adp As SqlDataAdapter
        Dim dt As DataTable
        Dim courseid As Integer
        Dim appearedflg As Integer
        Dim adp1 As SqlDataAdapter
        Dim dt1 As DataTable
        'Dim cntCourse As Integer
        Dim arl As New ArrayList
        Dim testtypevalue As Integer
        Dim testtypevaluearr(testtypevalue) As Integer
        Dim testtypevalueal As New ArrayList
        ' Dim ar As Array
        Try
            'strPathDb = ConfigurationManager.AppSettings("PathDb")
            If objconn.connect() Then

                strSql = "Select Course_ID,Appearedflag from t_candidate_status where userid='" & Session.Item("userid") & "' and Course_ID='" & Session.Item("testtype") & "' "
                adp = New SqlDataAdapter(strSql, objconn.MyConnection)
                dt = New DataTable()
                adp.Fill(dt)
                'Dim adp1 As SqlDataAdapter
                'Dim dt1 As DataTable
                strSql = ""
                If (dt.Rows.Count > 0) Then
                    courseid = Convert.ToInt32(dt.Rows(0)("Course_ID"))
                    appearedflg = Convert.ToInt32(dt.Rows(0)("Appearedflag"))
                End If
                For chk As Integer = 0 To sr.Length - 1
                    If chk = sr.Length Then
                        Return True
                    End If
                    strSql = "Select Distinct t_result.test_type as testtype,t_result.Course_ID,m_testinfo.test_name as testname   from t_result,m_testinfo where t_result.test_type='" & sr(chk) & "' and m_testinfo.Course_id=t_result.course_id and t_result.test_type=m_testinfo.test_type and t_result.userid='" & Session.Item("userid") & "'"
                    adp1 = New SqlDataAdapter(strSql, objconn.MyConnection)
                    dt1 = New DataTable()
                    adp1.Fill(dt1)
                    If (dt1.Rows.Count > 0) Then
                        'Dim arl As New ArrayList
                        For a As Integer = 0 To sr.Length - 1
                            arl.Add(sr(a))
                        Next
                        Dim newar(arl.Count - 1) As Integer
                        For a As Integer = 0 To arl.Count - 1
                            newar(a) = arl(a)
                        Next
                        ViewState("arVal") = newar
                    ElseIf dt1.Rows.Count = 0 Then
                        If (Not ViewState("arVal") Is Nothing) Then
                            sr = DirectCast(ViewState("arVal"), Integer())
                        End If
                    End If

                Next
                Return True
            End If

        Catch ex As Exception
            If log.IsDebugEnabled Then
                log.Debug("Error :" & ex.ToString())
            End If
            If objconn IsNot Nothing Then
                objconn.disconnect()
            End If
            Response.Redirect("error.aspx?err=" & ex.Message, False)
        Finally
            If objconn IsNot Nothing Then
                objconn.disconnect()
            End If
            arl = Nothing
            dt = Nothing
            dt1 = Nothing
            adp = Nothing
            adp1 = Nothing
            objDataReader = Nothing
            objCommand = Nothing
            objconn = Nothing
        End Try
    End Function

    Public Function IsSelected(ByVal val As Integer, ByVal opts As ArrayList) As Boolean
        For i As Integer = 0 To opts.Count - 1
            If opts(i).ToString = val Then
                Return True
                Exit Function
            End If
        Next
        Return False
    End Function

    '****************************************************************************************************************************************
    'Code added by Indravadan Vasava
    'Date : 2011/04/21
    'MethodName:CheckQuestions
    'Purpose: Takes Course_ID as parameter and Get the Marks, Qestion to be asked for that course.
    'The Questions are calculated according to the weightage given to them in databse
    '****************************************************************************************************************************************
    Public Sub CheckQuestions(ByVal Cid As String)
        Dim tot_Marks As Integer = 0
        Dim item As DictionaryEntry
        Dim strPathDb As String = ConfigurationManager.AppSettings("PathDb")
        Dim objconn As New ConnectDb
        Dim cds As DataSet
        Dim cda As SqlDataAdapter
        Dim htSub As Hashtable ' for subject and marks 
        Dim htSubQues As New Hashtable ' for Each subject Qno for each type  key as sub id and value as arraylist
        Dim htFinal As New Hashtable ' Holds testtype as key and vale as Structre of weightage 
        ' The Structure All the Basic and intermediate values for TF/MC/BL
        ' We can Use The Function Generate Queries
        Dim htAll As New Hashtable

        '***************Monal Shah***********
        Dim SelQuesTFB As New Hashtable
        Dim selItem As DictionaryEntry

        Dim SelQuesTFI As New Hashtable
        Dim selItemTFI As DictionaryEntry

        Dim SelQuesMCB As New Hashtable
        Dim selItemMCB As DictionaryEntry

        Dim SelQuesMCI As New Hashtable
        Dim selItemMCI As DictionaryEntry

        Dim SelQuesBLB As New Hashtable
        Dim selItemBLB As DictionaryEntry

        Dim SelQuesBLI As New Hashtable
        Dim selItemBLI As DictionaryEntry
        '***************End******************


        Dim UserID As String = ""
        Dim SubCount As Integer = 0
        If Not Session.Item("userid") Is Nothing Then
            UserID = Session.Item("userid").ToString
        End If

        Dim htQuestions As New Hashtable


        Dim htdata As New Hashtable
        Dim testTotal As Integer = 0

        Try
            'SyncLock Cid
            If objconn.connect() = True Then
                cds = New DataSet
                cda = New SqlDataAdapter("select total_marks from m_course where course_id=" & Cid, objconn.MyConnection)
                cda.Fill(cds)
                tot_Marks = CInt(cds.Tables(0).Rows(0).Item(0))
            End If
            htSub = GetMarksForSubject(Cid, tot_Marks, UserID)

            For Each item In htSub
                Dim aa() As Integer = GetQTypeCountForSubject(CInt(item.Key), CInt(htSub(item.Key)), Cid)
                htSubQues.Add(item.Key, aa)
            Next

            For Each item In htSubQues
                htFinal.Add(item.Key, GetWeightStructure(item.Key, Cid, DirectCast(item.Value, Integer()), UserID))
            Next

            SubCount = htFinal.Count

            Dim aab As Integer = 0
            For Each item In htFinal
                If aab <> 0 Then
                    If 1 = 1 Then

                    End If
                End If
                Dim testtype As String = item.Key.ToString
                Dim SWeight As StructWeight = DirectCast(item.Value, StructWeight)

                For i As Integer = 1 To 3
                    Dim Bas As Integer = 0
                    Dim Imed As Integer = 0
                    If i = 1 Then
                        Bas = SWeight.TFBasic
                        Imed = SWeight.TFIMed
                    ElseIf i = 2 Then
                        Bas = SWeight.MCBasic
                        Imed = SWeight.MCIMed
                    ElseIf i = 3 Then
                        Bas = SWeight.BLBasic
                        Imed = SWeight.BLIMed
                    End If

                    For j As Integer = 0 To 1
                        Dim stbldr As New StringBuilder
                        Dim category As String = ""
                        If j = 0 Then
                            category = Bas
                        ElseIf j = 1 Then
                            category = Imed
                        End If

                        '   stbldr.Append(" select top " & category & "  qnid, test_type,Qn_Category_ID,qlevel,total_marks as que_mark,SUM(total_marks) as total_marks ")
                        stbldr.Append(" select qnid, test_type,Qn_Category_ID,qlevel,total_marks as que_mark,SUM(total_marks) as total_marks ")
                        stbldr.Append(" from m_question ")
                        'Added by bhumi [1/9/2015]
                        'Reason: For MNNV L5 incorrect Test_Type getting so at exam time error occured
                        stbldr.Append(" where del_flag=0 AND TEST_TYPE IN (SELECT test_type from M_Weightage where Course_ID=" & Cid & ") and Qn_Category_ID=" & i.ToString & " and qlevel=" & j.ToString)
                        'ended by bhumi
                        stbldr.Append(" group by  test_type,Qn_Category_ID,total_marks,qlevel,qnid ")
                        stbldr.Append(" order by Qn_Category_ID,qlevel,newid() ")



                        Dim query As String = stbldr.ToString
                        testTotal = 0
                        Dim wds As DataSet
                        Dim wda As SqlDataAdapter
                        Dim htMandTotal As New Hashtable
                        Dim sitem As DictionaryEntry
                        Try
                            'If objconn.connect(strPathDb) = True Then
                            wds = New DataSet
                            wda = New SqlDataAdapter(query, objconn.MyConnection)
                            wda.Fill(wds)
                            For k As Integer = 0 To wds.Tables(0).Rows.Count - 1
                                Dim ar(4) As Integer
                                ar(0) = wds.Tables(0).Rows(k).Item(1).ToString
                                ar(1) = wds.Tables(0).Rows(k).Item(2).ToString
                                ar(2) = wds.Tables(0).Rows(k).Item(3).ToString
                                ar(3) = wds.Tables(0).Rows(k).Item(5).ToString
                                ar(4) = wds.Tables(0).Rows(k).Item(0).ToString
                                ' htMandTotal.Add(wds.Tables(0).Rows(k).Item(0).ToString, ar)
                                htMandTotal.Add(k, ar)
                            Next
                            'End If


                            For Each sitem In htMandTotal
                                If j = 0 Then
                                    If Bas <= testTotal Then
                                        ' Set the key value as testtype,qcategory,qlevel || value as qnid
                                        '      Exit For
                                        Exit For
                                    End If
                                    Dim nar() As Integer = DirectCast(sitem.Value, Integer())

                                    Dim nextNum As Integer = testTotal + CInt(nar(3))

                                    If (nextNum <= Bas) Then
                                        testTotal = testTotal + CInt(nar(3))
                                        If i = 1 And j = 0 Then
                                            Dim arr() As Integer = DirectCast(sitem.Value, Integer())
                                            SelQuesTFB.Add(arr(4), sitem.Value)
                                            ViewState.Add("SelQuesTFB", SelQuesTFB)
                                            arr = Nothing
                                        ElseIf i = 2 And j = 0 Then
                                            'SelQuesMCB.Add(sitem.Key, sitem.Value)
                                            Dim arr() As Integer = DirectCast(sitem.Value, Integer())
                                            SelQuesMCB.Add(arr(4), sitem.Value)
                                            arr = Nothing
                                        ElseIf i = 3 And j = 0 Then
                                            'SelQuesBLB.Add(sitem.Key, sitem.Value)
                                            Dim arr() As Integer = DirectCast(sitem.Value, Integer())
                                            SelQuesBLB.Add(arr(4), sitem.Value)
                                            arr = Nothing
                                        End If

                                    End If

                                ElseIf j = 1 Then
                                    If Imed <= testTotal Then
                                        ' Set the key value as testtype,qcategory,qlevel || value as qnid
                                        Exit For
                                    End If
                                    Dim nar() As Integer = DirectCast(sitem.Value, Integer())

                                    Dim nextNum As Integer = testTotal + CInt(nar(3))
                                    If (nextNum <= Imed) Then
                                        testTotal = testTotal + CInt(nar(3))
                                        If i = 1 And j = 1 Then
                                            'Dim arr() As Integer = DirectCast(sitem.Value, Integer())
                                            Dim arr() As Integer = DirectCast(sitem.Value, Integer())
                                            '  SelQuesTFI.Add(sitem.Key, sitem.Value)  
                                            SelQuesTFI.Add(arr(4), sitem.Value)
                                            arr = Nothing
                                        ElseIf i = 2 And j = 1 Then
                                            Dim arr() As Integer = DirectCast(sitem.Value, Integer())
                                            SelQuesMCI.Add(arr(4), sitem.Value)
                                            arr = Nothing
                                        ElseIf i = 3 And j = 1 Then
                                            'SelQuesBLI.Add(sitem.Key, sitem.Value)
                                            Dim arr() As Integer = DirectCast(sitem.Value, Integer())
                                            SelQuesBLI.Add(arr(4), sitem.Value)
                                            arr = Nothing
                                        End If
                                    End If
                                End If


                            Next


                            If j = 0 Then
                                If (testTotal < Bas) Then
                                    Dim diff As Integer = Bas - testTotal
                                    Imed = Imed + diff
                                End If

                            ElseIf j = 1 Then
                                If (testTotal < Imed) Then
                                    Dim diff As Integer = Imed - testTotal
                                    If (i = 1) Then
                                        AdjustQuestions(SWeight.TestType, diff, 0, i, 0, SelQuesTFB)
                                    ElseIf i = 2 Then
                                        AdjustQuestions(SWeight.TestType, diff, 0, i, 0, SelQuesMCB)
                                    ElseIf i = 3 Then
                                        AdjustQuestions(SWeight.TestType, diff, 0, i, 0, SelQuesBLB)
                                    End If

                                End If
                            End If

                        Catch ex As Exception
                            If Not objconn.MyConnection Is Nothing Then
                                If objconn.MyConnection.State = ConnectionState.Open Then
                                    objconn.disconnect()
                                End If
                            End If
                            If log.IsDebugEnabled Then
                                log.Debug("Error :" & ex.ToString())
                            End If
                            Response.Redirect("error.aspx?err=" & ex.StackTrace, False)
                        Finally
                            If Not objconn.MyConnection Is Nothing Then
                                If objconn.MyConnection.State = ConnectionState.Open Then
                                    objconn.disconnect()
                                End If
                            End If
                            wds = Nothing
                            wda = Nothing

                        End Try

                    Next
                    If testTotal = Bas Or testTotal = Imed Then
                        i = i
                    End If

                Next


                Dim id As String = "Sub" & aab.ToString
                Dim HtforSub As New Hashtable()

                For Each selItem In SelQuesTFB
                    HtforSub.Add(selItem.Key, selItem.Value)
                Next

                For Each selItemTFI In SelQuesTFI
                    HtforSub.Add(selItemTFI.Key, selItemTFI.Value)
                Next

                For Each selItemMCB In SelQuesMCB
                    HtforSub.Add(selItemMCB.Key, selItemMCB.Value)
                Next

                For Each selItemMCI In SelQuesMCI
                    HtforSub.Add(selItemMCI.Key, selItemMCI.Value)
                Next

                For Each selItemBLB In SelQuesBLB
                    HtforSub.Add(selItemBLB.Key, selItemBLB.Value)
                Next

                For Each selItemBLI In SelQuesBLI
                    HtforSub.Add(selItemBLI.Key, selItemBLI.Value)
                Next

                htAll.Add(item.Key, HtforSub)

                'Dim ss As String = ""
                'For aa As Integer = 0 To SelQuesTFB.Count - 1
                '    ss = ss & SelQuesTFB(aa) & ","
                'Next

                'Dim ss1 As String = ""
                'For aa As Integer = 0 To SelQuesTFI.Count - 1
                '    ss1 = ss1 & SelQuesTFI(aa) & ","
                'Next

                'Dim ss2 As String = ""
                'For aa As Integer = 0 To SelQuesMCB.Count - 1
                '    ss2 = ss2 & SelQuesMCB(aa) & ","
                'Next

                'Dim ss3 As String = ""
                'For aa As Integer = 0 To SelQuesMCI.Count - 1
                '    ss3 = ss3 & SelQuesMCI(aa) & ","
                'Next

                'Dim ss4 As String = ""
                'For aa As Integer = 0 To SelQuesBLB.Count - 1
                '    ss4 = ss4 & SelQuesBLB(aa) & ","
                'Next

                'Dim ss5 As String = ""
                'For aa As Integer = 0 To SelQuesBLI.Count - 1
                '    ss5 = ss5 & SelQuesBLI(aa) & ","
                'Next



                SelQuesTFB.Clear()
                SelQuesTFI.Clear()
                SelQuesMCB.Clear()
                SelQuesMCI.Clear()
                SelQuesBLB.Clear()
                SelQuesBLI.Clear()
                aab = aab + 1

            Next


            '***** Test Code to check Generating Marks*******
            Dim Marks As Integer = 0
            For Each iiitem As DictionaryEntry In htAll
                Dim aht As Hashtable = DirectCast(iiitem.Value, Hashtable)
                For Each itt As DictionaryEntry In aht
                    Dim m() As Integer = DirectCast(itt.Value, Integer())
                    Marks = Marks + CInt(m(3))
                Next
            Next
            '************************************************
            Session.Add("SubDetails", htSubQues)
            Session.Add("HtAll", htAll)
            'End SyncLock
        Catch ex As Exception
            If Not objconn.MyConnection Is Nothing Then
                If objconn.MyConnection.State = ConnectionState.Open Then
                    objconn.disconnect()
                End If
            End If
            If log.IsDebugEnabled Then
                log.Debug("Error :" & ex.ToString())
            End If
            Throw ex
        Finally
            If Not objconn.MyConnection Is Nothing Then
                If objconn.MyConnection.State = ConnectionState.Open Then
                    objconn.disconnect()
                End If
            End If
            cds = Nothing
            cda = Nothing
        End Try


        'End Sub

    End Sub

    '****************************************************************************************************************************************
    'Code added by Indravadan Vasava
    'Date : 2011/04/21
    'MethodName:GetMarksForSubject
    'Purpose: Takes Course_ID and total Marks as parameter and Calculates the marks to be alloted for each subject as per the weightage given in the database
    '****************************************************************************************************************************************
    Public Function GetMarksForSubject(ByVal Course_id As String, ByVal TotalMarks As Integer, ByVal UID As String) As Hashtable
        Dim ht As New Hashtable

        Dim sds As DataSet
        Dim sda As SqlDataAdapter
        Dim subjects As New Hashtable
        Dim subMarks As New Hashtable
        Dim item As DictionaryEntry

        Dim sper As Integer
        Dim multiple As Double
        Dim QforSub As Integer = 0
        Dim sumtotal As Integer
        Dim leastID As Integer
        Dim lval As Integer
        Dim objconn As New ConnectDb
        'Dim strPathDb As String
        Try
            'strPathDb = ConfigurationSettings.AppSettings("PathDb")
            If objconn.connect() = True Then
                sds = New DataSet
                ' Future Query for taking subject from T_USER_COurse
                'select test_type,Sub_Weightage from T_User_Course where del_flag=0 and Course_id=177 and user_id=255
                'select test_type,Sub_Weightage from T_User_Course where  Course_id=178  and user_id=224
                ' OLD "select test_type,Sub_Weightage from m_weightage where del_flag=0 and Course_id=
                '''''sda = New SqlDataAdapter("select test_type,Sub_Weightage from T_User_Course where del_flag=0 and  user_id=" & UID & " and Course_id=" & Course_id, objconn.MyConnection)
                ' sda = New SqlDataAdapter("select test_type,Sub_Weightage from m_weightage where del_flag=0 and Course_id=" & Course_id, objconn.MyConnection)

                '*********************
                'Del_Flag added in query by bhumi[2/9/2015]
                'Reason: If more than one entry for  same course and same userid found in t_user_Course table error occurred (solution use Del_Flag=1 in query)
                sda = New SqlDataAdapter("select test_type,Sub_Weightage from T_User_Course where  Course_id=" & Course_id & " and Del_Flag=1 and user_id= " & UID, objconn.MyConnection)
                'Ended by bhumi
                ' sda = New SqlDataAdapter("select test_type,Sub_Weightage from M_Weightage where  Course_id=" & Course_id, objconn.MyConnection)
                sda.Fill(sds)
                For i As Integer = 0 To sds.Tables(0).Rows.Count - 1
                    subjects.Add(sds.Tables(0).Rows(i).Item(0).ToString, sds.Tables(0).Rows(i).Item(1).ToString)
                Next
            End If

        Catch ex As Exception
            If Not objconn.MyConnection Is Nothing Then
                If objconn.MyConnection.State = ConnectionState.Open Then
                    objconn.MyConnection.Close()
                    objconn.disconnect()
                End If
            End If
            If log.IsDebugEnabled Then
                log.Debug("Error :" & ex.ToString())
            End If
            Throw ex
        Finally
            If Not objconn.MyConnection Is Nothing Then
                If objconn.MyConnection.State = ConnectionState.Open Then
                    objconn.MyConnection.Close()
                    objconn.disconnect()
                End If
            End If
            '  objconn.disconnect()
            sds = Nothing
            sda = Nothing
            objconn = Nothing
        End Try

        For Each item In subjects
            'Dim sper As Integer = CInt(item.Value)
            'Dim multiple As Double = sper / 100
            'Dim QforSub As Integer = 0
            sper = CInt(item.Value)
            multiple = sper / 100
            QforSub = 0

            QforSub = Math.Abs(TotalMarks * (multiple))
            subMarks.Add(item.Key, QforSub)
        Next


        ' Get Least Questions , ID and total to adjust later
        'Dim sumtotal As Integer = GetSumTotalSubjects(subMarks)
        'Dim leastID As Integer = GetLeastQuesSubjectID(subMarks)

        sumtotal = GetSumTotalSubjects(subMarks)
        leastID = GetLeastQuesSubjectID(subMarks)

        If (TotalMarks - sumtotal > 0) Then
            While TotalMarks - sumtotal <> 0
                'Dim lval As Integer = CInt(subMarks(leastID.ToString))
                lval = CInt(subMarks(leastID.ToString))
                lval = lval + 1
                subMarks(leastID.ToString) = lval
                sumtotal = GetSumTotalSubjects(subMarks)
                leastID = GetLeastQuesSubjectID(subMarks)
            End While


        End If

        Return subMarks
    End Function


    '****************************************************************************************************************************************
    'Code added by Indravadan Vasava
    'Date : 2011/04/21
    'MethodName:GetSumTotalSubjects
    'Purpose: Takes Hashtable of Subject and their Marks as parameter and Calculates type of questions and their marks according to weightage given to them in the database
    '****************************************************************************************************************************************
    Public Function GetSumTotalSubjects(ByVal submarks As Hashtable) As Integer
        Dim sumtotal As Integer = 0
        Dim item As DictionaryEntry
        Dim leastQ As Integer = 0
        Dim leastID As Integer = 0
        For Each item In submarks
            If (sumtotal = 0) Then
                leastQ = CInt(submarks(item.Key))
                leastID = item.Key
            Else
                If (leastQ > CInt(submarks(item.Key))) Then
                    leastQ = CInt(submarks(item.Key))
                    leastID = item.Key
                End If
            End If
            sumtotal = sumtotal + CInt(submarks(item.Key))
        Next
        Return sumtotal
    End Function

    '****************************************************************************************************************************************
    'Code added by Indravadan Vasava
    'Date : 2011/04/21
    'MethodName:GetLeastQuesSubjectID
    'Purpose: Takes Hashtable of Subject and their Marks as parameter and Calculates the type with least marks , and adds in it to adjust the weightage
    '****************************************************************************************************************************************
    Public Function GetLeastQuesSubjectID(ByVal submarks As Hashtable) As Integer
        Dim sumtotal As Integer = 0
        Dim item As DictionaryEntry
        Dim leastQ As Integer = 0
        Dim leastID As Integer = 0
        For Each item In submarks
            If (sumtotal = 0) Then
                leastQ = CInt(submarks(item.Key))
                leastID = item.Key
            Else
                If (leastQ > CInt(submarks(item.Key))) Then
                    leastQ = CInt(submarks(item.Key))
                    leastID = item.Key
                End If
            End If
            sumtotal = sumtotal + CInt(submarks(item.Key))
        Next
        Return leastID
    End Function


    '****************************************************************************************************************************************
    'Code added by Indravadan Vasava
    'Date : 2011/04/21
    'MethodName:GetQTypeCountForSubject
    'Purpose: Takes subjectID,Marks,and Course ID as parameter and Fetches questions from Database according their weightage
    '****************************************************************************************************************************************
    Public Function GetQTypeCountForSubject(ByVal test_type As Integer, ByVal totalMarks As Integer, ByVal Course_id As String) As Integer()
        Dim objconn As New ConnectDb
        'Dim arrLst As New ArrayList
        Dim query As String

        Dim tds As DataSet
        Dim tda As SqlDataAdapter
        Dim tf As Integer = 0
        Dim tfper As Double = 0

        Dim mc As Integer = 0
        Dim mcper As Double = 0

        Dim bl As Integer = 0
        Dim blper As Double = 0

        Dim bas As Integer = 0
        Dim basper As Double = 0

        Dim IMed As Integer = 0
        Dim IMedper As Double = 0

        Dim arr(3) As Integer
        'strPathDb = ConfigurationManager.AppSettings("PathDb")
        Try
            If objconn.connect() = True Then
                'Dim query As String = "select test_type,Sub_Weightage,Single,Multi_Choice,Blanks,Basic,InterMed from T_User_Course where del_flag=1 and Course_id =" & Course_id & " and test_type =" & test_type & "  and user_id=" & Session.Item("userid").ToString & " order by newid() "
                query = "select test_type,Sub_Weightage,Single,Multi_Choice,Blanks,Basic,InterMed from T_User_Course where del_flag=1 and Course_id =" & Course_id & " and test_type =" & test_type & "  and user_id=" & Session.Item("userid").ToString & " order by newid() "
                ' SyncLock query
                tds = New DataSet
                tda = New SqlDataAdapter(query, objconn.MyConnection) '"select test_type,Sub_Weightage,single,multi_Choice,Blanks,Basic,InterMed from m_weightage where del_flag=0 and Course_id=" & Course_id & " and test_type=" & test_type, objconn.MyConnection)

                tda.Fill(tds)
                'End SyncLock
                tf = CInt(tds.Tables(0).Rows(0).Item(2))
                tfper = tf / 100
                mc = CInt(tds.Tables(0).Rows(0).Item(3))
                mcper = mc / 100
                bl = CInt(tds.Tables(0).Rows(0).Item(4))
                blper = bl / 100
                bas = CInt(tds.Tables(0).Rows(0).Item(5))
                basper = bas / 100

                tf = Math.Abs(totalMarks * tfper)
                mc = Math.Abs(totalMarks * mcper)
                bl = Math.Abs(totalMarks * blper)

                arr(0) = tf
                arr(1) = mc
                arr(2) = bl

                If (tf + mc + bl) <> totalMarks Then
                    While ((tf + mc + bl) <> totalMarks)
                        If ((tf + mc + bl) > totalMarks) Then
                            arr = AdjustQTypesMax(arr)



                        ElseIf (tf + mc + bl) < totalMarks Then
                            arr = AdjustQTypesLeast(arr)

                        End If
                        tf = arr(0)
                        mc = arr(1)
                        bl = arr(2)

                    End While
                End If
            End If
            Return arr

        Catch ex As Exception
            If Not objconn.MyConnection Is Nothing Then
                If objconn.MyConnection.State = ConnectionState.Open Then
                    objconn.disconnect()
                End If
            End If
            If log.IsDebugEnabled Then
                log.Debug("Error :" & ex.ToString())
            End If
            Throw ex
        Finally
            If Not objconn.MyConnection Is Nothing Then
                If objconn.MyConnection.State = ConnectionState.Open Then
                    objconn.disconnect()
                End If
            End If
            tds = Nothing
            tda = Nothing
            objconn = Nothing
            ' objconn.disconnect()
        End Try
    End Function

    '****************************************************************************************************************************************
    'Code added by Indravadan Vasava
    'Date : 2011/04/21
    'MethodName:AdjustQTypesLeast
    'Purpose: Takes Integer array as parameter and Makes adjustment in least Value
    '****************************************************************************************************************************************
    Public Function AdjustQTypesLeast(ByVal ar As Integer()) As Integer()
        Dim least As Integer = 0

        For i As Integer = 0 To ar.Length - 1
            If (i = 0) Then
                least = i

            Else
                If ar(i) < least Then
                    least = i
                End If
            End If
        Next

        ar(least) = ar(least) + 1
        Return ar
    End Function

    '****************************************************************************************************************************************
    'Code added by Indravadan Vasava
    'Date : 2011/04/21
    'MethodName:AdjustQTypesMax
    'Purpose: Takes Integere Array as parameter and Adjust or adds to the maximum number
    '****************************************************************************************************************************************
    Public Function AdjustQTypesMax(ByVal ar As Integer()) As Integer()
        Dim max As Integer = 0

        For i As Integer = 0 To ar.Length - 1
            If (i = 0) Then

                max = i

            Else
                If ar(i) > max Then
                    max = i
                End If
            End If
        Next

        ar(max) = ar(max) - 1
        Return ar
    End Function

    '****************************************************************************************************************************************
    'Code added by Indravadan Vasava
    'Date : 2011/04/21
    'MethodName:GetWeightStructure
    'Purpose: Takes testtype, courseID and Integer Array as parameter and Returns StructWeight object with filled Value
    '****************************************************************************************************************************************
    Public Function GetWeightStructure(ByVal testtype As String, ByVal courseid As String, ByVal arrVal As Integer(), ByVal UID As String) As StructWeight
        Dim wtStruct As New StructWeight
        wtStruct.TestType = testtype
        Dim BQ As Integer = 0
        Dim Bper As Double = 0
        Dim IMQ As Integer = 0
        Dim IMPer As Double = 0

        Dim wds As DataSet
        Dim wda As SqlDataAdapter

        Dim weight As Integer
        Dim objconn As New ConnectDb
        'select  Basic,InterMed from T_User_Course where course_id=178   and test_type=25 and user_id=224
        Dim query As String = "select  Basic,InterMed from T_User_Course where course_id=" & courseid & "    and test_type= " & testtype & " and user_id=" & UID
        'Dim query As String = "select Weightage_Id,Basic,InterMed from M_weightage where course_id=" & courseid & " and del_flag=0 and test_type=" & testtype
        Try
            'strPathDb = ConfigurationManager.AppSettings("PathDb")
            If objconn.connect() = True Then
                wds = New DataSet
                wda = New SqlDataAdapter(query, objconn.MyConnection)
                wda.Fill(wds)
                Bper = CInt(wds.Tables(0).Rows(0).Item(0))
                Bper = Bper / 100
                IMPer = CInt(wds.Tables(0).Rows(0).Item(1))
                IMPer = IMPer / 100
            End If


            For i As Integer = 0 To 2
                'Dim weight As Integer = arrVal(i)
                weight = arrVal(i)
                BQ = Math.Abs(weight * Bper)
                IMQ = Math.Abs(weight * IMPer)

                If (BQ + IMQ) <> weight Then
                    While (BQ + IMQ) <> weight
                        If (BQ + IMQ) < weight Then
                            If (Bper > IMPer) Then
                                BQ = BQ + 1
                            Else
                                IMQ = IMQ + 1
                            End If


                        ElseIf (BQ + IMQ) > weight Then
                            If (Bper > IMPer) Then
                                BQ = BQ - 1
                            Else
                                IMQ = IMQ - 1
                            End If
                        End If
                    End While
                End If

                If i = 0 Then
                    wtStruct.TFBasic = BQ
                    wtStruct.TFIMed = IMQ
                ElseIf i = 1 Then
                    wtStruct.MCBasic = BQ
                    wtStruct.MCIMed = IMQ
                ElseIf i = 2 Then
                    wtStruct.BLBasic = BQ
                    wtStruct.BLIMed = IMQ

                End If
            Next

        Catch ex As Exception
            If log.IsDebugEnabled Then
                log.Debug("Error :" & ex.ToString())
            End If
            If objconn IsNot Nothing Then
                objconn.disconnect()
            End If
            Throw ex
        Finally
            wda = Nothing
            wds = Nothing
            If objconn IsNot Nothing Then
                objconn.disconnect()
            End If

        End Try
        Return wtStruct
    End Function

    '****************************************************************************************************************************************
    'Code added by Indravadan Vasava
    'Date : 2011/04/22
    'MethodName:AdjustQuestions
    'Purpose: If Question is not found in Basic Category , then it is fetched from Intermediate category, If it is not found There then
    ' Again it is searched int Basic Type , and at last if it is not found , Then the Method recursively Calls itself and Take a question 
    ' from True/False Category Explicitly. This Condition arrives onl when there is shortage of 1 Marks. That is why Respective s done.
    '****************************************************************************************************************************************
    Public Function AdjustQuestions(ByVal test As String, ByVal diff As Integer, ByVal AdjustFromlevel As Integer, ByVal Qn_cat As Integer, ByVal qlevel As Integer, ByRef ht As Hashtable)
        'Parameter :- testtype, difference, Basic, intermed,qcat
        Dim hitem As DictionaryEntry
        Dim ids As String = ""
        Dim stbldr As New StringBuilder
        Dim hds As DataSet
        Dim hda As SqlDataAdapter
        Dim ttotal As Integer = 0
        Dim objconn As New ConnectDb
        'Dim nar(3) As Integer
        Dim SelQuesTFB As New Hashtable
        Dim strquery As String

        For Each hitem In ht
            ids = ids & hitem.Key.ToString & ","
        Next


        If ids <> "" Then
            ids = ids.Substring(0, ids.Length - 1)
            ids = " and qnid not in (" & ids & ")"
        End If

        ' Dim stbldr As New StringBuilder

        stbldr.Append(" select  qnid, test_type,Qn_Category_ID,qlevel,total_marks as que_mark,SUM(total_marks) as total_marks ")
        stbldr.Append(" from m_question ")
        'modified by bhumi [2/9/2015]
        'Reason: Qn_Category_ID removed, because query not working properly for MNNG L7 
        stbldr.Append(" where del_flag=0 AND TEST_TYPE=" & test & " and qlevel=" & AdjustFromlevel)
        'ended by bhumi
        stbldr.Append(" " & ids & " ")
        stbldr.Append(" group by  test_type,Qn_Category_ID,total_marks,qlevel,qnid ")
        stbldr.Append(" order by Qn_Category_ID,qlevel,newid() ")
        strquery = stbldr.ToString()
        'Dim hds As DataSet
        'Dim hda As SqlDataAdapter
        'Dim ttotal As Integer = 0
        Try
            'strPathDb = ConfigurationManager.AppSettings("PathDb")
            If objconn.connect() = True Then

                hds = New DataSet()
                hda = New SqlDataAdapter(stbldr.ToString, objconn.MyConnection)
                hda.Fill(hds)
                SelQuesTFB = DirectCast(ViewState("SelQuesTFB"), Hashtable)
                If hds.Tables(0).Rows.Count > 0 Then
                    For i As Integer = 0 To hds.Tables(0).Rows.Count - 1
                        If diff <= ttotal Then
                            Exit For
                        End If

                        Dim nar(3) As Integer
                        nar(0) = hds.Tables(0).Rows(i).Item(1).ToString
                        nar(1) = hds.Tables(0).Rows(i).Item(2).ToString
                        nar(2) = hds.Tables(0).Rows(i).Item(5).ToString

                        If ttotal + CInt(hds.Tables(0).Rows(i).Item(5).ToString) <= diff Then
                            ttotal = ttotal + CInt(hds.Tables(0).Rows(i).Item(5).ToString)
                            ht.Add(hds.Tables(0).Rows(i).Item(0).ToString, nar)
                        End If

                    Next
                    If diff <> ttotal Then
                        AdjustQuestions(test, diff, 0, 1, 0, SelQuesTFB)
                    End If
                Else
                    If hds.Tables(0).Rows.Count = 0 Then
                        hda = Nothing
                        hds = Nothing
                    End If
                    If Not objconn.MyConnection Is Nothing Then
                        If objconn.MyConnection.State = ConnectionState.Open Then
                            objconn.disconnect()
                        End If
                    End If
                    AdjustQuestions(test, diff, 0, 1, 0, SelQuesTFB)
                End If
            End If
        Catch ex As Exception
            If Not objconn.MyConnection Is Nothing Then
                If objconn.MyConnection.State = ConnectionState.Open Then
                    objconn.disconnect()
                End If
            End If
            If log.IsDebugEnabled Then
                log.Debug("Error :" & ex.ToString())
            End If
            Throw ex
        Finally
            hda = Nothing
            hds = Nothing
            stbldr = Nothing
            SelQuesTFB = Nothing
            hitem = Nothing
            If Not objconn.MyConnection Is Nothing Then
                If objconn.MyConnection.State = ConnectionState.Open Then
                    objconn.disconnect()
                End If
            End If
            'objconn.disconnect()
        End Try


    End Function

    '****************************************************************************************************************************************
    'Code added by Indravadan Vasava
    'Date : 2011/04/22
    'MethodName:FinalQuestions
    'Purpose: Helps in Adjustment. All Hashtables are Passed by reference and They can be adjusted.
    '****************************************************************************************************************************************
    Public Function FinalQuestions(ByRef htTFB As Hashtable, ByRef htTFI As Hashtable, ByRef htMCB As Hashtable, ByRef htMCI As Hashtable, ByRef htBLB As Hashtable, ByRef htBLI As Hashtable, ByVal WStruct As StructWeight)
        Dim TF As Integer = WStruct.TFBasic + WStruct.TFIMed
        Dim TFCnt As Integer = 0
        Dim tfdiff As Integer = 0

        Dim MC As Integer = WStruct.MCBasic + WStruct.MCIMed
        Dim MCCnt As Integer = 0
        Dim mcdiff As Integer = 0

        Dim BL As Integer = WStruct.BLBasic + WStruct.BLIMed
        Dim BLCnt As Integer = 0
        Dim bldiff As Integer = 0

        Dim titem As DictionaryEntry
        Dim arr() As Integer
        ' Dim ntitem As DictionaryEntry

        Try

            For Each titem In htTFB
                'Dim arr() As Integer = DirectCast(titem.Value, Integer())
                arr = DirectCast(titem.Value, Integer())
                TFCnt = TFCnt + arr(3)
            Next
            For Each titem In htTFI
                'Dim arr() As Integer = DirectCast(titem.Value, Integer())
                arr = DirectCast(titem.Value, Integer())
                TFCnt = TFCnt + arr(3)
            Next

            If TF <> TFCnt Then
                tfdiff = TFCnt - TF
                While tfdiff <> 0
                    tfdiff = TFCnt - TF
                    For Each titem In htTFB
                        htTFB.Remove(titem.Key)
                        Exit For
                    Next
                    TFCnt = 0
                    For Each titem In htTFB
                        'Dim arr() As Integer = DirectCast(titem.Value, Integer())
                        arr = DirectCast(titem.Value, Integer())
                        TFCnt = TFCnt + arr(3)
                    Next
                    For Each titem In htTFI
                        'Dim arr() As Integer = DirectCast(titem.Value, Integer())
                        arr = DirectCast(titem.Value, Integer())
                        TFCnt = TFCnt + arr(3)
                    Next
                End While
            End If

            If MC <> MCCnt Then
                mcdiff = MCCnt - MC
                If MC <> MCCnt Then

                End If

            End If

        Catch ex As Exception
            If log.IsDebugEnabled Then
                log.Debug("Error :" & ex.ToString())
            End If
            Throw ex
        Finally
            arr = Nothing
            'objconn.disconnect()
        End Try
        Return 0
    End Function

    '''' AFTER Transaction
    '****************************************************************************************************************************************
    'Code added by Indravadan Vasava
    'Date : 2011/04/22
    'MethodName:InsertIntoT_Result
    'Purpose: Takes Hashtable with Qnid's ,Testtype and course_id values as Paramters
    ' Then inserts the data in T_Result Table
    '****************************************************************************************************************************************
    Public Sub InsertIntoT_Result(ByVal Ht As Hashtable, ByVal testtype As String, ByVal courseid As String, ByVal objconn As ConnectDb, ByVal strans1 As SqlTransaction)
        Dim objStructureQuePaper As StructureQuePaper
        Dim optionNo As Integer = 0
        Dim myCommand As SqlCommand
        Dim objHashTable As New Hashtable
        Dim htoptions As Hashtable
        Dim strJoinQuery As StringBuilder
        Dim strSql As String
        Dim ht1 As New Hashtable
        Dim myds As DataSet
        Dim myda As SqlDataAdapter
        'Dim strans As SqlTransaction
        Dim QCnt As Integer = 0
        Dim intLoop As Integer = 1
        'If objconn.connect(strPathDb) Then
        'strans = objconn.MyConnection.BeginTransaction 'Start the transaction
        Try

            For Each it As DictionaryEntry In Ht

                Dim gar() As Integer = DirectCast(it.Value, Integer())
                Dim te_type As Integer = gar(0)
                Try

                    '**Added By Bharat Prajapati
                    '**Date: 2011/07/12
                    '**Description: Made one method name as GetInsert() to avoid the duplicate entry in t_result_option table.
                    'SyncLock Ht
                    GetInsert(Ht, testtype, courseid, it, te_type, strans1, objconn)
                    ' End SyncLock

                    'strInsertQuery.Remove(0, strInsertQuery.Length)
                Catch ex As Exception
                    'strans.Rollback()

                    '**Added By Bharat Prajapati
                    '**Date: 2011/07/12
                    '**Description: Made one method name as GetInsert() to avoid the duplicate entry in t_result_option table.
                    'If Exception is occured then follow this cycle againe
                    'SyncLock Ht
                    GetInsert(Ht, testtype, courseid, it, te_type, strans1, objconn)
                    'End SyncLock

                Finally

                    'dss = Nothing
                    'sda = Nothing
                    myCommand = Nothing
                    '  objconn.disconnect()
                End Try

                myCommand = Nothing
                strJoinQuery = New StringBuilder
                strJoinQuery.Append("select m_question.qnid as qid,m_question.test_type as test_type, m_question.question,m_question.Audios, m_options.*, m_question.Qn_Category_ID as QuesTypeID from m_question")
                strJoinQuery.Append(" LEFT OUTER JOIN m_options on m_question.qnid = m_options.qnid and m_question.test_type = m_options.test_type")
                '            strJoinQuery.Append(" where m_question.qnid = '" & it.Key.ToString & "' and m_options.test_type = '" & testtype & "'")
                strJoinQuery.Append(" where m_question.qnid = '" & it.Key.ToString & "' and m_options.test_type = '" & te_type & "'")
                Session.Add("test_type", testtype)

                strSql = strJoinQuery.ToString()
                'Dim myds As New DataSet
                myds = New DataSet()
                myCommand = New SqlCommand(strSql, objconn.MyConnection, strans1)

                'Dim myda As New SqlDataAdapter(myCommand)
                myda = New SqlDataAdapter(myCommand)
                myda.Fill(myds)

                'Dim intLoop As Integer = 1
                'Dim strNo As Integer

                objStructureQuePaper = New StructureQuePaper()
                objStructureQuePaper.QueId = myds.Tables(0).Rows(0).Item("qnid")
                objStructureQuePaper.QueDesc = myds.Tables(0).Rows(0).Item("question")
                objStructureQuePaper.QuesTypeID = myds.Tables(0).Rows(0).Item("QuesTypeID")
                objStructureQuePaper.Test_type = myds.Tables(0).Rows(0).Item("test_type").ToString()
                objStructureQuePaper.QueAudio = myds.Tables(0).Rows(0).Item("Audios").ToString()
                'Dim htoptions As New Hashtable()
                htoptions = New Hashtable()
                For k As Integer = 0 To myds.Tables(0).Rows.Count - 1
                    htoptions.Add(myds.Tables(0).Rows(k).Item("optionid"), myds.Tables(0).Rows(k).Item("option"))
                Next
                objStructureQuePaper.Options = htoptions
                myda = Nothing
                myds = Nothing
                If ViewState("QunCount") IsNot Nothing Then
                    QCnt = DirectCast(ViewState("QunCount"), Integer)
                End If
                QCnt = QCnt + 1
                ViewState.Add("QunCount", QCnt)

                If Session.Item("QuestionPaper") Is Nothing Then
                    objHashTable.Add(QCnt, objStructureQuePaper)
                    Session.Add("QuestionPaper", objHashTable)
                Else
                    'ht1 = DirectCast(Session("QuestionPaper"), Hashtable)
                    'ht1.Add(QCnt, objStructureQuePaper)
                    'Session.Add("QuestionPaper", ht1)
                    objHashTable = DirectCast(Session("QuestionPaper"), Hashtable)
                    objHashTable.Add(QCnt, objStructureQuePaper)
                    Session.Add("QuestionPaper", objHashTable)
                End If

                strJoinQuery.Remove(0, strJoinQuery.Length)
            Next

            'strans.Commit()
        Catch ex As Exception
            'strans.Rollback()
            If log.IsDebugEnabled Then
                log.Debug("Error :" & ex.ToString())
            End If
            Throw ex
        Finally
            ' strans = Nothing
            myds = Nothing
            myda = Nothing
            myCommand = Nothing
            strJoinQuery = Nothing
            htoptions = Nothing
            ht1 = Nothing
            objHashTable = Nothing
            objStructureQuePaper = Nothing
        End Try
        'End If
    End Sub
    Public Sub GetInsert(ByVal Ht As Hashtable, ByVal testtype As String, ByVal courseid As String, ByVal it As DictionaryEntry, ByVal te_type As String, ByVal strans As SqlTransaction, ByVal objconn As ConnectDb)
        '****************start****************************************
        Dim strInsertQuery As StringBuilder
        Dim sda As SqlDataAdapter
        ' Dim strJoinQuery As StringBuilder
        Dim myCommand As SqlCommand
        'Dim strSql As String
        Dim dss As New DataSet
        Dim lastID As String
        Dim insquery As String
        '**** Get the Max+1 result_ID from t_result table**********
        Try
            myCommand = New SqlCommand("select (isnull(Max (result_id),0)+1) from T_result", objconn.MyConnection, strans)
            'Dim sda As New SqlDataAdapter(myCommand)
            sda = New SqlDataAdapter(myCommand)
            sda.Fill(dss)
            'Max+1 id will be stored in lastID variable
            'Dim lastID As String = dss.Tables(0).Rows(0).Item(0).ToString
            lastID = dss.Tables(0).Rows(0).Item(0).ToString
            '*********Insert values in T_result table *********************
            strInsertQuery = New StringBuilder
            strInsertQuery.Append("INSERT INTO t_result (result_id,userid,test_type,qno,Course_ID,optionid) VALUES (")
            strInsertQuery.Append(lastID & ", ")
            strInsertQuery.Append(Session.Item("userid") & ", ")
            strInsertQuery.Append(" '" & te_type & "', ")
            strInsertQuery.Append(it.Key.ToString & ", ")
            strInsertQuery.Append(courseid & ",")
            strInsertQuery.Append("0)")


            myCommand = New SqlCommand(strInsertQuery.ToString(), objconn.MyConnection, strans)
            myCommand.ExecuteNonQuery()


            '*********Insert records in t_result_options table
            'Dim insquery As String = "insert into T_Result_option(result_id,option_id) Values(" + lastID + ",0)"
            insquery = "insert into T_Result_option(result_id,option_id) Values(" + lastID + ",0)"
            myCommand = Nothing
            myCommand = New SqlCommand(insquery, objconn.MyConnection, strans)
            myCommand.ExecuteNonQuery()
            '********************************End**************************************
        Catch ex As Exception
            If log.IsDebugEnabled Then
                log.Debug("Error :" & ex.ToString())
            End If
            'If objconn IsNot Nothing Then
            '    If objconn.MyConnection.State = ConnectionState.Open Then
            '        objconn.disconnect()
            '    End If
            'End If

        Finally
            dss = Nothing
            myCommand = Nothing
            sda = Nothing
            strInsertQuery = Nothing
            'If objconn IsNot Nothing Then
            '    If objconn.MyConnection.State = ConnectionState.Open Then
            '        objconn.disconnect()
            '    End If
            'End If
        End Try
    End Sub

    '' Befor Transaction
    '' ''****************************************************************************************************************************************
    '' ''Code added by Indravadan Vasava
    '' ''Date : 2011/04/22
    '' ''MethodName:InsertIntoT_Result
    '' ''Purpose: Takes Hashtable with Qnid's ,Testtype and course_id values as Paramters
    '' '' Then inserts the data in T_Result Table
    '' ''****************************************************************************************************************************************
    ' ''Public Sub InsertIntoT_Result(ByVal Ht As Hashtable, ByVal testtype As String, ByVal courseid As String)
    ' ''    Dim objStructureQuePaper As New StructureQuePaper()
    ' ''    Dim optionNo As Integer = 0
    ' ''    Dim myCommand As SqlCommand
    ' ''    Dim strInsertQuery As StringBuilder
    ' ''    Dim strJoinQuery As StringBuilder
    ' ''    Dim strSql As String

    ' ''    For Each it As DictionaryEntry In Ht

    ' ''        'If testtype = "10" Then
    ' ''        '    If 1 = 1 Then

    ' ''        '    End If
    ' ''        'End If
    ' ''        'If testtype = "9" Then
    ' ''        '    If 1 = 1 Then

    ' ''        '    End If
    ' ''        'End If
    ' ''        'If testtype = "2" Then
    ' ''        '    If 1 = 1 Then

    ' ''        '    End If
    ' ''        'End If
    ' ''        'If testtype = "4" Then
    ' ''        '    If 1 = 1 Then

    ' ''        '    End If
    ' ''        'End If

    ' ''        Dim gar() As Integer = DirectCast(it.Value, Integer())

    ' ''        'If gar(0).ToString <> testtype Then
    ' ''        '    Exit Sub
    ' ''        'End If
    ' ''        Dim te_type As Integer = gar(0)

    ' ''        strInsertQuery = New StringBuilder
    ' ''        strInsertQuery.Append("INSERT INTO t_result VALUES (")
    ' ''        strInsertQuery.Append(Session.Item("userid") & ", ")
    ' ''        strInsertQuery.Append(" '" & te_type & "', ")
    ' ''        strInsertQuery.Append(it.Key.ToString & ", ")
    ' ''        strInsertQuery.Append(courseid & ",")
    ' ''        strInsertQuery.Append("0)")
    ' ''        If objconn.connect(strPathDb) Then
    ' ''            myCommand = New SqlCommand(strInsertQuery.ToString(), objconn.MyConnection)
    ' ''            myCommand.ExecuteNonQuery()
    ' ''            strInsertQuery.Remove(0, strInsertQuery.Length)

    ' ''            Dim dss As New DataSet
    ' ''            Dim sda As New SqlDataAdapter("select Max (result_id) from T_result", objconn.MyConnection)
    ' ''            Try
    ' ''                sda.Fill(dss)
    ' ''                Dim lastID As String = dss.Tables(0).Rows(0).Item(0).ToString
    ' ''                Dim insquery As String = "insert into T_Result_option(result_id,option_id) Values(" + lastID + ",0)"
    ' ''                myCommand = Nothing
    ' ''                myCommand = New SqlCommand(insquery, objconn.MyConnection)
    ' ''                myCommand.ExecuteNonQuery()
    ' ''            Catch ex As Exception
    ' ''                If Not objconn.MyConnection Is Nothing Then
    ' ''                    If objconn.MyConnection.State = ConnectionState.Open Then
    ' ''                        objconn.disconnect()
    ' ''                    End If
    ' ''                End If
    ' ''                If log.IsDebugEnabled Then
    ' ''                    log.Debug("Error :" & ex.ToString())
    ' ''                End If
    ' ''                Response.Redirect("error.aspx?err=" & ex.Message, False)
    ' ''            Finally
    ' ''                If Not objconn.MyConnection Is Nothing Then
    ' ''                    If objconn.MyConnection.State = ConnectionState.Open Then
    ' ''                        objconn.disconnect()
    ' ''                    End If
    ' ''                End If
    ' ''                dss = Nothing
    ' ''                sda = Nothing
    ' ''                myCommand = Nothing
    ' ''                '  objconn.disconnect()
    ' ''            End Try


    ' ''        End If
    ' ''        myCommand = Nothing
    ' ''        strJoinQuery = New StringBuilder
    ' ''        strJoinQuery.Append("select m_question.qnid as qid,m_question.test_type as test_type, m_question.question, m_options.*, m_question.Qn_Category_ID as QuesTypeID  from m_question")
    ' ''        strJoinQuery.Append(" LEFT OUTER JOIN m_options on m_question.qnid = m_options.qnid and m_question.test_type = m_options.test_type")
    ' ''        '            strJoinQuery.Append(" where m_question.qnid = '" & it.Key.ToString & "' and m_options.test_type = '" & testtype & "'")
    ' ''        strJoinQuery.Append(" where m_question.qnid = '" & it.Key.ToString & "' and m_options.test_type = '" & te_type & "'")
    ' ''        Session.Add("test_type", testtype)

    ' ''        strSql = strJoinQuery.ToString()
    ' ''        Dim myds As New DataSet
    ' ''        Dim myda As New SqlDataAdapter(strSql, objconn.MyConnection)

    ' ''        Try
    ' ''            If objconn.connect(strPathDb) Then
    ' ''                myda.Fill(myds)
    ' ''            End If
    ' ''        Catch ex As Exception
    ' ''            If Not objconn.MyConnection Is Nothing Then
    ' ''                If objconn.MyConnection.State = ConnectionState.Open Then
    ' ''                    objconn.disconnect()
    ' ''                End If
    ' ''            End If
    ' ''            If log.IsDebugEnabled Then
    ' ''                log.Debug("Error :" & ex.ToString())
    ' ''            End If
    ' ''            Response.Redirect("error.aspx?err=" & ex.Message, False)
    ' ''        Finally
    ' ''            If Not objconn.MyConnection Is Nothing Then
    ' ''                If objconn.MyConnection.State = ConnectionState.Open Then
    ' ''                    objconn.disconnect()
    ' ''                End If
    ' ''            End If
    ' ''        End Try


    ' ''        Dim intLoop As Integer = 1
    ' ''        Dim strNo As Integer

    ' ''        objStructureQuePaper = New StructureQuePaper()
    ' ''        objStructureQuePaper.QueId = myds.Tables(0).Rows(0).Item("qnid")
    ' ''        objStructureQuePaper.QueDesc = myds.Tables(0).Rows(0).Item("question")
    ' ''        objStructureQuePaper.QuesTypeID = myds.Tables(0).Rows(0).Item("QuesTypeID")
    ' ''        objStructureQuePaper.Test_type = myds.Tables(0).Rows(0).Item("test_type").ToString()
    ' ''        Dim htoptions As New Hashtable()
    ' ''        For k As Integer = 0 To myds.Tables(0).Rows.Count - 1
    ' ''            htoptions.Add(myds.Tables(0).Rows(k).Item("optionid"), myds.Tables(0).Rows(k).Item("option"))
    ' ''        Next
    ' ''        objStructureQuePaper.Options = htoptions
    ' ''        myda = Nothing
    ' ''        myds = Nothing

    ' ''        QCnt = QCnt + 1

    ' ''        If Session("QuestionPaper") Is Nothing Then
    ' ''            objHashTable.Add(QCnt, objStructureQuePaper)
    ' ''            Session.Add("QuestionPaper", objHashTable)
    ' ''        Else
    ' ''            Dim ht1 As Hashtable = DirectCast(Session("QuestionPaper"), Hashtable)
    ' ''            ht1.Add(QCnt, objStructureQuePaper)
    ' ''            Session.Add("QuestionPaper", ht1)
    ' ''        End If

    ' ''        strJoinQuery.Remove(0, strJoinQuery.Length)
    ' ''        ' objconn.disconnect()
    ' ''        'If Not objconn.MyConnection Is Nothing Then
    ' ''        '    If objconn.MyConnection.State = ConnectionState.Open Then
    ' ''        '        objconn.disconnect()
    ' ''        '    End If
    ' ''        'End If
    ' ''    Next
    ' ''End Sub

    '****************************************************************************************************************************************
    'Code added by Indravadan Vasava
    'Date : 2011/04/22
    'MethodName:FirstAttempt
    'Purpose: I takes Question no as parameter and checks wether this question is appeared in front of student for the first time
    'or he had seen it before powerfailure
    '****************************************************************************************************************************************
    Public Function FirstAttempt(ByVal qno As String) As Boolean
        Dim flag As Boolean = True
        Dim qn As Integer = Convert.ToInt32(qno)

        If Not ViewState("at") Is Nothing Then
            Dim at As SortedList = DirectCast(ViewState("at"), SortedList)
            For i As Integer = 0 To at.Count - 1

                If at.ContainsKey(qn) = True Then
                    Return False
                    Exit Function
                Else
                    flag = True
                End If
            Next
        Else
            flag = True
        End If


        Return flag
    End Function



    Public Function GetCandidateResult(ByVal CandidateID As String, ByVal courseID As String) As Hashtable
        Dim ht As New Hashtable
        Dim strBldr As New StringBuilder
        Dim da As SqlDataAdapter
        Dim ds As DataSet
        Dim objconn As New ConnectDb

        strBldr.Append("  select * from(select tcs.userid,  (mui.SurName +' '+mui.Name+' '+isnull(mui.Middlename,''))as username,  mc.Course_code,  mc.Course_ID, ")
        strBldr.Append("  tcs.written_test_appear_date as appearancedate,  tcs.appearedflag as appearedflag,  mc.course_name,mce.Center_Name,  ")
        strBldr.Append("  tcs.total_marks,  tcs.total_passmarks,  isnull(obtained1.obtained_marks,0) as obtained_marks,  ")
        strBldr.Append("  (case  when  isnull((obtained1.obtained_marks*100)/tcs.total_marks,0) >= 75 then  'A+'  when   ")
        strBldr.Append(" isnull((obtained1.obtained_marks*100)/tcs.total_marks,0) >=60 then 'A'  when isnull((obtained1.obtained_marks*100)/tcs.total_marks,0) >= 50 then 'B' ")
        strBldr.Append("  WHEN (obtained1.obtained_marks*100)/tcs.total_marks is null then null else 'C' End ) as Grad  ")
        strBldr.Append("  ,(case WHEN obtained1.obtained_marks >= tcs.total_passmarks ")
        strBldr.Append("  then 'Pass'  WHEN obtained1.obtained_marks is null then null  ELSE 'Fail'  END) as Status  FROM T_Candidate_Status as tcs  ")
        strBldr.Append("  left join M_USER_INFO as mui  on tcs.userid=mui.userid  left join m_course as mc  on mc.course_id=tcs.course_id  Left Join  ")
        strBldr.Append("  (select sum(temp.obtained_marks) as obtained_marks,temp.course_id,temp.userid from (select  (  case  WHEN mq.Qn_Category_ID=3 then  ")
        strBldr.Append("  (  case  WHEN mqa.sub_id=tro.sub_id then  (Case  WHEN tro.option_id=mqa.Correct_Opt_Id then  count(mqa.Correct_Opt_Id) ELSE 0  END)  ELSE 0  End  ) ")
        strBldr.Append("   WHEN mq.Qn_Category_ID=2 then  (  CASE   WHEN tro.option_id=mqa.Correct_Opt_Id then  count(mqa.Correct_Opt_Id) ELSE 0 End  )  WHEN mq.Qn_Category_ID=1 then  ")
        strBldr.Append("  (  CASE   WHEN tro.option_id=mqa.Correct_Opt_Id then  SUM(mq.Total_Marks) ELSE 0  End  )  End  ) as obtained_marks  ,mc.course_id,mui.userid ")
        strBldr.Append("   from m_question as mq  left join M_Question_Answer as mqa  on mqa.Qn_ID=mq.qnid and mqa.test_type=mq.test_type  left join t_result as tr  ")
        strBldr.Append("  on tr.qno=mq.qnid  AND tr.test_type=mq.test_type  left join m_user_info as mui  on mui.userid=tr.userid  left join m_course as mc  on ")
        strBldr.Append("  mc.course_id=tr.course_id  left join m_testinfo as mti  on mti.test_type=tr.test_type  left join t_result_option as tro  on tro.result_id=tr.result_id  ")
        strBldr.Append("  and tr.test_type=mti.test_type  and tro.option_id=mqa.Correct_Opt_Id  group by mq.total_marks,mc.course_id,  mq.total_marks,mq.qnid,mqa.Sub_id,   ")
        strBldr.Append(" mqa.Correct_Opt_Id, tro.option_id, mq.Qn_Category_ID, tro.sub_id, mui.userid  )temp  group by temp.course_id,temp.userid  )as obtained1  on ")
        strBldr.Append("  obtained1.course_id=tcs.course_id  and tcs.userid=obtained1.userid  left join M_Centers as mce  on mce.Center_ID=mui.Center_ID left join  ")
        strBldr.Append(" M_Main_Course as mmc  on mmc.Main_Course_ID=mc.Main_Course_ID )temp  where temp.userid=" & CandidateID & " and temp.Course_ID=" & courseID & " order by temp.username  ")



        Try
            If objconn.connect() = True Then
                da = New SqlDataAdapter(strBldr.ToString, objconn.MyConnection)
                ds = New DataSet
                da.Fill(ds)

                '' Code for putting details in HT
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    ht.Add("Name", ds.Tables(0).Rows(0).Item(1).ToString)
                    ht.Add("Centrename", ds.Tables(0).Rows(0).Item(7).ToString)
                    ht.Add("Coursename", ds.Tables(0).Rows(0).Item(6).ToString)
                    ht.Add("Date", Date.Today.ToString("dd/MM/yyyy"))
                    ht.Add("TotalMark", ds.Tables(0).Rows(0).Item(8).ToString)
                    ht.Add("MarksObtained", ds.Tables(0).Rows(0).Item(10).ToString)
                    ht.Add("Status", ds.Tables(0).Rows(0).Item(12).ToString)
                Next

                '------------------------START-----------------------------
                'Added By: Bharat Prajapati
                'Date: 2014/04/29
                'Description: Displaying result data after finished exam
                Session.Add("result", ht)
                '------------------------END-----------------------------

                If objconn IsNot Nothing Then
                    objconn.disconnect()
                End If
            End If

        Catch ex As Exception
            If log.IsDebugEnabled Then
                log.Debug("Error :" & ex.ToString())
            End If
            If objconn IsNot Nothing Then
                If objconn.MyConnection.State = ConnectionState.Open Then
                    objconn.disconnect()
                End If
            End If
        Finally
            If objconn IsNot Nothing Then
                If objconn.MyConnection.State = ConnectionState.Open Then
                    objconn.disconnect()
                End If
            End If
            objconn = Nothing
            da = Nothing
            ds = Nothing
        End Try
        Return ht


    End Function


    Public Sub SendMailTo(ByVal strTo As String, ByVal studentName As String, ByVal Centrename As String, ByVal Coursename As String, ByVal ExamDate As String, ByVal TotalMark As String, ByVal MarksObtained As String, ByVal Status As String)
        'Dim strEmail, msg, strFName, LoginName, pwd As String
        Dim msg As String
        Dim filename As String = ""
        'Dim mail As New Web.Mail.MailMessage
        Dim objStreamReader As StreamReader
        Dim strEmaiId As String
        Dim message As New Web.Mail.MailMessage
        Dim strSmtpServer As String
        Dim smtp As New Net.Mail.SmtpClient()

        strEmaiId = ConfigurationManager.AppSettings("AdminEmailID")
        ' strEmail = "indravadan@usindia.com"
        filename = Server.MapPath("~\Mail Template\Template_Exam appeared.txt")
        objStreamReader = File.OpenText(filename)

        msg = objStreamReader.ReadToEnd
        msg = Replace(msg, "&#Name#&", studentName)
        msg = Replace(msg, "&#Centrename#&", Centrename)
        msg = Replace(msg, "&#Coursename#&", Coursename)
        msg = Replace(msg, "&#Date#&", ExamDate)
        msg = Replace(msg, "&#TotalMark#&", TotalMark)
        msg = Replace(msg, "&#MarksObtained#&", MarksObtained)
        msg = Replace(msg, "&#Status#&", Status)

        '' New Code to send Mail
        'Dim message As New Web.Mail.MailMessage()
        message.To = strTo
        message.From = strEmaiId
        message.Subject = "Exam Status"
        message.Body = msg
        message.BodyFormat = MailFormat.Text

        '*************Added code for Server Authentication
        message.Fields("http://schemas.microsoft.com/cdo/configuration/smtsperver") = ConfigurationManager.AppSettings("SmtpServerIP")
        message.Fields("http://schemas.microsoft.com/cdo/configuration/smtpserverport") = ConfigurationManager.AppSettings("SmtpServerPort")
        message.Fields("http://schemas.microsoft.com/cdo/configuration/sendusing") = 2


        ' Dim strSmtpServer As String
        strSmtpServer = ConfigurationManager.AppSettings("SmtpServer")

        'Dim smtp As New Net.Mail.SmtpClient()
        smtp.EnableSsl = False

        smtp.Host = ConfigurationManager.AppSettings("hostname")
        smtp.Credentials = New Net.NetworkCredential(ConfigurationManager.AppSettings("username"), ConfigurationManager.AppSettings("password"))
        smtp.DeliveryMethod = SmtpDeliveryMethod.PickupDirectoryFromIis
        smtp.Send(message.From, message.To, message.Subject, message.Body)
    End Sub

    Private Sub Page_PreLoad(sender As Object, e As EventArgs) Handles Me.PreLoad

    End Sub

    '*****************End*********** Monal Shah*****************End***********************************

    Private Sub Page_Unload1(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Unload

    End Sub
    ' --------------------------------------------
    'Code added by Pragnesha 
    'Purpose: play Audio Question  using Audio control 
    '---------------------------------------------

#Region "CheckAudio Function"
    'Purpose: This is check Audio method that checks data return from database.

    Public Function CheckAudio(ByVal value As String) As String()
        Dim str(1) As String
        Try
            If value.Contains("<br/>") Then
                str(0) = value.Substring(0, value.IndexOf("<"))
                str(1) = value.Substring(value.IndexOf("<audio"))

            ElseIf value.Contains("<audio") Then
                str(0) = ""
                str(1) = value

            Else
                str(0) = value
                str(1) = ""
            End If
            Return str
        Catch ex As Exception
            If log.IsDebugEnabled Then
                log.Debug("Error :" & ex.ToString())
            End If
            Throw ex
        End Try
    End Function
#End Region

   
    '  /------------Ended by Pragnesha 2017/10/25--------------/

  
End Class